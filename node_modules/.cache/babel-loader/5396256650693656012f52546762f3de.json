{"ast":null,"code":"import _objectSpread from \"/home/madan/Documents/workspace/artwork/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/madan/Documents/workspace/artwork/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/madan/Documents/workspace/artwork/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/madan/Documents/workspace/artwork/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/madan/Documents/workspace/artwork/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/madan/Documents/workspace/artwork/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/madan/Documents/workspace/artwork/src/components/profile/Components/Collection.js\";\nimport React, { Component } from 'react';\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport CollectionItem from './CollectionItem';\n\nvar Collection =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Collection, _Component);\n\n  function Collection() {\n    var _this;\n\n    _classCallCheck(this, Collection);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Collection).call(this));\n\n    _this.getCollection = function () {\n      var paramId = _this.props.paramId;\n      var db = firebase.firestore();\n      console.log(\"paramId\", paramId); // getting posts of \"folowing users\"\n\n      return db.collection('users').doc(paramId).collection('collection').orderBy('time', 'desc').limit(10).get().then(function (documentSnapshots) {\n        // getting the last visible document for pagination\n        _this.lastVisible = documentSnapshots.docs[documentSnapshots.docs.length - 1];\n        documentSnapshots.forEach(function (docs) {\n          var obj = _objectSpread({}, docs.data(), {\n            id: docs.id\n          });\n\n          _this.collection.push(obj);\n\n          _this.setState(function () {\n            return {\n              collection: _this.collection\n            };\n          }, function () {\n            console.log(\"collection: \", _this.state);\n          });\n        });\n      });\n    };\n\n    _this.collection = [];\n    _this.lastVisible = '';\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(Collection, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.getCollection();\n    } // renewPost = () => {\n    //   const db = firebase.firestore()\n    //   const lastVisible = this.lastVisible ? this.lastVisible : false\n    //\n    //   if(this.lastVisible) {\n    //     return db.collection('projects')\n    //       .orderBy('createdAt', 'desc')\n    //       .startAfter(lastVisible)\n    //       .limit(5)\n    //       .get().then(documentSnapshots => {\n    //\n    //         // getting the last visible document for pagination\n    //         this.lastVisible = documentSnapshots.docs[documentSnapshots.docs.length-1]\n    //\n    //         documentSnapshots.forEach((docs) => {\n    //           let obj = {\n    //             ...docs.data(),\n    //             id: docs.id\n    //           }\n    //           this.post.push(obj)\n    //           this.setState(() => {\n    //             return {\n    //               posts: this.post\n    //             }\n    //           })\n    //         })\n    //       })\n    //   }\n    // }\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var art = this.state.collection ? this.state.collection : null;\n      console.log(\"art: \", this.state.collection);\n      return React.createElement(\"div\", {\n        className: \"section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, art === null ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, art && art.map(function (art) {\n        return React.createElement(\"div\", {\n          key: art.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }, art.isActive ? React.createElement(CollectionItem, {\n          art: art,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }) : null);\n      })) : React.createElement(\"div\", {\n        className: \"no_post white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"grey-text center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"  Save posts to your collection and let the world see what you love! \"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }), \"Anyone who visits here can view your collections\")));\n    }\n  }]);\n\n  return Collection;\n}(Component);\n\nexport default Collection;","map":{"version":3,"sources":["/home/madan/Documents/workspace/artwork/src/components/profile/Components/Collection.js"],"names":["React","Component","firebase","CollectionItem","Collection","getCollection","paramId","props","db","firestore","console","log","collection","doc","orderBy","limit","get","then","documentSnapshots","lastVisible","docs","length","forEach","obj","data","id","push","setState","state","art","map","isActive"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport CollectionItem from './CollectionItem'\n\nclass Collection extends Component {\n  constructor() {\n    super()\n    this.collection = []\n    this.lastVisible = ''\n    this.state = { }\n  }\n\n  componentWillMount() {\n    this.getCollection()\n  }\n\n  // renewPost = () => {\n  //   const db = firebase.firestore()\n  //   const lastVisible = this.lastVisible ? this.lastVisible : false\n  //\n  //   if(this.lastVisible) {\n  //     return db.collection('projects')\n  //       .orderBy('createdAt', 'desc')\n  //       .startAfter(lastVisible)\n  //       .limit(5)\n  //       .get().then(documentSnapshots => {\n  //\n  //         // getting the last visible document for pagination\n  //         this.lastVisible = documentSnapshots.docs[documentSnapshots.docs.length-1]\n  //\n  //         documentSnapshots.forEach((docs) => {\n  //           let obj = {\n  //             ...docs.data(),\n  //             id: docs.id\n  //           }\n  //           this.post.push(obj)\n  //           this.setState(() => {\n  //             return {\n  //               posts: this.post\n  //             }\n  //           })\n  //         })\n  //       })\n  //   }\n  // }\n\n  getCollection = () => {\n    const paramId = this.props.paramId\n\n    const db = firebase.firestore()\n    console.log(\"paramId\", paramId)\n    // getting posts of \"folowing users\"\n    return db.collection('users').doc(paramId)\n      .collection('collection')\n      .orderBy('time', 'desc')\n      .limit(10)\n      .get().then(documentSnapshots => {\n\n        // getting the last visible document for pagination\n        this.lastVisible = documentSnapshots.docs[documentSnapshots.docs.length-1]\n\n        documentSnapshots.forEach((docs) => {\n          let obj = {\n            ...docs.data(),\n            id: docs.id\n          }\n          this.collection.push(obj)\n          this.setState(() => {\n            return {\n              collection: this.collection\n            }\n          }, () => {\n            console.log(\"collection: \", this.state)\n          })\n        })\n      })\n    }\n\n  render() {\n    const art = this.state.collection ? this.state.collection : null\n    console.log(\"art: \", this.state.collection)\n    return (\n      <div className=\"section\">\n        { art === null\n          ? <div>\n              { art && art.map(art => {\n                return (\n                  <div key={art.id}>\n                    { art.isActive\n                      ? <CollectionItem art={art} />\n                      : null }\n                  </div>\n                )\n              })}\n            </div>\n          : <div className=\"no_post white\">\n              <p className=\"grey-text center\">\n                <b>  Save posts to your collection and let the world see what you love! </b>\n                  <br/>\n                 Anyone who visits here can view your collections\n              </p>\n            </div>\n         }\n      </div>\n    )\n  }\n}\n\nexport default Collection\n"]},"metadata":{},"sourceType":"module"}