{"ast":null,"code":"import _classCallCheck from \"/home/madan/Documents/workspace/artwork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/madan/Documents/workspace/artwork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/madan/Documents/workspace/artwork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/madan/Documents/workspace/artwork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/madan/Documents/workspace/artwork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/madan/Documents/workspace/artwork/src/components/dashboard/Dashboard.js\";\nimport React, { Component } from 'react';\nimport ProjectList from '../projects/ProjectList';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { Redirect } from 'react-router-dom';\nimport Notification from './Notification';\nimport Footer from './Footer';\nimport { getData as _getData } from '../../utils/GetSortedPost'; // retrieving data from cloud firestore\n\nimport { allPosts } from '../../utils/GetSortedPost'; // getting final data of posts\n\nimport { passPostToStore as _passPostToStore } from '../../store/actions/postsToStore';\n\nvar Dashboard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Dashboard, _Component);\n\n  function Dashboard() {\n    var _this;\n\n    _classCallCheck(this, Dashboard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Dashboard).call(this));\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(Dashboard, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {// console.log(\"comp\")\n      //   this.setState({projects: []})\n      // getData()\n      // .then(() => {\n      //   console.log(\"see\", allPosts)\n      //   this.setState(() => {\n      //     return{\n      //       projects: [...allPosts]\n      //     }\n      //   }, () => {\n      //     this.props.passPostToStore(this.state)\n      //   })\n      // })\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          projects = _this$props.projects,\n          auth = _this$props.auth,\n          notifications = _this$props.notifications;\n      if (!auth.uid) return React.createElement(Redirect, {\n        to: \"/signin\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }); // redirecting signed out users to signin/signup page\n\n      return React.createElement(\"div\", {\n        className: \"dashboard container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col l8 m12 s12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(ProjectList, {\n        projects: projects,\n        auth: auth,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col l4 hide-on-med-and-down\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(Notification, {\n        notifications: notifications,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"footer-cover\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Dashboard;\n}(Component);\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    passPostToStore: function passPostToStore(posts) {\n      return dispatch(_passPostToStore(posts));\n    },\n    getData: function getData(posts) {\n      return dispatch(_getData(posts));\n    }\n  };\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  console.log(state);\n  return {\n    projects: state.posts.projects,\n    initials: state.firebase.profile.initials,\n    auth: state.firebase.auth,\n    notifications: state.firestore.ordered.notifications\n  };\n};\n\nexport default compose(firestoreConnect([{\n  collection: 'projects',\n  orderBy: ['createdAt', 'desc']\n}, {\n  collection: 'notifications',\n  limit: 3,\n  orderBy: ['time', 'desc']\n}]), connect(mapStateToProps, mapDispatchToProps))(Dashboard);","map":{"version":3,"sources":["/home/madan/Documents/workspace/artwork/src/components/dashboard/Dashboard.js"],"names":["React","Component","ProjectList","connect","compose","firestoreConnect","Redirect","Notification","Footer","getData","allPosts","passPostToStore","Dashboard","state","props","projects","auth","notifications","uid","mapDispatchToProps","dispatch","posts","mapStateToProps","console","log","initials","firebase","profile","firestore","ordered","collection","orderBy","limit"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport ProjectList from '../projects/ProjectList'\nimport { connect } from 'react-redux'\nimport { compose } from 'redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { Redirect } from 'react-router-dom'\nimport Notification from './Notification'\nimport Footer from './Footer'\nimport { getData } from '../../utils/GetSortedPost' // retrieving data from cloud firestore\nimport { allPosts } from '../../utils/GetSortedPost' // getting final data of posts\nimport { passPostToStore } from '../../store/actions/postsToStore'\n\nclass Dashboard extends Component {\n  constructor() {\n    super()\n    this.state = {}\n  }\n\n  componentWillMount() {\n    // console.log(\"comp\")\n    //   this.setState({projects: []})\n      // getData()\n      // .then(() => {\n      //   console.log(\"see\", allPosts)\n      //   this.setState(() => {\n      //     return{\n      //       projects: [...allPosts]\n      //     }\n      //   }, () => {\n      //     this.props.passPostToStore(this.state)\n      //   })\n      // })\n\n  }\n\n  render() {\n    const { projects, auth, notifications } = this.props\n    if (!auth.uid) return <Redirect to='/signin' /> // redirecting signed out users to signin/signup page\n    return(\n      <div className=\"dashboard container\">\n        <div className=\"row\">\n          <div className=\"col l8 m12 s12\">\n            <ProjectList projects={projects} auth={auth}/>\n          </div>\n          <div className=\"col l4 hide-on-med-and-down\">\n            <Notification notifications={notifications} />\n          </div>\n        </div>\n        <div className=\"footer-cover\">\n          <Footer />\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    passPostToStore: (posts) => dispatch(passPostToStore(posts)),\n    getData: (posts) => dispatch(getData(posts))\n  }\n}\n\nconst mapStateToProps = (state) => {\n  console.log(state)\n  return {\n    projects: state.posts.projects,\n    initials: state.firebase.profile.initials,\n    auth: state.firebase.auth,\n    notifications: state.firestore.ordered.notifications\n  }\n}\n\nexport default compose (\n  firestoreConnect([\n      { collection: 'projects',\n        orderBy: ['createdAt', 'desc']\n      },\n      { collection: 'notifications',\n        limit: 3,\n        orderBy: ['time', 'desc']\n      }\n    ]),\n  connect(mapStateToProps, mapDispatchToProps)\n)(Dashboard)\n"]},"metadata":{},"sourceType":"module"}