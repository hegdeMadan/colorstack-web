{"ast":null,"code":"import _objectSpread from \"/home/madan/Documents/workspace/artwork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/madan/Documents/workspace/artwork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/madan/Documents/workspace/artwork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/madan/Documents/workspace/artwork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/madan/Documents/workspace/artwork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/madan/Documents/workspace/artwork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/madan/Documents/workspace/artwork/src/components/dashboard/Dashboard.js\";\nimport React, { Component } from 'react';\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { Redirect } from 'react-router-dom'; // import Notification from './Notification'\n\nimport ProjectList from '../projects/ProjectList'; // import Footer from './Footer'\n// import Spinner from './Spinner'\n\nimport CreatePost from '../projects/CreatePost';\n\nvar Dashboard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Dashboard, _Component);\n\n  function Dashboard() {\n    var _this;\n\n    _classCallCheck(this, Dashboard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Dashboard).call(this));\n\n    _this.renewPost = function () {\n      var db = firebase.firestore();\n      var ref = db.collection('projects');\n    };\n\n    _this.getPosts = function () {\n      var uid = _this.props.auth.uid;\n\n      if (uid) {\n        var post = [];\n        var db = firebase.firestore(); // retrieving \"following\" id to get related posts\n\n        var data = doc.data();\n        var _uid = data.userid;\n        console.log(\"following: \", data, _uid); // getting posts of \"folowing users\"\n\n        return db.collection('projects').orderBy('createdAt', 'desc').limit(5).get().then(function (querySnapshots) {\n          // getting the last visible document for pagination\n          _this.lastVisible = documentSnapshots.docs[documentSnapshots.docs.length - 1];\n          querySnapshots.forEach(function (docs) {\n            var obj = _objectSpread({}, docs.data(), {\n              id: docs.id\n            });\n\n            post.push(obj);\n\n            _this.setState(function () {\n              return {\n                posts: post\n              };\n            });\n          });\n        });\n      } else {\n        return React.createElement(Redirect, {\n          to: \"/signin\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        });\n      }\n    };\n\n    _this.lastVisible;\n    _this.state = {};\n    return _this;\n  } // TODO: get the posts manually and dispatch it\n  // to the store\n  // TODO: set data to local storage once component\n  // successfully mounted\n\n\n  _createClass(Dashboard, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.getPosts();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // console.log(\"project: \", this.state)\n      console.log(\"st: \", this.state);\n      var auth = this.props.auth;\n      var posts = this.state.posts;\n      if (!auth.uid) return React.createElement(Redirect, {\n        to: \"/signin\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }); // redirecting signed out users to signin/signup page\n\n      return React.createElement(\"div\", {\n        className: \"dashboard container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col l5 push-l1 m12 s12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"hide-on-large-only\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(CreatePost, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      })), posts ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(ProjectList, {\n        projects: posts,\n        auth: auth,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"load_more\",\n        onClick: this.renewPost,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"Load More\", React.createElement(\"i\", {\n        className: \"material-icons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"autorenew\")))) : null), React.createElement(\"div\", {\n        className: \"col l4 offset-l2 hide-on-med-and-down\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(CreatePost, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"footer-cover\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Dashboard;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  // console.log(state)\n  return {\n    projects: state.firestore.ordered.projects,\n    initials: state.firebase.profile.initials,\n    auth: state.firebase.auth,\n    notifications: state.firestore.ordered.notifications\n  };\n};\n\nexport default compose(firestoreConnect([{\n  collection: 'projects',\n  orderBy: ['createdAt', 'desc']\n}, {\n  collection: 'notifications',\n  limit: 3,\n  orderBy: ['time', 'desc']\n}]), connect(mapStateToProps))(Dashboard);","map":{"version":3,"sources":["/home/madan/Documents/workspace/artwork/src/components/dashboard/Dashboard.js"],"names":["React","Component","firebase","connect","compose","firestoreConnect","Redirect","ProjectList","CreatePost","Dashboard","renewPost","db","firestore","ref","collection","getPosts","uid","props","auth","post","data","doc","userid","console","log","orderBy","limit","get","then","querySnapshots","lastVisible","documentSnapshots","docs","length","forEach","obj","id","push","setState","posts","state","mapStateToProps","projects","ordered","initials","profile","notifications"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport { connect } from 'react-redux'\nimport { compose } from 'redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { Redirect } from 'react-router-dom'\n// import Notification from './Notification'\nimport ProjectList from '../projects/ProjectList'\n// import Footer from './Footer'\n// import Spinner from './Spinner'\nimport CreatePost from '../projects/CreatePost'\n\nclass Dashboard extends Component {\n  constructor() {\n    super()\n    this.lastVisible\n    this.state = {}\n  }\n\n  // TODO: get the posts manually and dispatch it\n  // to the store\n  // TODO: set data to local storage once component\n  // successfully mounted\n\n  componentWillMount() {\n    this.getPosts()\n  }\n\n  renewPost = () => {\n    const db = firebase.firestore()\n    const ref = db.collection('projects')\n\n\n  }\n\n  getPosts = () => {\n    const uid = this.props.auth.uid\n    if(uid) {\n      const post = []\n\n      const db = firebase.firestore()\n      // retrieving \"following\" id to get related posts\n      let data = doc.data()\n      let uid = data.userid\n      console.log(\"following: \", data, uid)\n\n      // getting posts of \"folowing users\"\n      return db.collection('projects')\n        .orderBy('createdAt', 'desc')\n        .limit(5)\n        .get().then(querySnapshots => {\n\n          // getting the last visible document for pagination\n          this.lastVisible = documentSnapshots.docs[documentSnapshots.docs.length-1]\n\n          querySnapshots.forEach((docs) => {\n            let obj = {\n              ...docs.data(),\n              id: docs.id\n            }\n            post.push(obj)\n            this.setState(() => {\n              return {\n                posts: post\n              }\n            })\n          })\n        })\n    } else {\n      return(\n        <Redirect to='/signin' />\n      )\n    }\n\n  }\n\n  render() {\n  // console.log(\"project: \", this.state)\n    console.log(\"st: \", this.state)\n    const { auth } = this.props\n    const { posts } = this.state\n    if (!auth.uid) return <Redirect to='/signin' /> // redirecting signed out users to signin/signup page\n\n    return(\n      <div className=\"dashboard container\">\n        <div className=\"row\">\n          <div className=\"col l5 push-l1 m12 s12\">\n            <div className=\"hide-on-large-only\">\n              <CreatePost />\n            </div>\n            {posts\n              ? <div>\n                  <ProjectList projects={posts} auth={auth}/>\n                  <div\n                    className=\"load_more\"\n                    onClick={this.renewPost}>\n                    <span>\n                      Load More\n                      <i className=\"material-icons\">autorenew</i>\n                    </span>\n                  </div>\n                </div>\n              : null}\n          </div>\n          <div className=\"col l4 offset-l2 hide-on-med-and-down\">\n            {/*<Notification notifications={notifications} />*/}\n            <CreatePost />\n          </div>\n        </div>\n        <div className=\"footer-cover\">\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  // console.log(state)\n  return {\n    projects: state.firestore.ordered.projects,\n    initials: state.firebase.profile.initials,\n    auth: state.firebase.auth,\n    notifications: state.firestore.ordered.notifications\n  }\n}\n\nexport default compose (\n  firestoreConnect([\n      { collection: 'projects',\n        orderBy: ['createdAt', 'desc']\n      },\n      { collection: 'notifications',\n        limit: 3,\n        orderBy: ['time', 'desc']\n      }\n    ]),\n  connect(mapStateToProps)\n)(Dashboard)\n"]},"metadata":{},"sourceType":"module"}