{"ast":null,"code":"import _classCallCheck from \"/home/madan/Documents/workspace/artwork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/madan/Documents/workspace/artwork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/madan/Documents/workspace/artwork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/madan/Documents/workspace/artwork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/madan/Documents/workspace/artwork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/madan/Documents/workspace/artwork/src/components/projects/ProjectDetails.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { Link } from 'react-router-dom';\nimport CommentDetails from './projectActs/CommentDetails';\n\nvar ProjectDetails =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ProjectDetails, _Component);\n\n  function ProjectDetails() {\n    _classCallCheck(this, ProjectDetails);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ProjectDetails).apply(this, arguments));\n  }\n\n  _createClass(ProjectDetails, [{\n    key: \"render\",\n    value: function render() {\n      var project = this.props.project;\n      console.log(\"prop\", project);\n      var comments = this.props.comments;\n\n      if (project) {\n        return React.createElement(\"div\", {\n          className: \"container section project-details\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 15\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"col s12 m8 offset-l2 l8 offset-l2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"card z-depth-0 show-up\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"card-content\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"card-title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        }, \" \", project.title, \" \"), React.createElement(\"div\", {\n          className: \"card-image\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: project.imageUrl,\n          alt: \"project\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        }), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        }, project.content))), React.createElement(\"div\", {\n          className: \"card-action grey-text\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: '../profile/' + project.authorId,\n          className: \"blue-text\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }, project.authorFirstName, \" \", project.authorSecondName)), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        }, project.createdAt && project.createdAt.toDate().toLocaleDateString('indian', {\n          year: \"2-digit\",\n          month: \"short\",\n          day: \"numeric\"\n        })), React.createElement(\"div\", {\n          className: \"comment-details\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }, React.createElement(CommentDetails, {\n          comments: comments,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        })))))));\n      } else {\n        return React.createElement(\"div\", {\n          className: \"container center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, \" Loading projects. . . .  \"));\n      }\n    }\n  }]);\n\n  return ProjectDetails;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state, ownProps) {\n  console.log(state);\n  var id = ownProps.match.params.id;\n  var projects = state.firestore.ordered;\n  console.log(\"projects: \", projects);\n  var project = projects ? projects[id] : null;\n  console.log(\"project: \", project);\n  return {\n    project: project,\n    comments: state.firestore.ordered.comments\n  };\n};\n\nexport default compose(firestoreConnect(function (props) {\n  return [{\n    collection: 'projects',\n    doc: props.match.params.id,\n    storeAs: props.match.params.id\n  }, {\n    collection: 'projects',\n    doc: props.match.params.id,\n    subcollections: [{\n      collection: 'comments',\n      orderBy: ['commentTime', 'desc']\n    }],\n    storeAs: 'comments'\n  }];\n}), connect(mapStateToProps))(ProjectDetails); // export default connect(mapStateToProps)(ProjectDetails)","map":{"version":3,"sources":["/home/madan/Documents/workspace/artwork/src/components/projects/ProjectDetails.js"],"names":["React","Component","connect","firestoreConnect","compose","Link","CommentDetails","ProjectDetails","project","props","console","log","comments","title","imageUrl","content","authorId","authorFirstName","authorSecondName","createdAt","toDate","toLocaleDateString","year","month","day","mapStateToProps","state","ownProps","id","match","params","projects","firestore","ordered","collection","doc","storeAs","subcollections","orderBy"],"mappings":"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","sourcesContent":["import React, { Component} from 'react'\nimport { connect } from 'react-redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux'\nimport { Link } from 'react-router-dom'\nimport CommentDetails from './projectActs/CommentDetails'\n\nclass ProjectDetails extends Component {\n  render() {\n  const { project } = this.props\n  console.log(\"prop\", project)\n  const { comments } = this.props\n  if (project) {\n    return (\n      <div className=\"container section project-details\">\n\n        <div className=\"row\">\n\n          <div className=\"col s12 m8 offset-l2 l8 offset-l2\">\n            <div className=\"card z-depth-0 show-up\">\n              <div className=\"card-content\">\n                <span className=\"card-title\"> {project.title} </span>\n                <div className=\"card-image\">\n                  <img src={project.imageUrl} alt=\"project\" />\n                  <p>{project.content}</p>\n                </div>\n\n              </div>\n\n              <div className=\"card-action grey-text\">\n\n                <div>\n                <Link to={'../profile/' + project.authorId} className=\"blue-text\">\n                  {project.authorFirstName} {project.authorSecondName}\n                </Link>\n\n                </div>\n                <div>{ project.createdAt &&\n                    project.createdAt.toDate()\n                    .toLocaleDateString('indian',\n                    {year: \"2-digit\", month: \"short\", day: \"numeric\"})}\n                </div>\n                <div className=\"comment-details\">\n                  <CommentDetails comments={comments} />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  } else {\n    return (\n      <div className=\"container center\">\n        <p> Loading projects. . . .  </p>\n      </div>\n    )\n  }\n}\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  console.log(state)\n  const id = ownProps.match.params.id\n  const projects = state.firestore.ordered\n  console.log(\"projects: \", projects)\n  const project = projects ? projects[id] : null\n  console.log(\"project: \", project)\n  return {\n    project: project,\n    comments: state.firestore.ordered.comments\n  }\n}\n\nexport default compose(\n  firestoreConnect(props => {\n    return [\n     {\n       collection: 'projects',\n       doc: props.match.params.id,\n       storeAs: props.match.params.id\n     },\n     {\n       collection: 'projects',\n       doc: props.match.params.id,\n       subcollections: [\n         {\n           collection: 'comments',\n           orderBy: ['commentTime', 'desc']\n         }\n       ],\n       storeAs: 'comments'\n     }\n    ]\n  }),\n  connect(mapStateToProps)\n)(ProjectDetails)\n\n// export default connect(mapStateToProps)(ProjectDetails)\n"]},"metadata":{},"sourceType":"module"}