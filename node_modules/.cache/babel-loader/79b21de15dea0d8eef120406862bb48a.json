{"ast":null,"code":"import _classCallCheck from \"/home/madan/Documents/workspace/artwork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/madan/Documents/workspace/artwork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/madan/Documents/workspace/artwork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/madan/Documents/workspace/artwork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/madan/Documents/workspace/artwork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/madan/Documents/workspace/artwork/src/components/projects/projectActs/AddComment.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { createComment as _createComment } from '../../../store/actions/CommentAction';\n\nvar AddComment =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AddComment, _Component);\n\n  function AddComment() {\n    var _this;\n\n    _classCallCheck(this, AddComment);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddComment).call(this));\n\n    _this.handleSubmit = function (event) {\n      event.preventDefault();\n      event.persist();\n      var comment = _this.refs.comment.value;\n\n      if (comment) {\n        _this.setState(function () {\n          return {\n            comment: _this.refs.comment.value,\n            commentToPost: _this.props.projectId\n          };\n        }, function () {\n          _this.props.createComment(_this.state);\n\n          event.target.reset();\n        });\n      }\n    };\n\n    _this.state = {\n      comment: '',\n      commentToPost: ''\n    };\n    return _this;\n  }\n\n  _createClass(AddComment, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"comments\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        action: \"\",\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        ref: \"comment\",\n        placeholder: \"add your comment...\",\n        className: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn transparent z-depth-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return AddComment;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    profile: state.firebase.profile,\n    auth: state.firebase.auth\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    createComment: function createComment(comments) {\n      return dispatch(_createComment(comments));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddComment);","map":{"version":3,"sources":["/home/madan/Documents/workspace/artwork/src/components/projects/projectActs/AddComment.js"],"names":["React","Component","connect","createComment","AddComment","handleSubmit","event","preventDefault","persist","comment","refs","value","setState","commentToPost","props","projectId","state","target","reset","mapStateToProps","profile","firebase","auth","mapDispatchToProps","dispatch","comments"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,aAAa,IAAbA,cAAT,QAA8B,sCAA9B;;IAEMC,U;;;;;AACJ,wBAAc;AAAA;;AAAA;;AACZ;;AADY,UAQdC,YARc,GAQC,UAACC,KAAD,EAAW;AACxBA,MAAAA,KAAK,CAACC,cAAN;AACAD,MAAAA,KAAK,CAACE,OAAN;AACA,UAAIC,OAAO,GAAG,MAAKC,IAAL,CAAUD,OAAV,CAAkBE,KAAhC;;AACA,UAAGF,OAAH,EAAY;AACV,cAAKG,QAAL,CAAc,YAAM;AAClB,iBAAO;AACLH,YAAAA,OAAO,EAAE,MAAKC,IAAL,CAAUD,OAAV,CAAkBE,KADtB;AAELE,YAAAA,aAAa,EAAE,MAAKC,KAAL,CAAWC;AAFrB,WAAP;AAID,SALD,EAKG,YAAM;AACP,gBAAKD,KAAL,CAAWX,aAAX,CAAyB,MAAKa,KAA9B;;AACAV,UAAAA,KAAK,CAACW,MAAN,CAAaC,KAAb;AACD,SARD;AASD;AACF,KAvBa;;AAEZ,UAAKF,KAAL,GAAa;AACXP,MAAAA,OAAO,EAAE,EADE;AAEXI,MAAAA,aAAa,EAAC;AAFH,KAAb;AAFY;AAMb;;;;6BAmBQ;AACP,aACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,MAAM,EAAC,EAAb;AAAgB,QAAA,QAAQ,EAAE,KAAKR,YAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,GAAG,EAAC,SAAvB;AAAiC,QAAA,WAAW,EAAC,qBAA7C;AAAmE,QAAA,SAAS,EAAC,EAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,2BAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF,CADF;AAQD;;;;EAnCsBJ,S;;AAsCzB,IAAMkB,eAAe,GAAG,SAAlBA,eAAkB,CAACH,KAAD,EAAW;AACjC,SAAO;AACLI,IAAAA,OAAO,EAAEJ,KAAK,CAACK,QAAN,CAAeD,OADnB;AAELE,IAAAA,IAAI,EAAEN,KAAK,CAACK,QAAN,CAAeC;AAFhB,GAAP;AAID,CALD;;AAOA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD,EAAc;AACvC,SAAO;AACLrB,IAAAA,aAAa,EAAE,uBAACsB,QAAD;AAAA,aAAcD,QAAQ,CAACrB,cAAa,CAACsB,QAAD,CAAd,CAAtB;AAAA;AADV,GAAP;AAGD,CAJD;;AAMA,eAAevB,OAAO,CAACiB,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CnB,UAA7C,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { createComment } from '../../../store/actions/CommentAction'\n\nclass AddComment extends Component {\n  constructor() {\n    super()\n    this.state = {\n      comment: '',\n      commentToPost:''\n    }\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault()\n    event.persist()\n    let comment = this.refs.comment.value\n    if(comment) {\n      this.setState(() => {\n        return {\n          comment: this.refs.comment.value,\n          commentToPost: this.props.projectId\n        }\n      }, () => {\n        this.props.createComment(this.state)\n        event.target.reset()\n      })\n    }\n  }\n\n  render() {\n    return(\n      <div className=\"comments\">\n        <form action=\"\" onSubmit={this.handleSubmit}>\n          <input type=\"text\" ref=\"comment\" placeholder=\"add your comment...\" className=\"\" />\n          <button type=\"submit\" className=\"btn transparent z-depth-0\"></button>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    profile: state.firebase.profile,\n    auth: state.firebase.auth\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    createComment: (comments) => dispatch(createComment(comments))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddComment)\n"]},"metadata":{},"sourceType":"module"}