{"ast":null,"code":"import _objectSpread from \"/home/madan/Documents/workspace/artwork/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/madan/Documents/workspace/artwork/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/madan/Documents/workspace/artwork/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/madan/Documents/workspace/artwork/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/madan/Documents/workspace/artwork/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/madan/Documents/workspace/artwork/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/madan/Documents/workspace/artwork/src/components/projects/projectActs/PostCredits.js\";\nimport React, { Component } from 'react'; // import { firestoreConnect } from 'react-redux-firebase'\n// import { compose } from 'redux'\n\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport { connect } from 'react-redux';\nimport { createLike as _createLike, removeLike as _removeLike, updateLike as _updateLike } from '../../../store/actions/LikeActions';\nimport { addCollection as _addCollection, disableCollection as _disableCollection, updateCollection as _updateCollection } from '../../../store/actions/Collection';\n\nvar PostCerdits =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PostCerdits, _Component);\n\n  function PostCerdits() {\n    var _this;\n\n    _classCallCheck(this, PostCerdits);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PostCerdits).call(this));\n\n    _this.getCollection = function () {\n      var postId = _this.props.project.id;\n      var uid = _this.props.auth.uid;\n      var obj = {};\n      var db = firebase.firestore();\n      var ref = db.collection('users').doc(uid).collection('collection').where(\"postId\", \"==\", postId);\n      return ref.get().then(function (documentSnapshots) {\n        documentSnapshots.forEach(function (doc) {\n          // console.log(\"dc: \", doc.data())\n          obj = _objectSpread({}, doc.data(), {\n            id: doc.id // console.log(\"tst: \", obj)\n\n          });\n        });\n      }).then(function () {\n        _this.setState(function () {\n          return {\n            collection: _objectSpread({}, obj)\n          };\n        }, function () {// console.log(\"actv: \", this.state.collection)\n        });\n      });\n    };\n\n    _this.addCollection = function () {\n      var collectedCount = _this.props.collected + 1;\n      var check = _this.state.collection.postId ? true : false;\n      var isActive = _this.state.collection.isActive;\n      _this.clickCount++;\n\n      if (_this.clickCount === 1) {\n        _this.singleClickTimer = setTimeout(function () {\n          _this.clickCount = 0;\n          check ? isActive ? _this.setState(function () {\n            return {\n              collection: {\n                docId: _this.state.collection.id,\n                imageUrl: _this.props.project.imageUrl,\n                postId: _this.props.project.id,\n                authorId: _this.props.project.authorId,\n                authorFirstName: _this.props.project.authorFirstName,\n                authorLastName: _this.props.project.authorSecondName\n              }\n            };\n          }, function () {\n            _this.props.disableCollection(_this.state.collection);\n\n            _this.getCollection(); // console.log(\"disable col: \", this.state.collection)\n\n          }) : _this.setState(function () {\n            return {\n              collection: {\n                docId: _this.state.collection.id,\n                imageUrl: _this.props.project.imageUrl,\n                postId: _this.props.project.id,\n                authorId: _this.props.project.authorId,\n                authorFirstName: _this.props.project.authorFirstName,\n                authorLastName: _this.props.project.authorSecondName\n              }\n            };\n          }, function () {\n            _this.props.updateCollection(_this.state.collection);\n\n            _this.getCollection(); // console.log(\"updt col: \", this.state.collection)\n\n          }) : _this.setState(function () {\n            return {\n              imageUrl: _this.props.project.imageUrl,\n              postId: _this.props.project.id,\n              collectedCount: collectedCount,\n              authorId: _this.props.project.authorId,\n              authorFirstName: _this.props.project.authorFirstName,\n              authorLastName: _this.props.project.authorSecondName\n            };\n          }, function () {\n            _this.props.addCollection(_this.state);\n\n            _this.getCollection(); // console.log(\"crt col: \", this.state.collection)\n\n          });\n        }, 400);\n      }\n    };\n\n    _this.getLike = function () {\n      var projectId = _this.props.project.id;\n      var authorId = _this.props.auth.uid;\n      var dataObj = {};\n      var db = firebase.firestore();\n      var ref = db.collection('projects').doc(projectId).collection('likes').where('likeFromId', '==', authorId);\n      return ref.get().then(function (documentSnapshots) {\n        documentSnapshots.forEach(function (doc) {\n          var id = doc.id ? doc.id : null; // console.log(`get: ${projectId}`, doc.data())\n\n          dataObj = _objectSpread({}, doc.data(), {\n            id: id\n          });\n        });\n      }).then(function () {\n        _this.setState({\n          like: _objectSpread({}, dataObj)\n        });\n      });\n    };\n\n    _this.handleLike = function (e) {\n      _this.clickCount++; // preventing double click event from executing\n\n      if (_this.clickCount === 1) {\n        _this.singleClickTimer = setTimeout(function () {\n          _this.clickCount = 0;\n          var likes = _this.props.likeCount; // console.log(this.state)\n\n          var isExist = _this.state && _this.state.like && _this.state.like.likeFromId ? true : false;\n          var likeObj = _this.state.like;\n          var isLiked = likeObj && likeObj.isActive ? true : false; // console.log(\"like state: \", isExist)\n\n          isExist // if user ever liked this post\n          ? isLiked // if like is still active\n          ? _this.setState(function () {\n            return {\n              like: {\n                likeToPost: _this.props.project.id,\n                likeCount: likes,\n                id: likeObj.id\n              }\n            };\n          }, function () {\n            // console.log(\"remove\", this.state.like)\n            _this.props.removeLike(_this.state.like);\n\n            _this.getLike().then(function () {// console.log(\"remove\", this.state)\n            });\n          }) : _this.setState(function () {\n            return {\n              like: {\n                likeToPost: _this.props.project.id,\n                likeCount: likes,\n                id: _this.state.like.id\n              }\n            };\n          }, function () {\n            // console.log(\"update\", this.state.like)\n            _this.props.updateLike(_this.state.like);\n\n            _this.getLike().then(function () {// console.log(\"update\", this.state)\n            });\n          }) : _this.setState(function () {\n            return {\n              like: {\n                likeToPost: _this.props.project.id,\n                likeCount: likes,\n                isActive: true\n              }\n            };\n          }, function () {\n            // console.log(\"create\", this.state.like)\n            var like = _this.state && _this.state.like ? _this.state.like : null;\n\n            _this.props.createLike(like);\n\n            _this.getLike().then(function () {// console.log(\"create\", this.state)\n            });\n          });\n        }, 400);\n      }\n    };\n\n    _this.clickCount = 0;\n    _this.singleClickTimer = '';\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(PostCerdits, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount(props) {\n      this.getLike(); // getting like data\n\n      this.getCollection(); // collection data\n    } // getting art collection list\n\n  }, {\n    key: \"render\",\n    // end of getting \"like\" data\n    value: function render() {\n      var likeCount = this.props.likeCount;\n      var like = this.state.like;\n      var liked = like && like.isActive ? true : false; // console.log(\"state: \", this.state)\n\n      var _ref = this.state && this.state,\n          collection = _ref.collection;\n\n      var isCollected = collection && collection.isActive ? true : false;\n      return React.createElement(\"div\", {\n        className: \"icons-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"post-act\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.handleLike,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, liked ? React.createElement(\"i\", {\n        className: \"material-icons blue-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, \"thumb_up\") : React.createElement(\"i\", {\n        className: \"material-icons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, \"thumb_up\"))), React.createElement(\"span\", {\n        className: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"material-icons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }, \"send\")))), React.createElement(\"span\", {\n        className: \"like_conts_wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }, likeCount ? React.createElement(\"div\", {\n        className: \"counts\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"like-count\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }, likeCount, \" likes\")) : null), React.createElement(\"div\", {\n        className: \"save\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.addCollection,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }, isCollected ? React.createElement(\"i\", {\n        className: \"material-icons center blue-text darken-4\",\n        title: \"add to your collection\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }, \"collections_bookmark\") : React.createElement(\"i\", {\n        className: \"material-icons center\",\n        title: \"add to your collection\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }, \"collections_bookmark\")))));\n    }\n  }]);\n\n  return PostCerdits;\n}(Component);\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    createLike: function createLike(like) {\n      return dispatch(_createLike(like));\n    },\n    removeLike: function removeLike(like) {\n      return dispatch(_removeLike(like));\n    },\n    updateLike: function updateLike(like) {\n      return dispatch(_updateLike(like));\n    },\n    addCollection: function addCollection(post) {\n      return dispatch(_addCollection(post));\n    },\n    disableCollection: function disableCollection(data) {\n      return dispatch(_disableCollection(data));\n    },\n    updateCollection: function updateCollection(data) {\n      return dispatch(_updateCollection(data));\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(PostCerdits);","map":{"version":3,"sources":["/home/madan/Documents/workspace/artwork/src/components/projects/projectActs/PostCredits.js"],"names":["React","Component","firebase","connect","createLike","removeLike","updateLike","addCollection","disableCollection","updateCollection","PostCerdits","getCollection","postId","props","project","id","uid","auth","obj","db","firestore","ref","collection","doc","where","get","then","documentSnapshots","forEach","data","setState","collectedCount","collected","check","state","isActive","clickCount","singleClickTimer","setTimeout","docId","imageUrl","authorId","authorFirstName","authorLastName","authorSecondName","getLike","projectId","dataObj","like","handleLike","e","likes","likeCount","isExist","likeFromId","likeObj","isLiked","likeToPost","liked","isCollected","mapDispatchToProps","dispatch","post"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n// import { firestoreConnect } from 'react-redux-firebase'\n// import { compose } from 'redux'\nimport firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport { connect } from 'react-redux'\nimport { createLike, removeLike, updateLike } from '../../../store/actions/LikeActions'\nimport { addCollection, disableCollection, updateCollection } from '../../../store/actions/Collection'\n\nclass PostCerdits extends Component {\n  constructor() {\n    super()\n    this.clickCount = 0\n    this.singleClickTimer = ''\n    this.state = {}\n  }\n\n  componentWillMount(props) {\n    this.getLike() // getting like data\n    this.getCollection() // collection data\n  }\n\n  // getting art collection list\n  getCollection = () => {\n    const postId = this.props.project.id\n    const { uid } = this.props.auth\n    let obj = {}\n\n    const db = firebase.firestore()\n    const ref = db.collection('users').doc(uid)\n      .collection('collection')\n      .where(\"postId\", \"==\", postId)\n\n      return ref.get().then(documentSnapshots => {\n        documentSnapshots.forEach(doc => {\n          // console.log(\"dc: \", doc.data())\n          obj = {\n            ...doc.data(),\n            id: doc.id\n          }\n          // console.log(\"tst: \", obj)\n        })\n      }).then(() => {\n        this.setState(() => {\n          return{\n            collection: {\n              ...obj\n            }\n          }\n        }, () => {\n          // console.log(\"actv: \", this.state.collection)\n        })\n      })\n  }\n\n    // collection actions\n    addCollection = () => {\n      let collectedCount = this.props.collected + 1\n      let check = this.state.collection.postId ? true : false\n      let { isActive } = this.state.collection\n\n\n      this.clickCount++\n      if(this.clickCount === 1) {\n        this.singleClickTimer = setTimeout(() => {\n          this.clickCount = 0;\n\n          check\n          ? isActive\n            ? this.setState(() => {\n              return {\n                collection: {\n                  docId: this.state.collection.id,\n                  imageUrl: this.props.project.imageUrl,\n                  postId: this.props.project.id,\n                  authorId: this.props.project.authorId,\n                  authorFirstName: this.props.project.authorFirstName,\n                  authorLastName: this.props.project.authorSecondName\n                }\n              }\n            }, () => {\n              this.props.disableCollection(this.state.collection)\n              this.getCollection()\n              // console.log(\"disable col: \", this.state.collection)\n            })\n            : this.setState(() => {\n              return {\n                collection: {\n                  docId: this.state.collection.id,\n                  imageUrl: this.props.project.imageUrl,\n                  postId: this.props.project.id,\n                  authorId: this.props.project.authorId,\n                  authorFirstName: this.props.project.authorFirstName,\n                  authorLastName: this.props.project.authorSecondName\n                }\n              }\n            }, () => {\n              this.props.updateCollection(this.state.collection)\n              this.getCollection()\n              // console.log(\"updt col: \", this.state.collection)\n            })\n          : this.setState(() => {\n              return {\n                imageUrl: this.props.project.imageUrl,\n                postId: this.props.project.id,\n                collectedCount,\n                authorId: this.props.project.authorId,\n                authorFirstName: this.props.project.authorFirstName,\n                authorLastName: this.props.project.authorSecondName\n              }\n            }, () => {\n              this.props.addCollection(this.state)\n              this.getCollection()\n              // console.log(\"crt col: \", this.state.collection)\n            })\n        }, 400)\n      }\n    }\n\n  // getting \"like\" data\n  getLike = () => {\n    const projectId = this.props.project.id\n    const authorId = this.props.auth.uid\n    let dataObj = {}\n\n    const db = firebase.firestore()\n    const ref = db.collection('projects').doc(projectId)\n      .collection('likes')\n      .where('likeFromId', '==', authorId)\n\n    return ref.get().then((documentSnapshots) => {\n      documentSnapshots.forEach(doc => {\n        const id = doc.id ? doc.id : null\n        // console.log(`get: ${projectId}`, doc.data())\n\n        dataObj = {\n          ...doc.data(),\n          id: id\n        }\n      })\n    })\n    .then(() => {\n      this.setState({\n        like: {\n          ...dataObj\n        }\n      })\n    })\n  }\n\n  // incrementing like to the post\n  handleLike = (e) => {\n    this.clickCount++\n    // preventing double click event from executing\n    if(this.clickCount === 1) {\n      this.singleClickTimer = setTimeout(() => {\n        this.clickCount = 0;\n\n        let likes = this.props.likeCount\n        // console.log(this.state)\n        let isExist = this.state && this.state.like && this.state.like.likeFromId ? true : false\n        let likeObj = this.state.like\n        let isLiked = likeObj && likeObj.isActive ? true : false\n        // console.log(\"like state: \", isExist)\n\n\n        isExist // if user ever liked this post\n        ? isLiked // if like is still active\n          ? this.setState(() => {\n              return {\n                like: {\n                  likeToPost: this.props.project.id,\n                  likeCount: likes,\n                  id: likeObj.id\n                }\n              }\n            }, () => {\n              // console.log(\"remove\", this.state.like)\n              this.props.removeLike(this.state.like)\n              this.getLike()\n              .then(() => {\n                // console.log(\"remove\", this.state)\n              })\n            })\n\n          : this.setState(() => {\n              return {\n                like: {\n                  likeToPost: this.props.project.id,\n                  likeCount: likes,\n                  id: this.state.like.id\n                }\n              }\n            }, () => {\n              // console.log(\"update\", this.state.like)\n              this.props.updateLike(this.state.like)\n              this.getLike()\n              .then(() => {\n                // console.log(\"update\", this.state)\n              })\n            })\n\n        : this.setState(() => {\n            return {\n              like: {\n                likeToPost: this.props.project.id,\n                likeCount: likes,\n                isActive: true\n              }\n            }\n          }, () => {\n            // console.log(\"create\", this.state.like)\n            let like = this.state && this.state.like ? this.state.like : null\n            this.props.createLike(like)\n            this.getLike()\n            .then(() => {\n              // console.log(\"create\", this.state)\n            })\n          })\n        }, 400)\n\n    }\n  } // end of getting \"like\" data\n\n\n  render() {\n    const { likeCount } = this.props\n    const { like } = this.state\n    const liked = like && like.isActive ? true : false\n    // console.log(\"state: \", this.state)\n    const { collection } = this.state && this.state\n    const isCollected = collection && collection.isActive ? true : false\n\n    return(\n      <div className=\"icons-wrapper\">\n\n        <div className=\"post-act\">\n          <span className=\"\">\n            <button onClick={this.handleLike}>\n              {liked\n                ? <i className=\"material-icons blue-text\">thumb_up</i>\n                : <i className=\"material-icons\">thumb_up</i>}\n            </button>\n          </span>\n          <span className=\"\">\n            <button>\n              <i className=\"material-icons\">send</i>\n            </button>\n          </span>\n        </div>\n\n        <span className=\"like_conts_wrapper\">\n          {likeCount\n            ?\n              <div className=\"counts\">\n                <span className=\"like-count\">\n                  {likeCount} likes\n                </span>\n              </div>\n            : null\n          }\n        </span>\n\n        <div className=\"save\">\n          <span className=\"\">\n            <button onClick={this.addCollection}>\n              {isCollected\n                ? <i className=\"material-icons center blue-text darken-4\"\n                     title=\"add to your collection\">\n                   collections_bookmark\n                 </i>\n                : <i className=\"material-icons center\"\n                     title=\"add to your collection\">\n                   collections_bookmark\n                 </i>}\n            </button>\n          </span>\n        </div>\n\n      </div>\n    )\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    createLike: (like) => dispatch(createLike(like)),\n    removeLike: (like) => dispatch(removeLike(like)),\n    updateLike: (like) => dispatch(updateLike(like)),\n    addCollection: (post) => dispatch(addCollection(post)),\n    disableCollection: (data) => dispatch(disableCollection(data)),\n    updateCollection: (data) => dispatch(updateCollection(data))\n  }\n}\n\n\nexport default connect(null, mapDispatchToProps)(PostCerdits)\n"]},"metadata":{},"sourceType":"module"}