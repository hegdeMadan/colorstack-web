{"ast":null,"code":"import _objectSpread from \"/home/madan/Documents/workspace/artwork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/madan/Documents/workspace/artwork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/madan/Documents/workspace/artwork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/madan/Documents/workspace/artwork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/madan/Documents/workspace/artwork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/madan/Documents/workspace/artwork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/madan/Documents/workspace/artwork/src/components/projects/projectActs/PostCredits.js\";\nimport React, { Component } from 'react'; // import { firestoreConnect } from 'react-redux-firebase'\n// import { compose } from 'redux'\n\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport { connect } from 'react-redux';\nimport { createLike as _createLike, removeLike as _removeLike, updateLike as _updateLike } from '../../../store/actions/LikeActions';\nimport { addCollection as _addCollection } from '../../../store/actions/Collection';\n\nvar PostCerdits =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PostCerdits, _Component);\n\n  function PostCerdits() {\n    var _this;\n\n    _classCallCheck(this, PostCerdits);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PostCerdits).call(this));\n\n    _this.getData = function () {\n      var projectId = _this.props.project.id;\n      var authorId = _this.props.auth.uid;\n      var dataObj = {};\n      var db = firebase.firestore();\n      var ref = db.collection('projects').doc(projectId).collection('likes').where('likeFromId', '==', authorId);\n      return ref.get().then(function (documentSnapshots) {\n        documentSnapshots.forEach(function (doc) {\n          var id = doc.id ? doc.id : null; // console.log(`get: ${projectId}`, doc.data())\n\n          dataObj = _objectSpread({}, doc.data(), {\n            id: id\n          });\n        });\n      }).then(function () {\n        _this.setState({\n          like: _objectSpread({}, dataObj)\n        });\n      });\n    };\n\n    _this.handleLike = function (e) {\n      _this.clickCount++; // preventing double click event from executing\n\n      if (_this.clickCount === 1) {\n        _this.singleClickTimer = setTimeout(function () {\n          _this.clickCount = 0;\n          var likes = _this.props.likeCount;\n          console.log(_this.state);\n          var isExist = _this.state && _this.state.like && _this.state.like.likeFromId ? true : false;\n          var likeObj = _this.state.like;\n          var isLiked = likeObj && likeObj.isActive ? true : false;\n          console.log(\"like state: \", isExist);\n          isExist ? isLiked ? _this.setState(function () {\n            return {\n              like: {\n                likeToPost: _this.props.project.id,\n                likeCount: likes,\n                id: likeObj.id\n              }\n            };\n          }, function () {\n            console.log(\"remove\", _this.state.like);\n\n            _this.props.removeLike(_this.state.like);\n\n            _this.getData().then(function () {\n              console.log(\"remove\", _this.state);\n            });\n          }) : _this.setState(function () {\n            return {\n              like: {\n                likeToPost: _this.props.project.id,\n                likeCount: likes,\n                id: _this.state.like.id\n              }\n            };\n          }, function () {\n            console.log(\"update\", _this.state.like);\n\n            _this.props.updateLike(_this.state.like);\n\n            _this.getData().then(function () {\n              console.log(\"update\", _this.state);\n            });\n          }) : _this.setState(function () {\n            return {\n              like: {\n                likeToPost: _this.props.project.id,\n                likeCount: likes,\n                isActive: true\n              }\n            };\n          }, function () {\n            console.log(\"create\", _this.state.like);\n            var like = _this.state && _this.state.like ? _this.state.like : null;\n\n            _this.props.createLike(like);\n\n            _this.getData().then(function () {\n              console.log(\"create\", _this.state);\n            });\n          });\n        }, 400);\n      }\n    };\n\n    _this.addCollection = function () {\n      var collectedCount = _this.props.collected + 1;\n      var activeStatus = _this.props.isActive ? false : true;\n\n      _this.setState(function () {\n        return {\n          imageUrl: _this.props.project.imageUrl,\n          postId: _this.props.project.id,\n          activeStatus: activeStatus,\n          collectedCount: collectedCount\n        };\n      }, function () {\n        _this.props.addCollection(_this.state);\n      });\n    };\n\n    _this.clickCount = 0;\n    _this.singleClickTimer = '';\n    _this.state = {};\n    return _this;\n  } // getting \"like\" data\n\n\n  _createClass(PostCerdits, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount(props) {\n      this.getData();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var likeCount = this.props.likeCount;\n      var like = this.state.like;\n      var liked = like && like.isActive ? true : false; // console.log(\"state: \", this.state)\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"icons-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"post-act\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.handleLike,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, liked ? React.createElement(\"i\", {\n        className: \"material-icons blue-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, \"thumb_up\") : React.createElement(\"i\", {\n        className: \"material-icons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, \"thumb_up\"))), React.createElement(\"span\", {\n        className: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"material-icons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, \"send\")))), React.createElement(\"div\", {\n        className: \"save\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.addCollection,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"material-icons center\",\n        title: \"add to your collection\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, \"add_to_photos\"))))), likeCount ? React.createElement(\"div\", {\n        className: \"counts\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"like-count\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, likeCount, \" likes\")) : null);\n    }\n  }]);\n\n  return PostCerdits;\n}(Component);\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    createLike: function createLike(like) {\n      return dispatch(_createLike(like));\n    },\n    removeLike: function removeLike(like) {\n      return dispatch(_removeLike(like));\n    },\n    updateLike: function updateLike(like) {\n      return dispatch(_updateLike(like));\n    },\n    addCollection: function addCollection(post) {\n      return dispatch(_addCollection(post));\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(PostCerdits);","map":{"version":3,"sources":["/home/madan/Documents/workspace/artwork/src/components/projects/projectActs/PostCredits.js"],"names":["React","Component","firebase","connect","createLike","removeLike","updateLike","addCollection","PostCerdits","getData","projectId","props","project","id","authorId","auth","uid","dataObj","db","firestore","ref","collection","doc","where","get","then","documentSnapshots","forEach","data","setState","like","handleLike","e","clickCount","singleClickTimer","setTimeout","likes","likeCount","console","log","state","isExist","likeFromId","likeObj","isLiked","isActive","likeToPost","collectedCount","collected","activeStatus","imageUrl","postId","liked","mapDispatchToProps","dispatch","post"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n// import { firestoreConnect } from 'react-redux-firebase'\n// import { compose } from 'redux'\nimport firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport { connect } from 'react-redux'\nimport { createLike, removeLike, updateLike } from '../../../store/actions/LikeActions'\nimport { addCollection } from '../../../store/actions/Collection'\n\nclass PostCerdits extends Component {\n  constructor() {\n    super()\n    this.clickCount = 0\n    this.singleClickTimer = ''\n    this.state = {}\n  }\n  // getting \"like\" data\n  componentWillMount(props) {\n    this.getData()\n  }\n\n  getData = () => {\n    const projectId = this.props.project.id\n    const authorId = this.props.auth.uid\n    let dataObj = {}\n\n    const db = firebase.firestore()\n    const ref = db.collection('projects').doc(projectId)\n      .collection('likes')\n      .where('likeFromId', '==', authorId)\n\n    return ref.get().then((documentSnapshots) => {\n      documentSnapshots.forEach(doc => {\n        const id = doc.id ? doc.id : null\n        // console.log(`get: ${projectId}`, doc.data())\n\n        dataObj = {\n          ...doc.data(),\n          id: id\n        }\n      })\n    })\n    .then(() => {\n      this.setState({\n        like: {\n          ...dataObj\n        }\n      })\n    })\n  }\n\n  // incrementing like to the post\n  handleLike = (e) => {\n    this.clickCount++\n    // preventing double click event from executing\n    if(this.clickCount === 1) {\n      this.singleClickTimer = setTimeout(() => {\n        this.clickCount = 0;\n\n        let likes = this.props.likeCount\n        console.log(this.state)\n        let isExist = this.state && this.state.like && this.state.like.likeFromId ? true : false\n        let likeObj = this.state.like\n        let isLiked = likeObj && likeObj.isActive ? true : false\n        console.log(\"like state: \", isExist)\n\n        isExist\n        ? isLiked\n          ? this.setState(() => {\n              return {\n                like: {\n                  likeToPost: this.props.project.id,\n                  likeCount: likes,\n                  id: likeObj.id\n                }\n              }\n            }, () => {\n              console.log(\"remove\", this.state.like)\n              this.props.removeLike(this.state.like)\n              this.getData()\n              .then(() => {\n                console.log(\"remove\", this.state)\n              })\n            })\n\n          : this.setState(() => {\n              return {\n                like: {\n                  likeToPost: this.props.project.id,\n                  likeCount: likes,\n                  id: this.state.like.id\n                }\n              }\n            }, () => {\n              console.log(\"update\", this.state.like)\n              this.props.updateLike(this.state.like)\n              this.getData()\n              .then(() => {\n                console.log(\"update\", this.state)\n              })\n            })\n\n        : this.setState(() => {\n            return {\n              like: {\n                likeToPost: this.props.project.id,\n                likeCount: likes,\n                isActive: true\n              }\n            }\n          }, () => {\n            console.log(\"create\", this.state.like)\n            let like = this.state && this.state.like ? this.state.like : null\n            this.props.createLike(like)\n            this.getData()\n            .then(() => {\n              console.log(\"create\", this.state)\n            })\n          })\n        }, 400)\n\n    }\n  } // end of getting \"like\" data\n\n\n  // adding post to user's collection\n  addCollection = () => {\n    let collectedCount = this.props.collected + 1\n    let activeStatus = this.props.isActive ? false : true\n\n    this.setState(() => {\n      return {\n        imageUrl: this.props.project.imageUrl,\n        postId: this.props.project.id,\n        activeStatus,\n        collectedCount\n      }\n    }, () => {\n      this.props.addCollection(this.state)\n    })\n  }\n\n  render() {\n    const { likeCount } = this.props\n    const { like } = this.state\n    const liked = like && like.isActive ? true : false\n    // console.log(\"state: \", this.state)\n\n    return(\n      <div>\n      <div className=\"icons-wrapper\">\n        <div className=\"post-act\">\n          <span className=\"\">\n            <button onClick={this.handleLike}>\n              {liked\n                ? <i className=\"material-icons blue-text\">thumb_up</i>\n                : <i className=\"material-icons\">thumb_up</i>\n              }\n            </button>\n          </span>\n          <span className=\"\">\n          <button>\n            <i className=\"material-icons\">send</i>\n          </button>\n          </span>\n        </div>\n        <div className=\"save\">\n          <span className=\"\">\n            <button onClick={this.addCollection}>\n               <i className=\"material-icons center\"\n                    title=\"add to your collection\">\n                  add_to_photos\n                </i>\n            </button>\n          </span>\n        </div>\n      </div>\n        {likeCount\n          ?\n            <div className=\"counts\">\n              <span className=\"like-count\">\n                {likeCount} likes\n              </span>\n            </div>\n          : null\n        }\n      </div>\n    )\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    createLike: (like) => dispatch(createLike(like)),\n    removeLike: (like) => dispatch(removeLike(like)),\n    updateLike: (like) => dispatch(updateLike(like)),\n    addCollection: (post) => dispatch(addCollection(post))\n  }\n}\n\n\nexport default connect(null, mapDispatchToProps)(PostCerdits)\n"]},"metadata":{},"sourceType":"module"}