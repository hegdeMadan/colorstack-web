{"ast":null,"code":"import _classCallCheck from \"/home/madan/Documents/workspace/artwork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/madan/Documents/workspace/artwork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/madan/Documents/workspace/artwork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/madan/Documents/workspace/artwork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/madan/Documents/workspace/artwork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/madan/Documents/workspace/artwork/src/components/projects/projectActs/PostCredits.js\";\nimport React, { Component } from 'react';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { createLike as _createLike } from '../../../store/actions/LikeActions';\nimport { addCollection as _addCollection } from '../../../store/actions/AddToCollection';\n\nvar PostCerdits =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PostCerdits, _Component);\n\n  function PostCerdits() {\n    var _this;\n\n    _classCallCheck(this, PostCerdits);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PostCerdits).call(this));\n\n    _this.incrementLike = function () {\n      var likes = _this.props.likeCount + 1;\n\n      _this.setState(function () {\n        return {\n          likeToPost: _this.props.project.id,\n          likeCount: likes\n        };\n      }, function () {\n        _this.props.createLike(_this.state);\n      });\n    };\n\n    _this.addCollection = function () {\n      var collectedCount = _this.props.collected + 1;\n      var activeStatus = _this.props.isActive ? false : true;\n\n      _this.setState(function () {\n        return {\n          imageUrl: _this.props.project.imageUrl,\n          postId: _this.props.project.id,\n          activeStatus: activeStatus,\n          collectedCount: collectedCount\n        };\n      }, function () {\n        _this.props.addCollection(_this.state);\n      });\n    };\n\n    _this.state = {};\n    return _this;\n  } // incrementing like to the post\n\n\n  _createClass(PostCerdits, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          likeCount = _this$props.likeCount,\n          auth = _this$props.auth,\n          like = _this$props.like; // console.log(auth.uid)\n\n      if (like && like.length > 0) {\n        this.setState({\n          style: {\n            color: 'blue'\n          }\n        });\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"icons-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"post-act\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.incrementLike,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"material-icons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"thumb_up\"))), React.createElement(\"span\", {\n        className: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"material-icons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"send\")))), React.createElement(\"div\", {\n        className: \"save\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.addCollection,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"material-icons center\",\n        title: \"add to your collection\",\n        style: this.state.style,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"add_to_photos\"))))), likeCount ? React.createElement(\"div\", {\n        className: \"counts\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"like-count\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, likeCount, \" likes\")) : null);\n    }\n  }]);\n\n  return PostCerdits;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  console.log(\"x \\n\", state);\n  return {\n    like: state.firestore.ordered.likes\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    createLike: function createLike(like) {\n      return dispatch(_createLike(like));\n    },\n    addCollection: function addCollection(post) {\n      return dispatch(_addCollection(post));\n    }\n  };\n};\n\nexport default compose(firestoreConnect(function (props) {\n  return [{\n    collection: 'projects',\n    doc: props.project.id,\n    subcollections: [{\n      collection: 'likes',\n      where: [['likeFromId', '==', props.auth.uid]]\n    }],\n    storeAs: 'likes'\n  }];\n}), connect(mapStateToProps, mapDispatchToProps))(PostCerdits);","map":{"version":3,"sources":["/home/madan/Documents/workspace/artwork/src/components/projects/projectActs/PostCredits.js"],"names":["React","Component","firestoreConnect","compose","connect","createLike","addCollection","PostCerdits","incrementLike","likes","props","likeCount","setState","likeToPost","project","id","state","collectedCount","collected","activeStatus","isActive","imageUrl","postId","auth","like","length","style","color","mapStateToProps","console","log","firestore","ordered","mapDispatchToProps","dispatch","post","collection","doc","subcollections","where","uid","storeAs"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux'\nimport { connect } from 'react-redux'\nimport { createLike } from '../../../store/actions/LikeActions'\nimport { addCollection } from '../../../store/actions/AddToCollection'\n\nclass PostCerdits extends Component {\n  constructor() {\n    super()\n    this.state = {}\n  }\n\n  // incrementing like to the post\n  incrementLike = () => {\n    let likes = this.props.likeCount + 1\n    this.setState(() => {\n      return {\n        likeToPost: this.props.project.id,\n        likeCount: likes\n      }\n    }, () => {\n      this.props.createLike(this.state)\n    })\n  }\n\n  // adding post to user's collection\n  addCollection = () => {\n    let collectedCount = this.props.collected + 1\n    let activeStatus = this.props.isActive ? false : true\n    this.setState(() => {\n      return {\n        imageUrl: this.props.project.imageUrl,\n        postId: this.props.project.id,\n        activeStatus,\n        collectedCount\n      }\n    }, () => {\n      this.props.addCollection(this.state)\n    })\n  }\n\n  render() {\n    const { likeCount, auth, like } = this.props\n    // console.log(auth.uid)\n    if(like && like.length > 0) {\n      this.setState({\n        style: {\n          color: 'blue'\n        }\n      })\n    }\n    return(\n      <div>\n      <div className=\"icons-wrapper\">\n        <div className=\"post-act\">\n          <span className=\"\">\n            <button onClick={this.incrementLike}>\n              <i className=\"material-icons\">thumb_up</i>\n            </button>\n          </span>\n          <span className=\"\">\n            <button>\n              <i className=\"material-icons\">send</i>\n            </button>\n          </span>\n        </div>\n        <div className=\"save\">\n          <span className=\"\">\n            <button onClick={this.addCollection}>\n              <i className=\"material-icons center\"\n                  title=\"add to your collection\"\n                  style={this.state.style}>\n                add_to_photos\n              </i>\n            </button>\n          </span>\n        </div>\n      </div>\n\n          {likeCount\n            ?\n              <div className=\"counts\">\n                <span className=\"like-count\">\n                  {likeCount} likes\n                </span>\n              </div>\n            : null\n          }\n      </div>\n    )\n  }\n}\nconst mapStateToProps = (state) => {\n  console.log(\"x \\n\", state)\n  return{\n    like: state.firestore.ordered.likes\n  }\n}\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    createLike: (like) => dispatch(createLike(like)),\n    addCollection: (post) => dispatch(addCollection(post))\n  }\n}\n\n\nexport default compose(\n  firestoreConnect(props => {\n    return [\n      {collection: 'projects',\n        doc: props.project.id,\n        subcollections: [{\n          collection: 'likes',\n          where: [\n            ['likeFromId', '==', props.auth.uid]\n          ]\n        }],\n        storeAs: 'likes'\n      }\n    ]\n  }),\n  connect(mapStateToProps, mapDispatchToProps)\n)(PostCerdits)\n"]},"metadata":{},"sourceType":"module"}