{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _assign2 = require('lodash/fp/assign');\n\nvar _assign3 = _interopRequireDefault(_assign2);\n\nvar _setWith2 = require('lodash/fp/setWith');\n\nvar _setWith3 = _interopRequireDefault(_setWith2);\n\nvar _dropRight2 = require('lodash/dropRight');\n\nvar _dropRight3 = _interopRequireDefault(_dropRight2);\n\nvar _last2 = require('lodash/last');\n\nvar _last3 = _interopRequireDefault(_last2);\n\nvar _get2 = require('lodash/get');\n\nvar _get3 = _interopRequireDefault(_get2);\n\nexports.default = dataReducer;\n\nvar _constants = require('../constants');\n\nvar _query = require('../utils/query');\n\nvar _reducers = require('../utils/reducers');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar CLEAR_DATA = _constants.actionTypes.CLEAR_DATA,\n    GET_SUCCESS = _constants.actionTypes.GET_SUCCESS,\n    LISTENER_RESPONSE = _constants.actionTypes.LISTENER_RESPONSE,\n    LISTENER_ERROR = _constants.actionTypes.LISTENER_ERROR,\n    DELETE_SUCCESS = _constants.actionTypes.DELETE_SUCCESS,\n    DOCUMENT_ADDED = _constants.actionTypes.DOCUMENT_ADDED,\n    DOCUMENT_MODIFIED = _constants.actionTypes.DOCUMENT_MODIFIED,\n    DOCUMENT_REMOVED = _constants.actionTypes.DOCUMENT_REMOVED;\n\nfunction dataReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments[1];\n\n  switch (action.type) {\n    case GET_SUCCESS:\n    case LISTENER_RESPONSE:\n      var meta = action.meta,\n          payload = action.payload;\n\n      if (!payload || payload.data === undefined) {\n        return state;\n      }\n\n      var queryName = (0, _query.getQueryName)(meta, {\n        onlySubcollections: true\n      });\n      var previousData = (0, _get3.default)(state, meta.storeAs || queryName);\n\n      if (meta.subcollections) {\n        var setPath = queryName.split('/').length % 2 ? (0, _query.getQueryName)(meta) : (0, _dropRight3.default)((0, _reducers.pathToArr)(queryName)).join('/');\n        return (0, _setWith3.default)(Object, setPath, payload.data, state);\n      }\n\n      if (!previousData || meta.subcollections) {\n        return (0, _setWith3.default)(Object, meta.storeAs || queryName, payload.data, state);\n      }\n\n      var mergedData = (0, _assign3.default)(previousData, payload.data);\n      return (0, _setWith3.default)(Object, meta.storeAs || queryName, mergedData, state);\n\n    case DOCUMENT_MODIFIED:\n    case DOCUMENT_ADDED:\n      return (0, _setWith3.default)(Object, (0, _query.getQueryName)(action.meta, {\n        onlySubcollections: true\n      }), action.payload.data, state);\n\n    case DOCUMENT_REMOVED:\n    case DELETE_SUCCESS:\n      var removePath = (0, _query.getQueryName)(action.meta, {\n        onlySubcollections: true\n      });\n      var id = (0, _last3.default)((0, _reducers.pathToArr)((0, _query.getQueryName)(action.meta)));\n      var cleanedState = (0, _setWith3.default)(Object, removePath + '.' + id, null, state);\n\n      if (action.preserve && action.preserve.data) {\n        return (0, _reducers.preserveValuesFromState)(state, action.preserve.data, cleanedState);\n      }\n\n      return cleanedState;\n\n    case CLEAR_DATA:\n      if (action.preserve && action.preserve.data) {\n        return (0, _reducers.preserveValuesFromState)(state, action.preserve.data, {});\n      }\n\n      return {};\n\n    case LISTENER_ERROR:\n      var nextState = (0, _setWith3.default)(Object, (0, _query.getQueryName)(action.meta, {\n        onlySubcollections: true\n      }), null, state);\n\n      if (action.preserve && action.preserve.data) {\n        return (0, _reducers.preserveValuesFromState)(state, action.preserve.data, nextState);\n      }\n\n      var existingState = (0, _get3.default)(state, (0, _query.getQueryName)(action.meta, {\n        onlySubcollections: true\n      }));\n\n      if (existingState) {\n        return state;\n      }\n\n      return nextState;\n\n    default:\n      return state;\n  }\n}","map":null,"metadata":{},"sourceType":"script"}