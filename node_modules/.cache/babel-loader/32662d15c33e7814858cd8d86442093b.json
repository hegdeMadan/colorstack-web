{"ast":null,"code":"import _classCallCheck from \"/home/madan/Documents/workspace/artwork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/madan/Documents/workspace/artwork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/madan/Documents/workspace/artwork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/madan/Documents/workspace/artwork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/madan/Documents/workspace/artwork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/madan/Documents/workspace/artwork/src/components/profile/UploadImage.js\";\nimport React, { Component } from 'react'; // import firebase from 'firebase/app'\n\nimport ReactCrop from 'react-image-crop';\nimport 'react-image-crop/dist/ReactCrop.css';\nimport portrait from '../../static/portrait.png';\nimport { base64StringtoFile, downloadBase64File, extractImageFileExtensionFromBase64, image64toCanvasRef } from '../../utils/CropOutput';\n\nvar UploadImage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(UploadImage, _Component);\n\n  function UploadImage() {\n    var _this;\n\n    _classCallCheck(this, UploadImage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UploadImage).call(this));\n\n    _this.handleClick = function () {\n      _this.props.onClick();\n    };\n\n    _this.handleChange = function (crop) {\n      _this.setState({\n        crop: crop\n      });\n    };\n\n    _this.handleOnCropComplete = function (crop, pixcelCrop) {\n      var canvasRef = _this.imagePreviewCanvasRef.current;\n      var imgSrc = _this.state.imgSrc;\n      image64toCanvasRef(canvasRef, imgSrc, pixelCrop);\n    };\n\n    _this.handleFile = function (event) {\n      event.persist();\n      var input = event.target;\n      var reader = new FileReader();\n\n      reader.onload = function () {\n        var dataURL = reader.result;\n        console.log(\"img: \", dataURL);\n\n        _this.setState(function () {\n          return {\n            imageSrc: dataURL\n          };\n        });\n      };\n\n      reader.readAsDataURL(input.files[0]);\n    };\n\n    _this.imagePreviewCanvasRef = React.createRef();\n    _this.fileInputRef = React.createRef();\n    _this.state = {\n      imageSrc: portrait,\n      crop: {\n        aspect: 1 / 1\n      }\n    };\n    return _this;\n  }\n\n  _createClass(UploadImage, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"modal-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"close right\",\n        onClick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"white-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"close\"), React.createElement(\"i\", {\n        className: \"material-icons white-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"close\")), React.createElement(\"div\", {\n        className: \"image-modal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"photo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(ReactCrop, {\n        className: \"responsive-img\",\n        src: this.state.imageSrc,\n        crop: this.state.crop,\n        onChange: this.handleChange,\n        onComplete: this.handleOnCropComplete,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"select-file center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"file\",\n        onChange: this.handleFile,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn indigo z-depth-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"Upload\")))));\n    }\n  }]);\n\n  return UploadImage;\n}(Component);\n\nexport default UploadImage;","map":{"version":3,"sources":["/home/madan/Documents/workspace/artwork/src/components/profile/UploadImage.js"],"names":["React","Component","ReactCrop","portrait","base64StringtoFile","downloadBase64File","extractImageFileExtensionFromBase64","image64toCanvasRef","UploadImage","handleClick","props","onClick","handleChange","crop","setState","handleOnCropComplete","pixcelCrop","canvasRef","imagePreviewCanvasRef","current","imgSrc","state","pixelCrop","handleFile","event","persist","input","target","reader","FileReader","onload","dataURL","result","console","log","imageSrc","readAsDataURL","files","createRef","fileInputRef","aspect"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n// import firebase from 'firebase/app'\nimport ReactCrop from 'react-image-crop'\nimport 'react-image-crop/dist/ReactCrop.css';\nimport portrait from '../../static/portrait.png'\nimport {base64StringtoFile,\n  downloadBase64File,\n  extractImageFileExtensionFromBase64,\n  image64toCanvasRef} from '../../utils/CropOutput'\n\nclass UploadImage extends Component {\n  constructor() {\n    super()\n    this.imagePreviewCanvasRef = React.createRef()\n    this.fileInputRef = React.createRef()\n    this.state = {\n      imageSrc: portrait,\n      crop: {\n        aspect: 1/1\n      }\n    }\n  }\n\n  handleClick = () => {\n    this.props.onClick()\n  }\n\n  handleChange = (crop) => {\n    this.setState({ crop });\n  }\n\n  handleOnCropComplete = (crop, pixcelCrop) => {\n    const canvasRef = this.imagePreviewCanvasRef.current\n    const {imgSrc}  = this.state\n    image64toCanvasRef(canvasRef, imgSrc, pixelCrop)\n  }\n\n  handleFile = (event) => {\n    event.persist()\n    const input = event.target;\n\n     const reader = new FileReader()\n     reader.onload = () => {\n       const dataURL = reader.result\n       console.log(\"img: \", dataURL)\n       this.setState(() => {\n         return {\n           imageSrc: dataURL\n         }\n       })\n     };\n     reader.readAsDataURL(input.files[0])\n  }\n\n  render() {\n    return(\n      <div className=\"modal-wrapper\">\n        <div className=\"close right\" onClick={this.handleClick}>\n          <span className=\"white-text\">close</span>\n            <i className=\"material-icons white-text\">\n              close\n            </i>\n        </div>\n        <div className=\"image-modal\">\n          <div className=\"photo\">\n            {/*<img src={this.state.imageSrc}\n              alt=\"dp\"\n              className=\"responsive-img\"/>*/}\n            <ReactCrop\n              className=\"responsive-img\"\n              src={this.state.imageSrc}\n              crop={this.state.crop}\n              onChange={this.handleChange}\n              onComplete={this.handleOnCropComplete}/>\n\n          </div>\n          <div className=\"select-file center\">\n            <form>\n              <input type=\"file\" onChange={this.handleFile} />\n              <button type=\"submit\" className=\"btn indigo z-depth-0\">\n                Upload\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default UploadImage\n"]},"metadata":{},"sourceType":"module"}