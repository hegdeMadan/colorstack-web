{"ast":null,"code":"import _classCallCheck from \"/home/madan/Documents/workspace/artwork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/madan/Documents/workspace/artwork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/madan/Documents/workspace/artwork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/madan/Documents/workspace/artwork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/madan/Documents/workspace/artwork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/madan/Documents/workspace/artwork/src/components/projects/projectActs/AddComment.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { createComment as _createComment } from '../../../store/actions/CommentAction';\n\nvar AddComment =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AddComment, _Component);\n\n  function AddComment() {\n    var _this;\n\n    _classCallCheck(this, AddComment);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddComment).call(this));\n\n    _this.handleSubmit = function (event) {\n      event.preventDefault();\n      event.persist();\n      console.log(\"before: \", _this.state);\n\n      _this.setState(function () {\n        return {\n          comment: _this.refs.comment.value,\n          commentToPost: _this.props.projectId\n        };\n      }, function () {\n        _this.props.createComment(_this.state);\n\n        event.target.reset();\n\n        _this.props.onClick();\n      });\n    };\n\n    _this.state = {\n      comment: '',\n      commentToPost: ''\n    };\n    return _this;\n  }\n\n  _createClass(AddComment, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"comments\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        action: \"\",\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        ref: \"comment\",\n        placeholder: \"add your comment...\",\n        className: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn transparent z-depth-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return AddComment;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    profile: state.firebase.profile,\n    auth: state.firebase.auth\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    createComment: function createComment(comments) {\n      return dispatch(_createComment(comments));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddComment);","map":{"version":3,"sources":["/home/madan/Documents/workspace/artwork/src/components/projects/projectActs/AddComment.js"],"names":["React","Component","connect","createComment","AddComment","handleSubmit","event","preventDefault","persist","console","log","state","setState","comment","refs","value","commentToPost","props","projectId","target","reset","onClick","mapStateToProps","profile","firebase","auth","mapDispatchToProps","dispatch","comments"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,aAAa,IAAbA,cAAT,QAA8B,sCAA9B;;IAEMC,U;;;;;AACJ,wBAAc;AAAA;;AAAA;;AACZ;;AADY,UAQdC,YARc,GAQC,UAACC,KAAD,EAAW;AACxBA,MAAAA,KAAK,CAACC,cAAN;AACAD,MAAAA,KAAK,CAACE,OAAN;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwB,MAAKC,KAA7B;;AACA,YAAKC,QAAL,CAAc,YAAM;AAClB,eAAO;AACLC,UAAAA,OAAO,EAAE,MAAKC,IAAL,CAAUD,OAAV,CAAkBE,KADtB;AAELC,UAAAA,aAAa,EAAE,MAAKC,KAAL,CAAWC;AAFrB,SAAP;AAID,OALD,EAKG,YAAM;AACP,cAAKD,KAAL,CAAWd,aAAX,CAAyB,MAAKQ,KAA9B;;AACAL,QAAAA,KAAK,CAACa,MAAN,CAAaC,KAAb;;AACA,cAAKH,KAAL,CAAWI,OAAX;AACD,OATD;AAUD,KAtBa;;AAEZ,UAAKV,KAAL,GAAa;AACXE,MAAAA,OAAO,EAAE,EADE;AAEXG,MAAAA,aAAa,EAAC;AAFH,KAAb;AAFY;AAMb;;;;6BAkBQ;AACP,aACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,MAAM,EAAC,EAAb;AAAgB,QAAA,QAAQ,EAAE,KAAKX,YAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,GAAG,EAAC,SAAvB;AAAiC,QAAA,WAAW,EAAC,qBAA7C;AAAmE,QAAA,SAAS,EAAC,EAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,2BAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF,CADF;AAQD;;;;EAlCsBJ,S;;AAqCzB,IAAMqB,eAAe,GAAG,SAAlBA,eAAkB,CAACX,KAAD,EAAW;AACjC,SAAO;AACLY,IAAAA,OAAO,EAAEZ,KAAK,CAACa,QAAN,CAAeD,OADnB;AAELE,IAAAA,IAAI,EAAEd,KAAK,CAACa,QAAN,CAAeC;AAFhB,GAAP;AAID,CALD;;AAOA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD,EAAc;AACvC,SAAO;AACLxB,IAAAA,aAAa,EAAE,uBAACyB,QAAD;AAAA,aAAcD,QAAQ,CAACxB,cAAa,CAACyB,QAAD,CAAd,CAAtB;AAAA;AADV,GAAP;AAGD,CAJD;;AAMA,eAAe1B,OAAO,CAACoB,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CtB,UAA7C,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { createComment } from '../../../store/actions/CommentAction'\n\nclass AddComment extends Component {\n  constructor() {\n    super()\n    this.state = {\n      comment: '',\n      commentToPost:''\n    }\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault()\n    event.persist()\n    console.log(\"before: \", this.state)\n    this.setState(() => {\n      return {\n        comment: this.refs.comment.value,\n        commentToPost: this.props.projectId\n      }\n    }, () => {\n      this.props.createComment(this.state)\n      event.target.reset()\n      this.props.onClick()\n    })\n  }\n\n  render() {\n    return(\n      <div className=\"comments\">\n        <form action=\"\" onSubmit={this.handleSubmit}>\n          <input type=\"text\" ref=\"comment\" placeholder=\"add your comment...\" className=\"\" />\n          <button type=\"submit\" className=\"btn transparent z-depth-0\"></button>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    profile: state.firebase.profile,\n    auth: state.firebase.auth\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    createComment: (comments) => dispatch(createComment(comments))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddComment)\n"]},"metadata":{},"sourceType":"module"}