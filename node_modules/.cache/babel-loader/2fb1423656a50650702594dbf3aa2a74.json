{"ast":null,"code":"import _objectSpread from \"/home/madan/Documents/workspace/artwork/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/madan/Documents/workspace/artwork/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/madan/Documents/workspace/artwork/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/madan/Documents/workspace/artwork/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/madan/Documents/workspace/artwork/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/madan/Documents/workspace/artwork/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/madan/Documents/workspace/artwork/src/components/dashboard/Dashboard.js\";\nimport React, { Component } from 'react';\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { Redirect } from 'react-router-dom'; // import { addUserAfterGoogleSignIn } from '../../store/actions/AuthActions'\n// import Notification from './Notification'\n\nimport Navbar from '../layout/Navbar';\nimport MobileNavbar from '../layout/MobileNavbar';\nimport ProjectList from '../projects/ProjectList'; // import { Album } from '../projects/Album'\n// import Footer from './Footer'\n\nimport Spinner from './Spinner';\nimport CreatePost from '../projects/CreatePost';\nimport Category from './Category';\nimport Users from './Users'; // import Intro from '../layout/Intro'\n\nvar Dashboard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Dashboard, _Component);\n\n  function Dashboard() {\n    var _this;\n\n    _classCallCheck(this, Dashboard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Dashboard).call(this));\n\n    _this.renewPost = function () {\n      var db = firebase.firestore();\n      var lastVisible = _this.lastVisible ? _this.lastVisible : false;\n\n      if (_this.lastVisible) {\n        return db.collection('projects').orderBy('createdAt', 'desc').startAfter(lastVisible).limit(5).get().then(function (documentSnapshots) {\n          // getting the last visible document for pagination\n          _this.lastVisible = documentSnapshots.docs[documentSnapshots.docs.length - 1];\n          documentSnapshots.forEach(function (docs) {\n            var obj = _objectSpread({}, docs.data(), {\n              id: docs.id\n            });\n\n            _this.post.push(obj);\n\n            _this.setState(function () {\n              return {\n                posts: _this.post,\n                isLoading: false\n              };\n            });\n          });\n        });\n      }\n    };\n\n    _this.getPosts = function () {\n      var uid = _this.props.auth.uid;\n\n      if (uid) {\n        var db = firebase.firestore(); // getting posts of \"folowing users\"\n\n        return db.collection('projects').orderBy('createdAt', 'desc').limit(5).get().then(function (documentSnapshots) {\n          // getting the last visible document for pagination\n          _this.lastVisible = documentSnapshots.docs[documentSnapshots.docs.length - 1];\n          documentSnapshots.forEach(function (docs) {\n            var obj = _objectSpread({}, docs.data(), {\n              id: docs.id\n            });\n\n            _this.post.push(obj);\n\n            _this.setState(function () {\n              return {\n                posts: _this.post,\n                isLoading: false\n              };\n            });\n          });\n        });\n      } else {\n        return React.createElement(Redirect, {\n          to: \"/signin\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132\n          },\n          __self: this\n        });\n      }\n    };\n\n    _this.displayPeople = function () {\n      if (_this.state.style.display === \"none\") {\n        _this.setState({\n          style: {\n            display: \"block\"\n          }\n        });\n      } else {\n        _this.setState({\n          style: {\n            display: \"none\"\n          }\n        });\n      }\n    };\n\n    _this.post = [];\n    _this.users = [];\n    _this.lastVisible = '';\n    _this.followers = [];\n    _this.state = {\n      isAlbumSelected: false,\n      isLoading: true,\n      style: {\n        display: \"none\"\n      }\n    };\n    _this.mobileNav = React.createRef();\n    return _this;\n  } // TODO: get the posts manually and dispatch it\n  // to the store\n  // TODO: set data to local storage once component\n  // successfully mounted\n\n\n  _createClass(Dashboard, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // addUserAfterGoogleSignIn()\n      this.getPosts(); // this.getUsers()\n    } // getUsers = () => {\n    //   const db = firebase.firestore()\n    //   return db.collection('users')\n    //     .orderBy('firstName')\n    //     .get().then(documentSnapshots => {\n    //       documentSnapshots.forEach(doc => {\n    //         let obj = {\n    //           ...doc.data(),\n    //           id: doc.id\n    //         }\n    //         this.users.push(obj)\n    //         this.setState(() => {\n    //           return {\n    //             users: this.users\n    //           }\n    //         })\n    //       })\n    //     })\n    // }\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      // console.log(\"project: \", this.state)\n      // console.log(\"st: \", this.state)\n      var auth = this.props.auth;\n      var _this$state = this.state,\n          posts = _this$state.posts,\n          isLoading = _this$state.isLoading;\n      if (!auth.uid) return React.createElement(Redirect, {\n        to: \"/signin\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }); // redirecting signed out users to signin/signup page\n      // if(this.state.isAlbumSelected)\n\n      if (isLoading) {\n        return React.createElement(\"div\", {\n          className: \"spinner_wrapper\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154\n          },\n          __self: this\n        }, React.createElement(Spinner, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155\n          },\n          __self: this\n        }));\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"navbar_wrapper\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161\n          },\n          __self: this\n        }, React.createElement(Navbar, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"hide-on-med-and-up mobile_navbar\",\n          ref: this.mobileNav,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 164\n          },\n          __self: this\n        }, React.createElement(MobileNavbar, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 167\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"dashboard container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 170\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"col l1 m1 hide-on-small-only hide-993\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172\n          },\n          __self: this\n        }, React.createElement(Category, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"col l5 offset-l1 m8 offset-m2 s12\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"hide-on-large-only\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 176\n          },\n          __self: this\n        }, React.createElement(CreatePost, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 177\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 183\n          },\n          __self: this\n        }, React.createElement(ProjectList, {\n          projects: posts,\n          auth: auth,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 184\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"load_more\",\n          onClick: this.renewPost,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 185\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 188\n          },\n          __self: this\n        }, \"Load More\", React.createElement(\"i\", {\n          className: \"material-icons\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 190\n          },\n          __self: this\n        }, \"autorenew\"))))), React.createElement(\"div\", {\n          className: \"col l4 offset-l1 hide-on-med-and-down\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 197\n          },\n          __self: this\n        }, React.createElement(CreatePost, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 199\n          },\n          __self: this\n        }), this.users ? React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 201\n          },\n          __self: this\n        }, React.createElement(Users, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 202\n          },\n          __self: this\n        })) : null)), React.createElement(\"div\", {\n          className: \"footer-cover\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 207\n          },\n          __self: this\n        })));\n      }\n    }\n  }]);\n\n  return Dashboard;\n}(Component); // const mapDispatchToProps = (dispatch) => {\n//   return {\n//     addUserAfterGoogleSignIn:\n//   }\n// }\n\n\nvar mapStateToProps = function mapStateToProps(state) {\n  // console.log(state)\n  return {\n    projects: state.firestore.ordered.projects,\n    initials: state.firebase.profile.initials,\n    auth: state.firebase.auth,\n    notifications: state.firestore.ordered.notifications\n  };\n};\n\nexport default compose(firestoreConnect([{\n  collection: 'projects',\n  orderBy: ['createdAt', 'desc']\n}, {\n  collection: 'notifications',\n  limit: 3,\n  orderBy: ['time', 'desc']\n}]), connect(mapStateToProps))(Dashboard);","map":{"version":3,"sources":["/home/madan/Documents/workspace/artwork/src/components/dashboard/Dashboard.js"],"names":["React","Component","firebase","connect","compose","firestoreConnect","Redirect","Navbar","MobileNavbar","ProjectList","Spinner","CreatePost","Category","Users","Dashboard","renewPost","db","firestore","lastVisible","collection","orderBy","startAfter","limit","get","then","documentSnapshots","docs","length","forEach","obj","data","id","post","push","setState","posts","isLoading","getPosts","uid","props","auth","displayPeople","state","style","display","users","followers","isAlbumSelected","mobileNav","createRef","mapStateToProps","projects","ordered","initials","profile","notifications"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport { connect } from 'react-redux'\nimport { compose } from 'redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { Redirect } from 'react-router-dom'\n// import { addUserAfterGoogleSignIn } from '../../store/actions/AuthActions'\n// import Notification from './Notification'\nimport Navbar from '../layout/Navbar'\nimport MobileNavbar from '../layout/MobileNavbar'\nimport ProjectList from '../projects/ProjectList'\n// import { Album } from '../projects/Album'\n// import Footer from './Footer'\nimport Spinner from './Spinner'\nimport CreatePost from '../projects/CreatePost'\nimport Category from './Category'\nimport Users from './Users'\n// import Intro from '../layout/Intro'\n\nclass Dashboard extends Component {\n  constructor() {\n    super()\n    this.post = []\n    this.users = []\n    this.lastVisible = ''\n    this.followers = []\n    this.state = {\n      isAlbumSelected: false,\n      isLoading: true,\n      style: {\n          display: \"none\"\n      }\n    }\n    this.mobileNav = React.createRef()\n  }\n\n  // TODO: get the posts manually and dispatch it\n  // to the store\n  // TODO: set data to local storage once component\n  // successfully mounted\n\n  componentDidMount() {\n    // addUserAfterGoogleSignIn()\n    this.getPosts()\n    // this.getUsers()\n  }\n\n  // getUsers = () => {\n  //   const db = firebase.firestore()\n\n  //   return db.collection('users')\n  //     .orderBy('firstName')\n  //     .get().then(documentSnapshots => {\n  //       documentSnapshots.forEach(doc => {\n  //         let obj = {\n  //           ...doc.data(),\n  //           id: doc.id\n  //         }\n  //         this.users.push(obj)\n  //         this.setState(() => {\n  //           return {\n  //             users: this.users\n  //           }\n  //         })\n  //       })\n  //     })\n  // }\n\n  renewPost = () => {\n    const db = firebase.firestore()\n    const lastVisible = this.lastVisible ? this.lastVisible : false\n\n    if(this.lastVisible) {\n      return db.collection('projects')\n        .orderBy('createdAt', 'desc')\n        .startAfter(lastVisible)\n        .limit(5)\n        .get().then(documentSnapshots => {\n\n          // getting the last visible document for pagination\n          this.lastVisible = documentSnapshots.docs[documentSnapshots.docs.length-1]\n\n          documentSnapshots.forEach((docs) => {\n            let obj = {\n              ...docs.data(),\n              id: docs.id\n            }\n            this.post.push(obj)\n            this.setState(() => {\n              return {\n                posts: this.post,\n                isLoading: false\n              }\n            })\n          })\n        })\n    }\n  }\n\n  getPosts = () => {\n    const uid = this.props.auth.uid\n    if(uid) {\n\n      const db = firebase.firestore()\n\n      // getting posts of \"folowing users\"\n      return db.collection('projects')\n        .orderBy('createdAt', 'desc')\n        .limit(5)\n        .get().then(documentSnapshots => {\n\n          // getting the last visible document for pagination\n          this.lastVisible = documentSnapshots.docs[documentSnapshots.docs.length-1]\n\n          documentSnapshots.forEach((docs) => {\n            let obj = {\n              ...docs.data(),\n              id: docs.id\n            }\n            this.post.push(obj)\n            this.setState(() => {\n              return {\n                posts: this.post,\n                isLoading: false\n              }\n            })\n          })\n        })\n    } else {\n      return(\n        <Redirect to='/signin' />\n      )\n    }\n  }\n\n  displayPeople = () => {\n    if(this.state.style.display === \"none\") {\n      this.setState({style:{display:\"block\"}})\n    } else {\n      this.setState({style:{display:\"none\"}})\n    }\n  }\n\n  render() {\n  // console.log(\"project: \", this.state)\n    // console.log(\"st: \", this.state)\n    const { auth } = this.props\n    const { posts, isLoading } = this.state\n    if (!auth.uid) return <Redirect to='/signin' /> // redirecting signed out users to signin/signup page\n    // if(this.state.isAlbumSelected)\n    if(isLoading) {\n      return(\n        <div className=\"spinner_wrapper\">\n          <Spinner />\n        </div>\n      )\n    } else {\n      return(\n        <div>\n          <div className=\"navbar_wrapper\">\n            <Navbar />\n          </div>\n          <div\n            className=\"hide-on-med-and-up mobile_navbar\"\n            ref={this.mobileNav}>\n            <MobileNavbar />\n          </div>\n\n          <div className=\"dashboard container\">\n            <div className=\"row\">\n              <div className=\"col l1 m1 hide-on-small-only hide-993\">\n                <Category />\n              </div>\n              <div className=\"col l5 offset-l1 m8 offset-m2 s12\">\n                <div className=\"hide-on-large-only\">\n                  <CreatePost />\n                </div>\n                {/*<div>\n                  <Album />\n                </div>*/}\n\n                    <div>\n                      <ProjectList projects={posts} auth={auth}/>\n                      <div\n                        className=\"load_more\"\n                        onClick={this.renewPost}>\n                        <span>\n                          Load More\n                          <i className=\"material-icons\">autorenew</i>\n                        </span>\n                      </div>\n                    </div>\n\n\n              </div>\n              <div className=\"col l4 offset-l1 hide-on-med-and-down\">\n                  {/*<Notification notifications={notifications} />*/}\n                <CreatePost />\n                {this.users\n                  ? <div>\n                      <Users />\n                    </div>\n                  : null}\n              </div>\n            </div>\n            <div className=\"footer-cover\">\n            </div>\n          </div>\n        </div>\n      )\n    }\n  }\n}\n\n// const mapDispatchToProps = (dispatch) => {\n//   return {\n//     addUserAfterGoogleSignIn:\n//   }\n// }\n\nconst mapStateToProps = (state) => {\n  // console.log(state)\n  return {\n    projects: state.firestore.ordered.projects,\n    initials: state.firebase.profile.initials,\n    auth: state.firebase.auth,\n    notifications: state.firestore.ordered.notifications\n  }\n}\n\nexport default compose (\n  firestoreConnect([\n      { collection: 'projects',\n        orderBy: ['createdAt', 'desc']\n      },\n      { collection: 'notifications',\n        limit: 3,\n        orderBy: ['time', 'desc']\n      }\n    ]),\n  connect(mapStateToProps)\n)(Dashboard)\n"]},"metadata":{},"sourceType":"module"}