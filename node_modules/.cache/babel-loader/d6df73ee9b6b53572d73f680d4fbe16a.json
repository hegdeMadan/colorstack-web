{"ast":null,"code":"import _classCallCheck from \"/home/madan/Documents/workspace/artwork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/madan/Documents/workspace/artwork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/madan/Documents/workspace/artwork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/madan/Documents/workspace/artwork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/madan/Documents/workspace/artwork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/madan/Documents/workspace/artwork/src/components/projects/CreatePost.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport firebase from 'firebase/app';\nimport { createProject as _createProject } from '../../store/actions/ProjectActions';\n\nvar CreateProject =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CreateProject, _Component);\n\n  function CreateProject() {\n    var _this;\n\n    _classCallCheck(this, CreateProject);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CreateProject).call(this));\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n      var uid = _this.props.auth.uid;\n      var image = _this.refs.image.files[0];\n      var storage = firebase.storage();\n      var storageRef = storage.ref(\"wallposts/\".concat(uid) + image.name); // creating storage reference\n      // inserting image to firestore\n\n      var uploadTask = storageRef.put(image);\n      uploadTask.on('state_changed', function (snapshot) {\n        // catch image upload progress\n        var progress = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n        console.log('Upload is ' + progress + '% done');\n\n        _this.setState({\n          progress: progress\n        });\n      }, function (error) {\n        console.log(error);\n      }, function () {\n        // getting download url for the image\n        uploadTask.snapshot.ref.getDownloadURL().then(function (url) {\n          var imageUrl = url;\n\n          _this.setState(function () {\n            return {\n              title: _this.refs.title.value,\n              content: _this.refs.content.value,\n              imageUrl: imageUrl\n            };\n          }, function () {\n            _this.props.createProject(_this.state); // this.props.history.push('/')\n\n          });\n        });\n      });\n    };\n\n    _this.state = {\n      title: '',\n      content: '',\n      imageUrl: '',\n      progress: 0\n    };\n    return _this;\n  }\n\n  _createClass(CreateProject, [{\n    key: \"render\",\n    value: function render() {\n      // getting uid from props\n      var auth = this.props.auth;\n      if (!auth.uid) return React.createElement(Redirect, {\n        to: \"/signin\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }); // redirecting signedOut user to signin page\n\n      return React.createElement(\"div\", {\n        className: \"section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card z-depth-0 show-up\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: \"sign-in\",\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        contentEditable: \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \" as \"), React.createElement(\"div\", {\n        className: \"input-field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn pink lighten-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"Create\"))), React.createElement(\"div\", {\n        className: \"container row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, this.state.progress !== 0 ? React.createElement(\"div\", {\n        className: \"upload-progress col l6 offset-l3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"progress\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \" Sit back! File's being uploaded \"), React.createElement(\"progress\", {\n        id: \"progress\",\n        value: this.state.progress,\n        max: \"100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      })) : null)));\n    }\n  }]);\n\n  return CreateProject;\n}(Component); // retrieving aut uid from firebase to store passing it as props\n\n\nvar mapStateToProps = function mapStateToProps(state) {\n  console.log(state);\n  return {\n    auth: state.firebase.auth\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    createProject: function createProject(project) {\n      return dispatch(_createProject(project));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject);","map":{"version":3,"sources":["/home/madan/Documents/workspace/artwork/src/components/projects/CreatePost.js"],"names":["React","Component","connect","Redirect","firebase","createProject","CreateProject","handleSubmit","e","preventDefault","uid","props","auth","image","refs","files","storage","storageRef","ref","name","uploadTask","put","on","snapshot","progress","bytesTransferred","totalBytes","console","log","setState","error","getDownloadURL","then","url","imageUrl","title","value","content","state","mapStateToProps","mapDispatchToProps","dispatch","project"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\nimport firebase from 'firebase/app'\nimport { createProject } from '../../store/actions/ProjectActions'\n\nclass CreateProject extends Component {\n  constructor() {\n    super()\n      this.state = {\n        title: '',\n        content: '',\n        imageUrl:'',\n        progress: 0\n      }\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault()\n    const { uid } = this.props.auth\n    const image = this.refs.image.files[0]\n    const storage = firebase.storage()\n    const storageRef = storage.ref(`wallposts/${uid}` + image.name) // creating storage reference\n\n    // inserting image to firestore\n    const uploadTask = storageRef.put(image)\n    uploadTask.on('state_changed',\n    (snapshot) => {\n      // catch image upload progress\n      const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n      console.log('Upload is ' + progress + '% done')\n      this.setState({progress})\n    },\n    (error) => {\n      console.log(error)\n    },\n    () => {\n      // getting download url for the image\n      uploadTask.snapshot.ref.getDownloadURL()\n      .then(url => {\n        var imageUrl = url\n        this.setState(() => {\n          return {\n            title: this.refs.title.value,\n            content: this.refs.content.value,\n            imageUrl\n          }\n        }, () => {\n          this.props.createProject(this.state)\n          // this.props.history.push('/')\n        })\n      })\n    })\n  }\n\n\n  render() {\n    // getting uid from props\n    const { auth } = this.props\n    if(!auth.uid) return <Redirect to='/signin' /> // redirecting signedOut user to signin page\n    return(\n      <div className=\"section\">\n        <div className=\"card z-depth-0 show-up\">\n          <form className=\"sign-in\" onSubmit={this.handleSubmit}>\n            <div contentEditable=\"true\"> as </div>\n            <div className=\"input-field\">\n              <button className=\"btn pink lighten-1\">Create</button>\n            </div>\n          </form>\n          <div className=\"container row\">\n          { this.state.progress !== 0\n            ? <div className=\"upload-progress col l6 offset-l3\">\n                <label htmlFor=\"progress\"> Sit back! File's being uploaded </label>\n                <progress id=\"progress\" value={this.state.progress} max=\"100\" />\n              </div>\n            : null\n          }\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\n// retrieving aut uid from firebase to store passing it as props\nconst mapStateToProps = (state) => {\n  console.log(state)\n  return {\n    auth: state.firebase.auth\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    createProject: (project) => dispatch(createProject(project))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject)\n"]},"metadata":{},"sourceType":"module"}