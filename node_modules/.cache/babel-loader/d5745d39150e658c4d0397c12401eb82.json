{"ast":null,"code":"var _jsxFileName = \"/home/madan/Documents/workspace/artwork/src/components/projects/projectActs/Comments.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport EachComment from './EachComment';\n\nvar Comments = function Comments(props) {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"loaded-comments\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"commentor\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, \"Name\"), \"content\")), \")})}\"));\n};\n\nvar mapStateToProps = function mapStateToProps(state, ownProps) {\n  id = ownProps.match.params.id ? ownProps.match.params.id : null;\n  console.log(id);\n  return {};\n};\n\nexport default compose(firestoreConnect(function (props) {\n  return [{\n    collection: 'projects',\n    doc: 'sdadsfa',\n    subcollections: [{\n      collection: 'comments'\n    }],\n    storeAs: 'comments'\n  }];\n}), connect(mapStateToProps))(Comments); // export default Comments","map":{"version":3,"sources":["/home/madan/Documents/workspace/artwork/src/components/projects/projectActs/Comments.js"],"names":["React","connect","compose","firestoreConnect","EachComment","Comments","props","mapStateToProps","state","ownProps","id","match","params","console","log","collection","doc","subcollections","storeAs"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,SAASC,gBAAT,QAAiC,sBAAjC;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAW;AAC1B,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,YADF,CADN,SADF,CADF;AAeD,CAhBD;;AAkBA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAQC,QAAR,EAAqB;AAC3CC,EAAAA,EAAE,GAAGD,QAAQ,CAACE,KAAT,CAAeC,MAAf,CAAsBF,EAAtB,GAA2BD,QAAQ,CAACE,KAAT,CAAeC,MAAf,CAAsBF,EAAjD,GAAsD,IAA3D;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYJ,EAAZ;AACA,SAAO,EAAP;AAGD,CAND;;AAQA,eAAeR,OAAO,CACpBC,gBAAgB,CAAC,UAAAG,KAAK,EAAI;AACxB,SAAO,CACL;AACES,IAAAA,UAAU,EAAE,UADd;AAEEC,IAAAA,GAAG,EAAE,SAFP;AAGEC,IAAAA,cAAc,EAAE,CACd;AACEF,MAAAA,UAAU,EAAE;AADd,KADc,CAHlB;AAQEG,IAAAA,OAAO,EAAE;AARX,GADK,CAAP;AAYD,CAbe,CADI,EAepBjB,OAAO,CAACM,eAAD,CAfa,CAAP,CAgBbF,QAhBa,CAAf,C,CAmBA","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport { compose } from 'redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport EachComment from './EachComment'\n\nconst Comments = (props) => {\n  return(\n    <div>\n      <div className=\"loaded-comments\">\n            <div>\n              <p>\n                <span className=\"commentor\">\n                  Name\n                </span>\n                content\n              </p>\n            </div>\n        )})}\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  id = ownProps.match.params.id ? ownProps.match.params.id : null\n  console.log(id)\n  return {\n\n  }\n}\n\nexport default compose (\n  firestoreConnect(props => {\n    return [\n      {\n        collection: 'projects',\n        doc: 'sdadsfa',\n        subcollections: [\n          {\n            collection: 'comments',\n          }\n        ],\n        storeAs: 'comments'\n      }\n    ]\n  }),\n  connect(mapStateToProps)\n)(Comments)\n\n\n// export default Comments\n"]},"metadata":{},"sourceType":"module"}