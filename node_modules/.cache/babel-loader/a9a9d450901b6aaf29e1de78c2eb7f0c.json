{"ast":null,"code":"import _objectSpread from \"/home/madan/Documents/workspace/artwork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/madan/Documents/workspace/artwork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/madan/Documents/workspace/artwork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/madan/Documents/workspace/artwork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/madan/Documents/workspace/artwork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/madan/Documents/workspace/artwork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/madan/Documents/workspace/artwork/src/components/dashboard/Dashboard.js\";\nimport React, { Component } from 'react';\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { Redirect } from 'react-router-dom';\nimport Notification from './Notification';\nimport ProjectList from '../projects/ProjectList'; // import Footer from './Footer'\n\nimport Spinner from './Spinner';\n\nvar Dashboard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Dashboard, _Component);\n\n  function Dashboard() {\n    var _this;\n\n    _classCallCheck(this, Dashboard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Dashboard).call(this));\n\n    _this.getPosts = function () {\n      var uid = _this.props.auth.uid;\n      var post = [];\n      var db = firebase.firestore(); // const followingRef = db.collection('users').doc(uid)\n      //   .collection('following')\n\n      return db.collection('projects').get().then(function (documentSnapshots) {\n        documentSnapshots.forEach(function (doc) {\n          console.log(\"docs\", doc.data());\n\n          var obj = _objectSpread({}, doc.data(), {\n            id: doc.id\n          });\n        });\n      }); // return followingRef.get().then(documentSnapshots => {\n      //   documentSnapshots.forEach(doc => {\n      //\n      //     // retrieving \"following\" id to get related posts\n      //     let data = doc.data()\n      //     let uid = data.userid\n      //     console.log(\"following: \", data, uid)\n      //\n      //     // getting posts of \"folowing users\"\n      //     return db.collection('projects')\n      //       .where('authorId', '==', uid)\n      //       .get().then((querySnapshots) => {\n      //\n      //         querySnapshots.forEach((docs) => {\n      //           let obj = {\n      //             ...docs.data(),\n      //             id: docs.id\n      //           }\n      //           post.push(obj)\n      //         })\n      //         .then(() => {\n      //           console.log(\"final:\", post)\n      //         })\n      //       })\n      //   })\n      // })\n    };\n\n    _this.lastVisible = '';\n    _this.state = {};\n    return _this;\n  } // TODO: get the posts manually and dispatch it\n  // to the store\n  // TODO: set data to local storage once component\n  // successfully mounted\n\n\n  _createClass(Dashboard, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getPosts();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      //  console.log(\"project: \", this.state)\n      var _this$props = this.props,\n          projects = _this$props.projects,\n          auth = _this$props.auth,\n          notifications = _this$props.notifications;\n      if (!auth.uid) return React.createElement(Redirect, {\n        to: \"/signin\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }); // redirecting signed out users to signin/signup page\n\n      if (projects && projects.length < 0) return React.createElement(Spinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      });\n      return React.createElement(\"div\", {\n        className: \"dashboard container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col l8 m12 s12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, projects ? React.createElement(ProjectList, {\n        projects: projects,\n        auth: auth,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }) : null), React.createElement(\"div\", {\n        className: \"col l4 hide-on-med-and-down\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(Notification, {\n        notifications: notifications,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"footer-cover\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Dashboard;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  // console.log(state)\n  return {\n    projects: state.firestore.ordered.projects,\n    initials: state.firebase.profile.initials,\n    auth: state.firebase.auth,\n    notifications: state.firestore.ordered.notifications\n  };\n};\n\nexport default compose(firestoreConnect([{\n  collection: 'projects',\n  orderBy: ['createdAt', 'desc']\n}, {\n  collection: 'notifications',\n  limit: 3,\n  orderBy: ['time', 'desc']\n}]), connect(mapStateToProps))(Dashboard);","map":{"version":3,"sources":["/home/madan/Documents/workspace/artwork/src/components/dashboard/Dashboard.js"],"names":["React","Component","firebase","connect","compose","firestoreConnect","Redirect","Notification","ProjectList","Spinner","Dashboard","getPosts","uid","props","auth","post","db","firestore","collection","get","then","documentSnapshots","forEach","doc","console","log","data","obj","id","lastVisible","state","projects","notifications","length","mapStateToProps","ordered","initials","profile","orderBy","limit"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,SAASC,gBAAT,QAAiC,sBAAjC;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,WAAP,MAAwB,yBAAxB,C,CACA;;AACA,OAAOC,OAAP,MAAoB,WAApB;;IAEMC,S;;;;;AACJ,uBAAc;AAAA;;AAAA;;AACZ;;AADY,UAedC,QAfc,GAeH,YAAM;AACf,UAAMC,GAAG,GAAG,MAAKC,KAAL,CAAWC,IAAX,CAAgBF,GAA5B;AACA,UAAIG,IAAI,GAAG,EAAX;AAEA,UAAMC,EAAE,GAAGd,QAAQ,CAACe,SAAT,EAAX,CAJe,CAKf;AACA;;AAEE,aAAOD,EAAE,CAACE,UAAH,CAAc,UAAd,EACJC,GADI,GACEC,IADF,CACO,UAACC,iBAAD,EAAuB;AAEjCA,QAAAA,iBAAiB,CAACC,OAAlB,CAA0B,UAACC,GAAD,EAAS;AACjCC,UAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBF,GAAG,CAACG,IAAJ,EAApB;;AACA,cAAIC,GAAG,qBACFJ,GAAG,CAACG,IAAJ,EADE;AAELE,YAAAA,EAAE,EAAEL,GAAG,CAACK;AAFH,YAAP;AAID,SAND;AAOD,OAVI,CAAP,CARa,CAmBf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAED,KA7Da;;AAEZ,UAAKC,WAAL,GAAmB,EAAnB;AACA,UAAKC,KAAL,GAAa,EAAb;AAHY;AAIb,G,CAED;AACA;AACA;AACA;;;;;wCAEoB;AAClB,WAAKnB,QAAL;AACD;;;6BAkDQ;AACT;AADS,wBAEmC,KAAKE,KAFxC;AAAA,UAECkB,QAFD,eAECA,QAFD;AAAA,UAEWjB,IAFX,eAEWA,IAFX;AAAA,UAEiBkB,aAFjB,eAEiBA,aAFjB;AAGP,UAAI,CAAClB,IAAI,CAACF,GAAV,EAAe,OAAO,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP,CAHR,CAGyC;;AAEhD,UAAGmB,QAAQ,IAAIA,QAAQ,CAACE,MAAT,GAAkB,CAAjC,EAAoC,OAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACpC,aACE;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGF,QAAQ,GACL,oBAAC,WAAD;AAAa,QAAA,QAAQ,EAAEA,QAAvB;AAAiC,QAAA,IAAI,EAAEjB,IAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADK,GAEL,IAHN,CADF,EAME;AAAK,QAAA,SAAS,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,YAAD;AAAc,QAAA,aAAa,EAAEkB,aAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CANF,CADF,EAWE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAXF,CADF;AAgBD;;;;EAtFqB/B,S;;AAyFxB,IAAMiC,eAAe,GAAG,SAAlBA,eAAkB,CAACJ,KAAD,EAAW;AACjC;AACA,SAAO;AACLC,IAAAA,QAAQ,EAAED,KAAK,CAACb,SAAN,CAAgBkB,OAAhB,CAAwBJ,QAD7B;AAELK,IAAAA,QAAQ,EAAEN,KAAK,CAAC5B,QAAN,CAAemC,OAAf,CAAuBD,QAF5B;AAGLtB,IAAAA,IAAI,EAAEgB,KAAK,CAAC5B,QAAN,CAAeY,IAHhB;AAILkB,IAAAA,aAAa,EAAEF,KAAK,CAACb,SAAN,CAAgBkB,OAAhB,CAAwBH;AAJlC,GAAP;AAMD,CARD;;AAUA,eAAe5B,OAAO,CACpBC,gBAAgB,CAAC,CACb;AAAEa,EAAAA,UAAU,EAAE,UAAd;AACEoB,EAAAA,OAAO,EAAE,CAAC,WAAD,EAAc,MAAd;AADX,CADa,EAIb;AAAEpB,EAAAA,UAAU,EAAE,eAAd;AACEqB,EAAAA,KAAK,EAAE,CADT;AAEED,EAAAA,OAAO,EAAE,CAAC,MAAD,EAAS,MAAT;AAFX,CAJa,CAAD,CADI,EAUpBnC,OAAO,CAAC+B,eAAD,CAVa,CAAP,CAWbxB,SAXa,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport { connect } from 'react-redux'\nimport { compose } from 'redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { Redirect } from 'react-router-dom'\nimport Notification from './Notification'\nimport ProjectList from '../projects/ProjectList'\n// import Footer from './Footer'\nimport Spinner from './Spinner'\n\nclass Dashboard extends Component {\n  constructor() {\n    super()\n    this.lastVisible = ''\n    this.state = {}\n  }\n\n  // TODO: get the posts manually and dispatch it\n  // to the store\n  // TODO: set data to local storage once component\n  // successfully mounted\n\n  componentDidMount() {\n    this.getPosts()\n  }\n\n  getPosts = () => {\n    const uid = this.props.auth.uid\n    let post = []\n\n    const db = firebase.firestore()\n    // const followingRef = db.collection('users').doc(uid)\n    //   .collection('following')\n\n      return db.collection('projects')\n        .get().then((documentSnapshots) => {\n\n          documentSnapshots.forEach((doc) => {\n            console.log(\"docs\", doc.data())\n            let obj = {\n              ...doc.data(),\n              id: doc.id\n            }\n          })\n        })\n    // return followingRef.get().then(documentSnapshots => {\n    //   documentSnapshots.forEach(doc => {\n    //\n    //     // retrieving \"following\" id to get related posts\n    //     let data = doc.data()\n    //     let uid = data.userid\n    //     console.log(\"following: \", data, uid)\n    //\n    //     // getting posts of \"folowing users\"\n    //     return db.collection('projects')\n    //       .where('authorId', '==', uid)\n    //       .get().then((querySnapshots) => {\n    //\n    //         querySnapshots.forEach((docs) => {\n    //           let obj = {\n    //             ...docs.data(),\n    //             id: docs.id\n    //           }\n    //           post.push(obj)\n    //         })\n    //         .then(() => {\n    //           console.log(\"final:\", post)\n    //         })\n    //       })\n    //   })\n    // })\n\n  }\n\n  render() {\n  //  console.log(\"project: \", this.state)\n    const { projects, auth, notifications } = this.props\n    if (!auth.uid) return <Redirect to='/signin' /> // redirecting signed out users to signin/signup page\n\n    if(projects && projects.length < 0) return <Spinner />\n    return(\n      <div className=\"dashboard container\">\n        <div className=\"row\">\n          <div className=\"col l8 m12 s12\">\n            {projects\n              ? <ProjectList projects={projects} auth={auth}/>\n              : null}\n          </div>\n          <div className=\"col l4 hide-on-med-and-down\">\n            <Notification notifications={notifications} />\n          </div>\n        </div>\n        <div className=\"footer-cover\">\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  // console.log(state)\n  return {\n    projects: state.firestore.ordered.projects,\n    initials: state.firebase.profile.initials,\n    auth: state.firebase.auth,\n    notifications: state.firestore.ordered.notifications\n  }\n}\n\nexport default compose (\n  firestoreConnect([\n      { collection: 'projects',\n        orderBy: ['createdAt', 'desc']\n      },\n      { collection: 'notifications',\n        limit: 3,\n        orderBy: ['time', 'desc']\n      }\n    ]),\n  connect(mapStateToProps)\n)(Dashboard)\n"]},"metadata":{},"sourceType":"module"}