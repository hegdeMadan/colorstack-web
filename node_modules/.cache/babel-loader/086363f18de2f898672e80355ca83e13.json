{"ast":null,"code":"import _objectSpread from \"/home/madan/Documents/workspace/artwork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/madan/Documents/workspace/artwork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/madan/Documents/workspace/artwork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/madan/Documents/workspace/artwork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/madan/Documents/workspace/artwork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/madan/Documents/workspace/artwork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/madan/Documents/workspace/artwork/src/components/projects/projectActs/PostCredits.js\";\nimport React, { Component } from 'react'; // import { firestoreConnect } from 'react-redux-firebase'\n// import { compose } from 'redux'\n\nimport { connect } from 'react-redux';\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport { createLike as _createLike, removeLike as _removeLike, updateLike as _updateLike } from '../../../store/actions/LikeActions';\nimport { addCollection as _addCollection } from '../../../store/actions/AddToCollection';\n\nvar PostCerdits =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PostCerdits, _Component);\n\n  function PostCerdits() {\n    var _this;\n\n    _classCallCheck(this, PostCerdits);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PostCerdits).call(this));\n\n    _this.handleLike = function (e) {\n      var likes = _this.props.likeCount;\n      var like = _this.state.like ? _this.state.like : null;\n      var isLiked = like && like.isActive ? true : false;\n      console.log(\"like state: \", likes);\n      like ? isLiked ? _this.setState(function () {\n        return {\n          like: {\n            likeToPost: _this.props.project.id,\n            likeCount: likes,\n            id: like.id\n          }\n        };\n      }, function () {\n        console.log(_this.state.like);\n\n        _this.props.removeLike(_this.state.like);\n      }) : _this.setState(function () {\n        return {\n          like: {\n            likeToPost: _this.props.project.id,\n            likeCount: likes,\n            id: like.id,\n            isActive: true\n          }\n        };\n      }, function () {\n        _this.props.updateLike(_this.state.like);\n      }) : _this.setState(function () {\n        return {\n          like: {\n            likeToPost: _this.props.project.id,\n            likeCount: likes,\n            isActive: true\n          }\n        };\n      }, function () {\n        _this.props.createLike(_this.state.like);\n      });\n    };\n\n    _this.addCollection = function () {\n      var collectedCount = _this.props.collected + 1;\n      var activeStatus = _this.props.isActive ? false : true;\n\n      _this.setState(function () {\n        return {\n          imageUrl: _this.props.project.imageUrl,\n          postId: _this.props.project.id,\n          activeStatus: activeStatus,\n          collectedCount: collectedCount\n        };\n      }, function () {\n        _this.props.addCollection(_this.state);\n      });\n    };\n\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(PostCerdits, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount(props) {\n      var _this2 = this;\n\n      var db = firebase.firestore();\n      var ref = db.collection('projects').doc(this.props.project.id).collection('likes').where('likeFromId', '==', this.props.auth.uid);\n      return ref.get().then(function (documentSnapshots) {\n        documentSnapshots.forEach(function (doc) {\n          var obj = {\n            like: _objectSpread({}, doc.data(), {\n              id: doc.id\n            })\n          };\n\n          _this2.setState(_objectSpread({}, obj), function () {// console.log(\"thisss: \", this.state.like)\n          });\n        });\n      });\n    } // incrementing like to the post\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var likeCount = this.props.likeCount;\n      var like = this.state.like;\n      var liked = like && like.isActive ? true : false; // console.log(\"state: \", this.state)\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"icons-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"post-act\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.handleLike,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, liked ? React.createElement(\"i\", {\n        className: \"material-icons blue-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, \"thumb_up\") : React.createElement(\"i\", {\n        className: \"material-icons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"thumb_up\"))), React.createElement(\"span\", {\n        className: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"material-icons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, \"send\")))), React.createElement(\"div\", {\n        className: \"save\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.addCollection,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"material-icons center\",\n        title: \"add to your collection\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, \"add_to_photos\"))))), likeCount ? React.createElement(\"div\", {\n        className: \"counts\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"like-count\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, likeCount, \" likes\")) : null);\n    }\n  }]);\n\n  return PostCerdits;\n}(Component);\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    createLike: function createLike(like) {\n      return dispatch(_createLike(like));\n    },\n    removeLike: function removeLike(like) {\n      return dispatch(_removeLike(like));\n    },\n    updateLike: function updateLike(like) {\n      return dispatch(_updateLike(like));\n    },\n    addCollection: function addCollection(post) {\n      return dispatch(_addCollection(post));\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(PostCerdits);","map":{"version":3,"sources":["/home/madan/Documents/workspace/artwork/src/components/projects/projectActs/PostCredits.js"],"names":["React","Component","connect","firebase","createLike","removeLike","updateLike","addCollection","PostCerdits","handleLike","e","likes","props","likeCount","like","state","isLiked","isActive","console","log","setState","likeToPost","project","id","collectedCount","collected","activeStatus","imageUrl","postId","db","firestore","ref","collection","doc","where","auth","uid","get","then","documentSnapshots","forEach","obj","data","liked","mapDispatchToProps","dispatch","post"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;AACA;;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,SAASC,UAAU,IAAVA,WAAT,EAAqBC,UAAU,IAAVA,WAArB,EAAiCC,UAAU,IAAVA,WAAjC,QAAmD,oCAAnD;AACA,SAASC,aAAa,IAAbA,cAAT,QAA8B,wCAA9B;;IAEMC,W;;;;;AACJ,yBAAc;AAAA;;AAAA;;AACZ;;AADY,UA6BdC,UA7Bc,GA6BD,UAACC,CAAD,EAAO;AAClB,UAAIC,KAAK,GAAG,MAAKC,KAAL,CAAWC,SAAvB;AACA,UAAMC,IAAI,GAAG,MAAKC,KAAL,CAAWD,IAAX,GAAkB,MAAKC,KAAL,CAAWD,IAA7B,GAAoC,IAAjD;AACA,UAAME,OAAO,GAAGF,IAAI,IAAIA,IAAI,CAACG,QAAb,GAAwB,IAAxB,GAA+B,KAA/C;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BR,KAA5B;AAEAG,MAAAA,IAAI,GACFE,OAAO,GACL,MAAKI,QAAL,CAAc,YAAM;AAClB,eAAO;AACLN,UAAAA,IAAI,EAAE;AACJO,YAAAA,UAAU,EAAE,MAAKT,KAAL,CAAWU,OAAX,CAAmBC,EAD3B;AAEJV,YAAAA,SAAS,EAAEF,KAFP;AAGJY,YAAAA,EAAE,EAAET,IAAI,CAACS;AAHL;AADD,SAAP;AAOD,OARD,EAQG,YAAM;AACPL,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAKJ,KAAL,CAAWD,IAAvB;;AACA,cAAKF,KAAL,CAAWP,UAAX,CAAsB,MAAKU,KAAL,CAAWD,IAAjC;AACD,OAXD,CADK,GAcL,MAAKM,QAAL,CAAc,YAAM;AAClB,eAAO;AACLN,UAAAA,IAAI,EAAE;AACJO,YAAAA,UAAU,EAAE,MAAKT,KAAL,CAAWU,OAAX,CAAmBC,EAD3B;AAEJV,YAAAA,SAAS,EAAEF,KAFP;AAGJY,YAAAA,EAAE,EAAET,IAAI,CAACS,EAHL;AAIJN,YAAAA,QAAQ,EAAE;AAJN;AADD,SAAP;AAQD,OATD,EASG,YAAM;AACP,cAAKL,KAAL,CAAWN,UAAX,CAAsB,MAAKS,KAAL,CAAWD,IAAjC;AACD,OAXD,CAfA,GA4BF,MAAKM,QAAL,CAAc,YAAM;AAClB,eAAO;AACLN,UAAAA,IAAI,EAAE;AACJO,YAAAA,UAAU,EAAE,MAAKT,KAAL,CAAWU,OAAX,CAAmBC,EAD3B;AAEJV,YAAAA,SAAS,EAAEF,KAFP;AAGJM,YAAAA,QAAQ,EAAE;AAHN;AADD,SAAP;AAOD,OARD,EAQG,YAAM;AACP,cAAKL,KAAL,CAAWR,UAAX,CAAsB,MAAKW,KAAL,CAAWD,IAAjC;AACD,OAVD,CA5BF;AAuCD,KA1Ea;;AAAA,UA6EdP,aA7Ec,GA6EE,YAAM;AACpB,UAAIiB,cAAc,GAAG,MAAKZ,KAAL,CAAWa,SAAX,GAAuB,CAA5C;AACA,UAAIC,YAAY,GAAG,MAAKd,KAAL,CAAWK,QAAX,GAAsB,KAAtB,GAA8B,IAAjD;;AAEA,YAAKG,QAAL,CAAc,YAAM;AAClB,eAAO;AACLO,UAAAA,QAAQ,EAAE,MAAKf,KAAL,CAAWU,OAAX,CAAmBK,QADxB;AAELC,UAAAA,MAAM,EAAE,MAAKhB,KAAL,CAAWU,OAAX,CAAmBC,EAFtB;AAGLG,UAAAA,YAAY,EAAZA,YAHK;AAILF,UAAAA,cAAc,EAAdA;AAJK,SAAP;AAMD,OAPD,EAOG,YAAM;AACP,cAAKZ,KAAL,CAAWL,aAAX,CAAyB,MAAKQ,KAA9B;AACD,OATD;AAUD,KA3Fa;;AAEZ,UAAKA,KAAL,GAAa,EAAb;AAFY;AAGb;;;;uCAEkBH,K,EAAO;AAAA;;AACxB,UAAMiB,EAAE,GAAG1B,QAAQ,CAAC2B,SAAT,EAAX;AACA,UAAMC,GAAG,GAAGF,EAAE,CAACG,UAAH,CAAc,UAAd,EAA0BC,GAA1B,CAA8B,KAAKrB,KAAL,CAAWU,OAAX,CAAmBC,EAAjD,EACTS,UADS,CACE,OADF,EAETE,KAFS,CAEH,YAFG,EAEW,IAFX,EAEiB,KAAKtB,KAAL,CAAWuB,IAAX,CAAgBC,GAFjC,CAAZ;AAIA,aAAOL,GAAG,CAACM,GAAJ,GAAUC,IAAV,CAAe,UAACC,iBAAD,EAAuB;AAC3CA,QAAAA,iBAAiB,CAACC,OAAlB,CAA0B,UAAAP,GAAG,EAAI;AAC/B,cAAIQ,GAAG,GAAG;AACR3B,YAAAA,IAAI,oBACCmB,GAAG,CAACS,IAAJ,EADD;AAEFnB,cAAAA,EAAE,EAAEU,GAAG,CAACV;AAFN;AADI,WAAV;;AAMA,UAAA,MAAI,CAACH,QAAL,mBACKqB,GADL,GAEG,YAAM,CACP;AACD,WAJD;AAKD,SAZD;AAaD,OAdM,CAAP;AAeD,K,CAED;;;;6BAiES;AAAA,UACC5B,SADD,GACe,KAAKD,KADpB,CACCC,SADD;AAAA,UAECC,IAFD,GAEU,KAAKC,KAFf,CAECD,IAFD;AAGP,UAAM6B,KAAK,GAAG7B,IAAI,IAAIA,IAAI,CAACG,QAAb,GAAwB,IAAxB,GAA+B,KAA7C,CAHO,CAIP;;AAEA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,SAAS,EAAC,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,OAAO,EAAE,KAAKR,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGkC,KAAK,GACF;AAAG,QAAA,SAAS,EAAC,0BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADE,GAEF;AAAG,QAAA,SAAS,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHN,CADF,CADF,EASE;AAAM,QAAA,SAAS,EAAC,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,SAAS,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CADA,CATF,CADF,EAgBE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,SAAS,EAAC,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,OAAO,EAAE,KAAKpC,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG;AAAG,QAAA,SAAS,EAAC,uBAAb;AACK,QAAA,KAAK,EAAC,wBADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADH,CADF,CADF,CAhBF,CADA,EA4BGM,SAAS,GAEN;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGA,SADH,WADF,CAFM,GAON,IAnCN,CADF;AAwCD;;;;EA5IuBZ,S;;AA+I1B,IAAM2C,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD,EAAc;AACvC,SAAO;AACLzC,IAAAA,UAAU,EAAE,oBAACU,IAAD;AAAA,aAAU+B,QAAQ,CAACzC,WAAU,CAACU,IAAD,CAAX,CAAlB;AAAA,KADP;AAELT,IAAAA,UAAU,EAAE,oBAACS,IAAD;AAAA,aAAU+B,QAAQ,CAACxC,WAAU,CAACS,IAAD,CAAX,CAAlB;AAAA,KAFP;AAGLR,IAAAA,UAAU,EAAE,oBAACQ,IAAD;AAAA,aAAU+B,QAAQ,CAACvC,WAAU,CAACQ,IAAD,CAAX,CAAlB;AAAA,KAHP;AAILP,IAAAA,aAAa,EAAE,uBAACuC,IAAD;AAAA,aAAUD,QAAQ,CAACtC,cAAa,CAACuC,IAAD,CAAd,CAAlB;AAAA;AAJV,GAAP;AAMD,CAPD;;AAUA,eAAe5C,OAAO,CAAC,IAAD,EAAO0C,kBAAP,CAAP,CAAkCpC,WAAlC,CAAf","sourcesContent":["import React, { Component } from 'react'\n// import { firestoreConnect } from 'react-redux-firebase'\n// import { compose } from 'redux'\nimport { connect } from 'react-redux'\nimport firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport { createLike, removeLike, updateLike } from '../../../store/actions/LikeActions'\nimport { addCollection } from '../../../store/actions/AddToCollection'\n\nclass PostCerdits extends Component {\n  constructor() {\n    super()\n    this.state = {}\n  }\n\n  componentWillMount(props) {\n    const db = firebase.firestore()\n    const ref = db.collection('projects').doc(this.props.project.id)\n      .collection('likes')\n      .where('likeFromId', '==', this.props.auth.uid)\n\n    return ref.get().then((documentSnapshots) => {\n      documentSnapshots.forEach(doc => {\n        let obj = {\n          like: {\n            ...doc.data(),\n            id: doc.id\n          }\n        }\n        this.setState({\n          ...obj\n        }, () => {\n          // console.log(\"thisss: \", this.state.like)\n        })\n      })\n    })\n  }\n\n  // incrementing like to the post\n  handleLike = (e) => {\n    let likes = this.props.likeCount\n    const like = this.state.like ? this.state.like : null\n    const isLiked = like && like.isActive ? true : false\n    console.log(\"like state: \", likes)\n\n    like\n    ? isLiked\n      ? this.setState(() => {\n          return {\n            like: {\n              likeToPost: this.props.project.id,\n              likeCount: likes,\n              id: like.id\n            }\n          }\n        }, () => {\n          console.log(this.state.like)\n          this.props.removeLike(this.state.like)\n        })\n\n      : this.setState(() => {\n          return {\n            like: {\n              likeToPost: this.props.project.id,\n              likeCount: likes,\n              id: like.id,\n              isActive: true\n            }\n          }\n        }, () => {\n          this.props.updateLike(this.state.like)\n        })\n\n    : this.setState(() => {\n        return {\n          like: {\n            likeToPost: this.props.project.id,\n            likeCount: likes,\n            isActive: true\n          }\n        }\n      }, () => {\n        this.props.createLike(this.state.like)\n      })\n  }\n\n  // adding post to user's collection\n  addCollection = () => {\n    let collectedCount = this.props.collected + 1\n    let activeStatus = this.props.isActive ? false : true\n\n    this.setState(() => {\n      return {\n        imageUrl: this.props.project.imageUrl,\n        postId: this.props.project.id,\n        activeStatus,\n        collectedCount\n      }\n    }, () => {\n      this.props.addCollection(this.state)\n    })\n  }\n\n  render() {\n    const { likeCount } = this.props\n    const { like } = this.state\n    const liked = like && like.isActive ? true : false\n    // console.log(\"state: \", this.state)\n\n    return(\n      <div>\n      <div className=\"icons-wrapper\">\n        <div className=\"post-act\">\n          <span className=\"\">\n            <button onClick={this.handleLike}>\n              {liked\n                ? <i className=\"material-icons blue-text\">thumb_up</i>\n                : <i className=\"material-icons\">thumb_up</i>\n              }\n            </button>\n          </span>\n          <span className=\"\">\n          <button>\n            <i className=\"material-icons\">send</i>\n          </button>\n          </span>\n        </div>\n        <div className=\"save\">\n          <span className=\"\">\n            <button onClick={this.addCollection}>\n               <i className=\"material-icons center\"\n                    title=\"add to your collection\">\n                  add_to_photos\n                </i>\n            </button>\n          </span>\n        </div>\n      </div>\n        {likeCount\n          ?\n            <div className=\"counts\">\n              <span className=\"like-count\">\n                {likeCount} likes\n              </span>\n            </div>\n          : null\n        }\n      </div>\n    )\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    createLike: (like) => dispatch(createLike(like)),\n    removeLike: (like) => dispatch(removeLike(like)),\n    updateLike: (like) => dispatch(updateLike(like)),\n    addCollection: (post) => dispatch(addCollection(post))\n  }\n}\n\n\nexport default connect(null, mapDispatchToProps)(PostCerdits)\n"]},"metadata":{},"sourceType":"module"}