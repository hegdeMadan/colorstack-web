{"ast":null,"code":"export var createProject = function createProject(project) {\n  return function (dispatch, getState, _ref) {\n    var getFirebase = _ref.getFirebase,\n        getFirestore = _ref.getFirestore;\n    // adding data to firestore\n    var firestore = getFirestore();\n    var firebase = getFirebase();\n    var profile = getState().firebase.profile; // retreiving user profile info\n\n    var userId = getState().firebase.auth.uid; // accessing user's user ID\n\n    var category = project.type ? project.type : 'other'; // adding data to firestore collection named 'projects'\n\n    firestore.collection('projects').add({\n      content: project.content,\n      imageUrl: project.imageUrl,\n      authorFirstName: profile.firstName,\n      authorSecondName: profile.lastName,\n      authorId: userId,\n      category: category,\n      createdAt: new Date()\n    }).then(function () {\n      dispatch({\n        type: 'CREATE_PROJECT',\n        project: project\n      });\n    }).catch(function (err) {\n      dispatch({\n        type: 'CREATE_PROJECT_ERR',\n        err: err\n      });\n    });\n  };\n};\nexport var createAlbum = function createAlbum(album) {\n  return function (dispatch, getState, _ref2) {\n    var getFirebase = _ref2.getFirebase,\n        getFirestore = _ref2.getFirestore;\n    var firestore = getFirestore();\n    var profile = getState().firebase.profile;\n    var userId = getState().firebase.auth.uid; // accessing user's user ID\n\n    var dpUrl = album.dpUrl ? album.dpUrl : null;\n\n    if (album.albumId) {\n      firestore.collection('albums').doc(album.albumId).updata({\n        photos: firebase.firestore.FieldValue.arrayUnion(album.photoUrl)\n      }).then(function () {\n        dispatch({\n          type: 'CREATE_PROJECT',\n          album: album\n        });\n      }).catch(function (err) {\n        dispatch({\n          type: 'CREATE_PROJECT_ERR',\n          err: err\n        });\n      });\n    } else {\n      firestore.collection('albums').add({\n        authorFirstName: album.firstName,\n        authorLastName: album.lastName,\n        authorId: userId,\n        albumName: album.albumName,\n        time: new Date(),\n        authorProfilePicture: dpUrl\n      }).then(function () {\n        dispatch({\n          type: 'CREATE_PROJECT',\n          album: album\n        });\n      }).catch(function (err) {\n        dispatch({\n          type: 'CREATE_PROJECT_ERR',\n          err: err\n        });\n      });\n    }\n  };\n};","map":{"version":3,"sources":["/home/madan/Documents/workspace/artwork/src/store/actions/ProjectActions.js"],"names":["createProject","project","dispatch","getState","getFirebase","getFirestore","firestore","firebase","profile","userId","auth","uid","category","type","collection","add","content","imageUrl","authorFirstName","firstName","authorSecondName","lastName","authorId","createdAt","Date","then","catch","err","createAlbum","album","dpUrl","albumId","doc","updata","photos","FieldValue","arrayUnion","photoUrl","authorLastName","albumName","time","authorProfilePicture"],"mappings":"AAAA,OAAO,IAAMA,aAAa,GAAG,SAAhBA,aAAgB,CAACC,OAAD,EAAa;AACxC,SAAO,UAACC,QAAD,EAAWC,QAAX,QAAwD;AAAA,QAAhCC,WAAgC,QAAhCA,WAAgC;AAAA,QAAnBC,YAAmB,QAAnBA,YAAmB;AAE7D;AACA,QAAMC,SAAS,GAAGD,YAAY,EAA9B;AACA,QAAME,QAAQ,GAAGH,WAAW,EAA5B;AACA,QAAMI,OAAO,GAAGL,QAAQ,GAAGI,QAAX,CAAoBC,OAApC,CAL6D,CAKjB;;AAC5C,QAAMC,MAAM,GAAGN,QAAQ,GAAGI,QAAX,CAAoBG,IAApB,CAAyBC,GAAxC,CAN6D,CAMjB;;AAC5C,QAAMC,QAAQ,GAAGX,OAAO,CAACY,IAAR,GAAeZ,OAAO,CAACY,IAAvB,GAA8B,OAA/C,CAP6D,CAS7D;;AACAP,IAAAA,SAAS,CAACQ,UAAV,CAAqB,UAArB,EAAiCC,GAAjC,CAAqC;AACnCC,MAAAA,OAAO,EAAEf,OAAO,CAACe,OADkB;AAEnCC,MAAAA,QAAQ,EAAEhB,OAAO,CAACgB,QAFiB;AAGnCC,MAAAA,eAAe,EAAEV,OAAO,CAACW,SAHU;AAInCC,MAAAA,gBAAgB,EAAEZ,OAAO,CAACa,QAJS;AAKnCC,MAAAA,QAAQ,EAAEb,MALyB;AAMnCG,MAAAA,QAAQ,EAARA,QANmC;AAOnCW,MAAAA,SAAS,EAAE,IAAIC,IAAJ;AAPwB,KAArC,EASCC,IATD,CASM,YAAM;AACVvB,MAAAA,QAAQ,CAAC;AAACW,QAAAA,IAAI,EAAC,gBAAN;AAAwBZ,QAAAA,OAAO,EAAPA;AAAxB,OAAD,CAAR;AACD,KAXD,EAYCyB,KAZD,CAYO,UAACC,GAAD,EAAS;AACdzB,MAAAA,QAAQ,CAAC;AAACW,QAAAA,IAAI,EAAC,oBAAN;AAA4Bc,QAAAA,GAAG,EAAHA;AAA5B,OAAD,CAAR;AACD,KAdD;AAeD,GAzBD;AA0BD,CA3BM;AA6BP,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAW;AACpC,SAAO,UAAC3B,QAAD,EAAWC,QAAX,SAAsD;AAAA,QAA/BC,WAA+B,SAA/BA,WAA+B;AAAA,QAAlBC,YAAkB,SAAlBA,YAAkB;AAE3D,QAAMC,SAAS,GAAGD,YAAY,EAA9B;AACA,QAAMG,OAAO,GAAGL,QAAQ,GAAGI,QAAX,CAAoBC,OAApC;AACA,QAAMC,MAAM,GAAGN,QAAQ,GAAGI,QAAX,CAAoBG,IAApB,CAAyBC,GAAxC,CAJ2D,CAIf;;AAC5C,QAAMmB,KAAK,GAAGD,KAAK,CAACC,KAAN,GAAcD,KAAK,CAACC,KAApB,GAA4B,IAA1C;;AAEA,QAAGD,KAAK,CAACE,OAAT,EAAkB;AAChBzB,MAAAA,SAAS,CAACQ,UAAV,CAAqB,QAArB,EACGkB,GADH,CACOH,KAAK,CAACE,OADb,EAEGE,MAFH,CAEU;AACNC,QAAAA,MAAM,EAAE3B,QAAQ,CAACD,SAAT,CAAmB6B,UAAnB,CAA8BC,UAA9B,CAAyCP,KAAK,CAACQ,QAA/C;AADF,OAFV,EAKGZ,IALH,CAKQ,YAAM;AACVvB,QAAAA,QAAQ,CAAC;AAACW,UAAAA,IAAI,EAAC,gBAAN;AAAwBgB,UAAAA,KAAK,EAALA;AAAxB,SAAD,CAAR;AACD,OAPH,EAQGH,KARH,CAQS,UAACC,GAAD,EAAS;AACdzB,QAAAA,QAAQ,CAAC;AAACW,UAAAA,IAAI,EAAC,oBAAN;AAA4Bc,UAAAA,GAAG,EAAHA;AAA5B,SAAD,CAAR;AACD,OAVH;AAYD,KAbD,MAaO;AACLrB,MAAAA,SAAS,CAACQ,UAAV,CAAqB,QAArB,EAA+BC,GAA/B,CAAmC;AACjCG,QAAAA,eAAe,EAAEW,KAAK,CAACV,SADU;AAEjCmB,QAAAA,cAAc,EAAET,KAAK,CAACR,QAFW;AAGjCC,QAAAA,QAAQ,EAAEb,MAHuB;AAIjC8B,QAAAA,SAAS,EAAEV,KAAK,CAACU,SAJgB;AAKjCC,QAAAA,IAAI,EAAE,IAAIhB,IAAJ,EAL2B;AAMjCiB,QAAAA,oBAAoB,EAAEX;AANW,OAAnC,EAQCL,IARD,CAQM,YAAM;AACVvB,QAAAA,QAAQ,CAAC;AAACW,UAAAA,IAAI,EAAC,gBAAN;AAAwBgB,UAAAA,KAAK,EAALA;AAAxB,SAAD,CAAR;AACD,OAVD,EAWCH,KAXD,CAWO,UAACC,GAAD,EAAS;AACdzB,QAAAA,QAAQ,CAAC;AAACW,UAAAA,IAAI,EAAC,oBAAN;AAA4Bc,UAAAA,GAAG,EAAHA;AAA5B,SAAD,CAAR;AACD,OAbD;AAeD;AACF,GArCD;AAsCD,CAvCM","sourcesContent":["export const createProject = (project) => {\n  return (dispatch, getState , { getFirebase, getFirestore }) => {\n\n    // adding data to firestore\n    const firestore = getFirestore()\n    const firebase = getFirebase()\n    const profile = getState().firebase.profile // retreiving user profile info\n    const userId = getState().firebase.auth.uid // accessing user's user ID\n    const category = project.type ? project.type : 'other'\n\n    // adding data to firestore collection named 'projects'\n    firestore.collection('projects').add({\n      content: project.content,\n      imageUrl: project.imageUrl,\n      authorFirstName: profile.firstName,\n      authorSecondName: profile.lastName,\n      authorId: userId,\n      category,\n      createdAt: new Date()\n    })\n    .then(() => {\n      dispatch({type:'CREATE_PROJECT', project })\n    })\n    .catch((err) => {\n      dispatch({type:'CREATE_PROJECT_ERR', err })\n    })\n  }\n}\n\nexport const createAlbum = (album) => {\n  return (dispatch, getState, { getFirebase, getFirestore}) => {\n\n    const firestore = getFirestore()\n    const profile = getState().firebase.profile\n    const userId = getState().firebase.auth.uid // accessing user's user ID\n    const dpUrl = album.dpUrl ? album.dpUrl : null\n\n    if(album.albumId) {\n      firestore.collection('albums')\n        .doc(album.albumId)\n        .updata({\n          photos: firebase.firestore.FieldValue.arrayUnion(album.photoUrl)\n        })\n        .then(() => {\n          dispatch({type:'CREATE_PROJECT', album })\n        })\n        .catch((err) => {\n          dispatch({type:'CREATE_PROJECT_ERR', err })\n        })\n\n    } else {\n      firestore.collection('albums').add({\n        authorFirstName: album.firstName,\n        authorLastName: album.lastName,\n        authorId: userId,\n        albumName: album.albumName,\n        time: new Date(),\n        authorProfilePicture: dpUrl\n      })\n      .then(() => {\n        dispatch({type:'CREATE_PROJECT', album })\n      })\n      .catch((err) => {\n        dispatch({type:'CREATE_PROJECT_ERR', err })\n      })\n\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}