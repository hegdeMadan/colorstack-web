{"ast":null,"code":"import _classCallCheck from \"/home/madan/Documents/workspace/artwork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/madan/Documents/workspace/artwork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/madan/Documents/workspace/artwork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/madan/Documents/workspace/artwork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/madan/Documents/workspace/artwork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/madan/Documents/workspace/artwork/src/components/profile/UploadImage.js\";\nimport React, { Component } from 'react'; // import firebase from 'firebase/app'\n\nimport ReactCrop from 'react-image-crop';\nimport 'react-image-crop/dist/ReactCrop.css';\nimport portrait from '../../static/portrait.png';\nimport { base64StringtoFile, downloadBase64File, extractImageFileExtensionFromBase64, image64toCanvasRef } from '../../utils/CropOutput';\n\nvar UploadImage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(UploadImage, _Component);\n\n  function UploadImage() {\n    var _this;\n\n    _classCallCheck(this, UploadImage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UploadImage).call(this));\n\n    _this.handleFile = function (event) {\n      event.persist();\n      var input = event.target;\n      var imageOriginalName = input.files[0].name;\n      var reader = new FileReader();\n\n      reader.onload = function () {\n        var dataURL = reader.result;\n        console.log(\"img: \", dataURL);\n\n        _this.setState(function () {\n          return {\n            imageSrc: dataURL,\n            imgSrcExt: extractImageFileExtensionFromBase64(dataURL),\n            imageName: imageOriginalName\n          };\n        });\n      };\n\n      reader.readAsDataURL(input.files[0]);\n    };\n\n    _this.handleClick = function () {\n      _this.props.onClick();\n    };\n\n    _this.handleChange = function (crop) {\n      _this.setState({\n        crop: crop\n      });\n    };\n\n    _this.handleOnCropComplete = function (crop, pixelCrop) {\n      //console.log(pixelCrop)\n      var canvasRef = _this.imagePreviewCanvasRef.current;\n      var imgSrc = _this.state.imgSrc;\n      image64toCanvasRef(canvasRef, imgSrc, pixelCrop);\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n      console.log(_this.state.imageSrc);\n      var imageSrc = _this.state.imageSrc;\n\n      if (imageSrc) {\n        var canvasRef = _this.imagePreviewCanvasRef.current;\n        var imgSrcExt = _this.state.imgSrcExt;\n        var imageOriginalName = _this.state.imageOriginalName;\n        var imageData64 = canvasRef.toDataURL('image/' + imgSrcExt);\n        var myFilename = imageOriginalName + '.' + imgSrcExt; // file to be uploaded\n\n        var myNewCroppedFile = base64StringtoFile(imageData64, myFilename);\n        console.log(myNewCroppedFile); // download file\n\n        downloadBase64File(imageData64, myFilename);\n      }\n    };\n\n    _this.imagePreviewCanvasRef = React.createRef();\n    _this.fileInputRef = React.createRef();\n    _this.state = {\n      imageSrc: portrait,\n      crop: {\n        aspect: 1 / 1\n      }\n    };\n    return _this;\n  }\n\n  _createClass(UploadImage, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"modal-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"close right\",\n        onClick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"white-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"close\"), React.createElement(\"i\", {\n        className: \"material-icons white-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"close\")), React.createElement(\"div\", {\n        className: \"image-modal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"photo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(ReactCrop, {\n        className: \"responsive-img\",\n        src: this.state.imageSrc,\n        crop: this.state.crop,\n        onChange: this.handleChange,\n        onComplete: this.handleOnCropComplete,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }), React.createElement(\"canvas\", {\n        ref: this.imagePreviewCanvasRef,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"select-file center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"file\",\n        onChange: this.handleFile,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn indigo z-depth-0\",\n        onClick: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"Upload\")))));\n    }\n  }]);\n\n  return UploadImage;\n}(Component);\n\nexport default UploadImage;","map":{"version":3,"sources":["/home/madan/Documents/workspace/artwork/src/components/profile/UploadImage.js"],"names":["React","Component","ReactCrop","portrait","base64StringtoFile","downloadBase64File","extractImageFileExtensionFromBase64","image64toCanvasRef","UploadImage","handleFile","event","persist","input","target","imageOriginalName","files","name","reader","FileReader","onload","dataURL","result","console","log","setState","imageSrc","imgSrcExt","imageName","readAsDataURL","handleClick","props","onClick","handleChange","crop","handleOnCropComplete","pixelCrop","canvasRef","imagePreviewCanvasRef","current","imgSrc","state","handleSubmit","e","preventDefault","imageData64","toDataURL","myFilename","myNewCroppedFile","createRef","fileInputRef","aspect"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n// import firebase from 'firebase/app'\nimport ReactCrop from 'react-image-crop'\nimport 'react-image-crop/dist/ReactCrop.css';\nimport portrait from '../../static/portrait.png'\nimport {base64StringtoFile,\n  downloadBase64File,\n  extractImageFileExtensionFromBase64,\n  image64toCanvasRef} from '../../utils/CropOutput'\n\nclass UploadImage extends Component {\n  constructor() {\n    super()\n    this.imagePreviewCanvasRef = React.createRef()\n    this.fileInputRef = React.createRef()\n    this.state = {\n      imageSrc: portrait,\n      crop: {\n        aspect: 1/1\n      }\n    }\n  }\n\n  handleFile = (event) => {\n    event.persist()\n    const input = event.target;\n    const imageOriginalName = input.files[0].name\n     const reader = new FileReader()\n     reader.onload = () => {\n       const dataURL = reader.result\n       console.log(\"img: \", dataURL)\n       this.setState(() => {\n         return {\n           imageSrc: dataURL,\n           imgSrcExt: extractImageFileExtensionFromBase64(dataURL),\n           imageName: imageOriginalName\n         }\n       })\n     }\n     reader.readAsDataURL(input.files[0])\n  }\n\n  handleClick = () => {\n    this.props.onClick()\n  }\n\n  handleChange = (crop) => {\n    this.setState({ crop })\n  }\n\n  handleOnCropComplete = (crop, pixelCrop) => {\n    //console.log(pixelCrop)\n    const canvasRef = this.imagePreviewCanvasRef.current\n    const {imgSrc}  = this.state\n    image64toCanvasRef(canvasRef, imgSrc, pixelCrop)\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault()\n    console.log(this.state.imageSrc)\n    const { imageSrc } = this.state\n    if(imageSrc) {\n      const canvasRef = this.imagePreviewCanvasRef.current\n\n      const {imgSrcExt} =  this.state\n      const {imageOriginalName} = this.state\n      const imageData64 = canvasRef.toDataURL('image/' + imgSrcExt)\n\n      const myFilename = imageOriginalName + '.' + imgSrcExt\n\n      // file to be uploaded\n      const myNewCroppedFile = base64StringtoFile(imageData64, myFilename)\n      console.log(myNewCroppedFile)\n      // download file\n      downloadBase64File(imageData64, myFilename)\n    }\n  }\n\n  render() {\n    return(\n      <div className=\"modal-wrapper\">\n        <div className=\"close right\" onClick={this.handleClick}>\n          <span className=\"white-text\">close</span>\n            <i className=\"material-icons white-text\">\n              close\n            </i>\n        </div>\n        <div className=\"image-modal\">\n          <div className=\"photo\">\n            {/*<img src={this.state.imageSrc}\n              alt=\"dp\"\n              className=\"responsive-img\"/>*/}\n            <ReactCrop\n              className=\"responsive-img\"\n              src={this.state.imageSrc}\n              crop={this.state.crop}\n              onChange={this.handleChange}\n              onComplete={this.handleOnCropComplete}/>\n              <canvas ref={this.imagePreviewCanvasRef}></canvas>\n          </div>\n          <div className=\"select-file center\">\n            <form>\n              <input type=\"file\" onChange={this.handleFile} />\n              <button type=\"submit\"\n                className=\"btn indigo z-depth-0\"\n                onClick={this.handleSubmit}>\n                Upload\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default UploadImage\n"]},"metadata":{},"sourceType":"module"}