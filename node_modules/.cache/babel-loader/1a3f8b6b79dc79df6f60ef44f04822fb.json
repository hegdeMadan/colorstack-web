{"ast":null,"code":"import _objectSpread from \"/home/madan/Documents/workspace/artwork/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/madan/Documents/workspace/artwork/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/madan/Documents/workspace/artwork/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/madan/Documents/workspace/artwork/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/madan/Documents/workspace/artwork/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/madan/Documents/workspace/artwork/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/madan/Documents/workspace/artwork/src/components/dashboard/Dashboard.js\";\nimport React, { Component } from 'react';\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { Redirect } from 'react-router-dom'; // import Notification from './Notification'\n\nimport Navbar from '../layout/Navbar';\nimport ProjectList from '../projects/ProjectList'; // import { Album } from '../projects/Album'\n// import Footer from './Footer'\n\nimport Spinner from './Spinner';\nimport CreatePost from '../projects/CreatePost';\nimport Category from './Category';\nimport Users from './Users'; // const post = []\n// const users = []\n\nvar Dashboard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Dashboard, _Component);\n\n  function Dashboard() {\n    var _this;\n\n    _classCallCheck(this, Dashboard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Dashboard).call(this));\n\n    _this.letsTry = function () {\n      var rootRef = firebase.firestore();\n      var userFollowing = rootRef.collection('users').doc('IAjgGx0n2UPbmrl9scG9ocjOZCM2');\n      return userFollowing.get().then(function (documentSnapshots) {\n        documentSnapshots.forEach(function (doc) {\n          console.log(doc.data());\n        });\n      });\n    };\n\n    _this.getUsers = function () {\n      var db = firebase.firestore();\n      return db.collection('users').orderBy('firstName').get().then(function (documentSnapshots) {\n        documentSnapshots.forEach(function (doc) {\n          var obj = _objectSpread({}, doc.data(), {\n            id: doc.id\n          });\n\n          _this.users.push(obj);\n\n          _this.setState(function () {\n            return {\n              users: _this.users\n            };\n          });\n        });\n      });\n    };\n\n    _this.renewPost = function () {\n      var db = firebase.firestore();\n      var lastVisible = _this.lastVisible ? _this.lastVisible : false;\n\n      if (_this.lastVisible) {\n        return db.collection('projects').orderBy('createdAt', 'desc').startAfter(lastVisible).limit(5).get().then(function (documentSnapshots) {\n          // getting the last visible document for pagination\n          _this.lastVisible = documentSnapshots.docs[documentSnapshots.docs.length - 1];\n          documentSnapshots.forEach(function (docs) {\n            var obj = _objectSpread({}, docs.data(), {\n              id: docs.id\n            });\n\n            _this.post.push(obj);\n\n            _this.setState(function () {\n              return {\n                posts: _this.post\n              };\n            });\n          });\n        });\n      }\n    };\n\n    _this.getPosts = function () {\n      var uid = _this.props.auth.uid;\n\n      if (uid) {\n        var db = firebase.firestore(); // getting posts of \"folowing users\"\n\n        return db.collection('projects').orderBy('createdAt', 'desc').limit(5).get().then(function (documentSnapshots) {\n          // getting the last visible document for pagination\n          _this.lastVisible = documentSnapshots.docs[documentSnapshots.docs.length - 1];\n          documentSnapshots.forEach(function (docs) {\n            var obj = _objectSpread({}, docs.data(), {\n              id: docs.id\n            });\n\n            _this.post.push(obj);\n\n            _this.setState(function () {\n              return {\n                posts: _this.post\n              };\n            });\n          });\n        });\n      } else {\n        return React.createElement(Redirect, {\n          to: \"/signin\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139\n          },\n          __self: this\n        });\n      }\n    };\n\n    _this.post = [];\n    _this.users = [];\n    _this.lastVisible = '';\n    _this.state = {\n      isAlbumSelected: false\n    };\n    return _this;\n  } // TODO: get the posts manually and dispatch it\n  // to the store\n  // TODO: set data to local storage once component\n  // successfully mounted\n\n\n  _createClass(Dashboard, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.getPosts();\n      this.getUsers();\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.letsTry();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // console.log(\"project: \", this.state)\n      // console.log(\"st: \", this.state)\n      var auth = this.props.auth;\n      var posts = this.state.posts;\n      if (!auth.uid) return React.createElement(Redirect, {\n        to: \"/signin\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }); // redirecting signed out users to signin/signup page\n      // if(this.state.isAlbumSelected)\n\n      if (!posts) {\n        return React.createElement(\"div\", {\n          className: \"spinner_wrapper\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153\n          },\n          __self: this\n        }, React.createElement(Spinner, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154\n          },\n          __self: this\n        }));\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160\n          },\n          __self: this\n        }, React.createElement(Navbar, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"dashboard container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 164\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"col l1 m1 hide-on-small-only hide-993\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 165\n          },\n          __self: this\n        }, React.createElement(Category, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 166\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"col l5 offset-l1 m8 offset-m2 s12\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"hide-on-large-only\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 169\n          },\n          __self: this\n        }, React.createElement(CreatePost, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 170\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"hide-on-med-and-up\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171\n          },\n          __self: this\n        }, React.createElement(Category, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172\n          },\n          __self: this\n        }))), posts ? React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 179\n          },\n          __self: this\n        }, React.createElement(ProjectList, {\n          projects: posts,\n          auth: auth,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 180\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"load_more\",\n          onClick: this.renewPost,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 181\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 184\n          },\n          __self: this\n        }, \"Load More\", React.createElement(\"i\", {\n          className: \"material-icons\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 186\n          },\n          __self: this\n        }, \"autorenew\")))) : null), React.createElement(\"div\", {\n          className: \"col l4 offset-l1 hide-on-med-and-down\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 192\n          },\n          __self: this\n        }, React.createElement(CreatePost, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 194\n          },\n          __self: this\n        }), this.users ? React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 196\n          },\n          __self: this\n        }, React.createElement(Users, {\n          users: this.users,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 197\n          },\n          __self: this\n        })) : null)), React.createElement(\"div\", {\n          className: \"footer-cover\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 202\n          },\n          __self: this\n        })));\n      }\n    }\n  }]);\n\n  return Dashboard;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  console.log(state);\n  return {\n    projects: state.firestore.ordered.projects,\n    initials: state.firebase.profile.initials,\n    auth: state.firebase.auth,\n    notifications: state.firestore.ordered.notifications\n  };\n};\n\nexport default compose(firestoreConnect([{\n  collection: 'projects',\n  orderBy: ['createdAt', 'desc']\n}, {\n  collection: 'notifications',\n  limit: 3,\n  orderBy: ['time', 'desc']\n}]), connect(mapStateToProps))(Dashboard);","map":{"version":3,"sources":["/home/madan/Documents/workspace/artwork/src/components/dashboard/Dashboard.js"],"names":["React","Component","firebase","connect","compose","firestoreConnect","Redirect","Navbar","ProjectList","Spinner","CreatePost","Category","Users","Dashboard","letsTry","rootRef","firestore","userFollowing","collection","doc","get","then","documentSnapshots","forEach","console","log","data","getUsers","db","orderBy","obj","id","users","push","setState","renewPost","lastVisible","startAfter","limit","docs","length","post","posts","getPosts","uid","props","auth","state","isAlbumSelected","mapStateToProps","projects","ordered","initials","profile","notifications"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport { connect } from 'react-redux'\nimport { compose } from 'redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { Redirect } from 'react-router-dom'\n// import Notification from './Notification'\nimport Navbar from '../layout/Navbar'\nimport ProjectList from '../projects/ProjectList'\n// import { Album } from '../projects/Album'\n// import Footer from './Footer'\nimport Spinner from './Spinner'\nimport CreatePost from '../projects/CreatePost'\nimport Category from './Category'\nimport Users from './Users'\n// const post = []\n// const users = []\n\nclass Dashboard extends Component {\n  constructor() {\n    super()\n    this.post = []\n    this.users = []\n    this.lastVisible = ''\n    this.state = {\n      isAlbumSelected: false\n    }\n  }\n\n  // TODO: get the posts manually and dispatch it\n  // to the store\n  // TODO: set data to local storage once component\n  // successfully mounted\n\n  componentWillMount() {\n    this.getPosts()\n    this.getUsers()\n  }\n\n\n  componentDidMount() {\n    this.letsTry()\n  }\n\n  letsTry = () => {\n    const rootRef = firebase.firestore()\n    const userFollowing = rootRef.collection('users')\n      .doc('IAjgGx0n2UPbmrl9scG9ocjOZCM2')\n    return userFollowing.get()\n    .then(documentSnapshots => {\n      documentSnapshots.forEach(doc => {\n        console.log(doc.data())\n      })\n    })\n  }\n\n  getUsers = () => {\n    const db = firebase.firestore()\n\n    return db.collection('users')\n      .orderBy('firstName')\n      .get().then(documentSnapshots => {\n        documentSnapshots.forEach(doc => {\n          let obj = {\n            ...doc.data(),\n            id: doc.id\n          }\n          this.users.push(obj)\n          this.setState(() => {\n            return {\n              users: this.users\n            }\n          })\n        })\n      })\n  }\n\n  renewPost = () => {\n    const db = firebase.firestore()\n    const lastVisible = this.lastVisible ? this.lastVisible : false\n\n    if(this.lastVisible) {\n      return db.collection('projects')\n        .orderBy('createdAt', 'desc')\n        .startAfter(lastVisible)\n        .limit(5)\n        .get().then(documentSnapshots => {\n\n          // getting the last visible document for pagination\n          this.lastVisible = documentSnapshots.docs[documentSnapshots.docs.length-1]\n\n          documentSnapshots.forEach((docs) => {\n            let obj = {\n              ...docs.data(),\n              id: docs.id\n            }\n            this.post.push(obj)\n            this.setState(() => {\n              return {\n                posts: this.post\n              }\n            })\n          })\n        })\n    }\n  }\n\n  getPosts = () => {\n    const uid = this.props.auth.uid\n    if(uid) {\n\n      const db = firebase.firestore()\n\n      // getting posts of \"folowing users\"\n      return db.collection('projects')\n        .orderBy('createdAt', 'desc')\n        .limit(5)\n        .get().then(documentSnapshots => {\n\n          // getting the last visible document for pagination\n          this.lastVisible = documentSnapshots.docs[documentSnapshots.docs.length-1]\n\n          documentSnapshots.forEach((docs) => {\n            let obj = {\n              ...docs.data(),\n              id: docs.id\n            }\n            this.post.push(obj)\n            this.setState(() => {\n              return {\n                posts: this.post\n              }\n            })\n          })\n        })\n    } else {\n      return(\n        <Redirect to='/signin' />\n      )\n    }\n  }\n\n  render() {\n  // console.log(\"project: \", this.state)\n    // console.log(\"st: \", this.state)\n    const { auth } = this.props\n    const { posts } = this.state\n    if (!auth.uid) return <Redirect to='/signin' /> // redirecting signed out users to signin/signup page\n    // if(this.state.isAlbumSelected)\n    if(!posts) {\n      return(\n        <div className=\"spinner_wrapper\">\n          <Spinner />\n        </div>\n      )\n    } else {\n      return(\n        <div>\n          <div>\n            <Navbar />\n          </div>\n          <div className=\"dashboard container\">\n            <div className=\"row\">\n              <div className=\"col l1 m1 hide-on-small-only hide-993\">\n                <Category />\n              </div>\n              <div className=\"col l5 offset-l1 m8 offset-m2 s12\">\n                <div className=\"hide-on-large-only\">\n                  <CreatePost />\n                  <div className=\"hide-on-med-and-up\">\n                    <Category />\n                  </div>\n                </div>\n                {/*<div>\n                  <Album />\n                </div>*/}\n                {posts\n                  ? <div>\n                      <ProjectList projects={posts} auth={auth}/>\n                      <div\n                        className=\"load_more\"\n                        onClick={this.renewPost}>\n                        <span>\n                          Load More\n                          <i className=\"material-icons\">autorenew</i>\n                        </span>\n                      </div>\n                    </div>\n                  : null}\n              </div>\n              <div className=\"col l4 offset-l1 hide-on-med-and-down\">\n                  {/*<Notification notifications={notifications} />*/}\n                <CreatePost />\n                {this.users\n                  ? <div>\n                      <Users users={this.users} />\n                    </div>\n                  : null}\n              </div>\n            </div>\n            <div className=\"footer-cover\">\n            </div>\n          </div>\n        </div>\n      )\n    }\n  }\n}\n\nconst mapStateToProps = (state) => {\n  console.log(state)\n  return {\n    projects: state.firestore.ordered.projects,\n    initials: state.firebase.profile.initials,\n    auth: state.firebase.auth,\n    notifications: state.firestore.ordered.notifications\n  }\n}\n\nexport default compose (\n  firestoreConnect([\n      { collection: 'projects',\n        orderBy: ['createdAt', 'desc']\n      },\n      { collection: 'notifications',\n        limit: 3,\n        orderBy: ['time', 'desc']\n      }\n    ]),\n  connect(mapStateToProps)\n)(Dashboard)\n"]},"metadata":{},"sourceType":"module"}