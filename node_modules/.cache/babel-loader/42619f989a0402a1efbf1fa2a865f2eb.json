{"ast":null,"code":"import _classCallCheck from \"/home/madan/Documents/workspace/artwork/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/madan/Documents/workspace/artwork/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/madan/Documents/workspace/artwork/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/madan/Documents/workspace/artwork/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/madan/Documents/workspace/artwork/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/madan/Documents/workspace/artwork/src/components/projects/ProjectDetails.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { Link } from 'react-router-dom';\nimport Comments from './projectActs/Comments';\nimport AddComment from './projectActs/AddComment';\n\nvar ProjectDetails =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ProjectDetails, _Component);\n\n  function ProjectDetails() {\n    _classCallCheck(this, ProjectDetails);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ProjectDetails).apply(this, arguments));\n  }\n\n  _createClass(ProjectDetails, [{\n    key: \"render\",\n    value: function render() {\n      var project = this.props.project; // console.log(\"prop\", project && project)\n\n      var comments = this.props.comments;\n\n      if (project) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 16\n          },\n          __self: this\n        }, project && project.map(function (project) {\n          return React.createElement(\"div\", {\n            className: \"container section project-details\",\n            key: project.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 20\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"row\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 23\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"col s12 m8 offset-l2 l8 offset-l2\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 25\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"card z-depth-0 show-up\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 26\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"card-content\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 27\n            },\n            __self: this\n          }, React.createElement(\"span\", {\n            className: \"card-title\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 28\n            },\n            __self: this\n          }, \" \", project && project.title, \" \"), React.createElement(\"div\", {\n            className: \"card-image\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 29\n            },\n            __self: this\n          }, React.createElement(\"img\", {\n            src: project && project.imageUrl,\n            alt: \"project\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 30\n            },\n            __self: this\n          }), React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 31\n            },\n            __self: this\n          }, project && project.content))), React.createElement(\"div\", {\n            className: \"card-action grey-text\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 36\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 38\n            },\n            __self: this\n          }, React.createElement(Link, {\n            to: '../profile/' + project.authorId,\n            className: \"blue-text\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 39\n            },\n            __self: this\n          }, project && project.authorFirstName, \" \", project && project.authorSecondName)), React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 44\n            },\n            __self: this\n          }, project && project.createdAt && project.createdAt.toDate().toLocaleDateString('indian', {\n            year: \"2-digit\",\n            month: \"short\",\n            day: \"numeric\"\n          })), React.createElement(\"div\", {\n            className: \"add-comment\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 49\n            },\n            __self: this\n          }, React.createElement(AddComment, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 50\n            },\n            __self: this\n          })), React.createElement(\"div\", {\n            className: \"comment-details\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 52\n            },\n            __self: this\n          }, React.createElement(Comments, {\n            comments: comments,\n            projectId: project.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 53\n            },\n            __self: this\n          })))))));\n        }));\n      } else {\n        return React.createElement(\"div\", {\n          className: \"container center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, \" Loading projects. . . .  \"));\n      }\n    }\n  }]);\n\n  return ProjectDetails;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state, ownProps) {\n  // console.log(state)\n  var id = ownProps.match.params.id;\n  var comments = state.firestore.ordered; // console.log(\"projects: \", comments)\n\n  var comment = comments ? comments[id] : null; // console.log(\"project: \", comment)\n\n  return {\n    project: state.firestore.ordered.projects,\n    comments: comment\n  };\n};\n\nexport default compose(firestoreConnect(function (props) {\n  return [{\n    collection: 'projects',\n    doc: props.match.params.id\n  }, {\n    collection: 'projects',\n    doc: props.match.params.id,\n    subcollections: [{\n      collection: 'comments'\n    }],\n    storeAs: props.match.params.id,\n    orderBy: ['commentTime', 'desc']\n  }];\n}), connect(mapStateToProps))(ProjectDetails); // export default connect(mapStateToProps)(ProjectDetails)","map":{"version":3,"sources":["/home/madan/Documents/workspace/artwork/src/components/projects/ProjectDetails.js"],"names":["React","Component","connect","firestoreConnect","compose","Link","Comments","AddComment","ProjectDetails","project","props","comments","map","id","title","imageUrl","content","authorId","authorFirstName","authorSecondName","createdAt","toDate","toLocaleDateString","year","month","day","mapStateToProps","state","ownProps","match","params","firestore","ordered","comment","projects","collection","doc","subcollections","storeAs","orderBy"],"mappings":"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","sourcesContent":["import React, { Component} from 'react'\nimport { connect } from 'react-redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux'\nimport { Link } from 'react-router-dom'\nimport Comments from './projectActs/Comments'\nimport AddComment from './projectActs/AddComment'\n\nclass ProjectDetails extends Component {\n  render() {\n  const { project } = this.props\n  // console.log(\"prop\", project && project)\n  const { comments } = this.props\n  if (project) {\n    return(\n      <div>\n        {\n          project && project.map((project) => {\n            return (\n              <div className=\"container section project-details\"\n                key={project.id}>\n\n                <div className=\"row\">\n\n                  <div className=\"col s12 m8 offset-l2 l8 offset-l2\">\n                    <div className=\"card z-depth-0 show-up\">\n                      <div className=\"card-content\">\n                        <span className=\"card-title\"> {project && project.title} </span>\n                        <div className=\"card-image\">\n                          <img src={project && project.imageUrl} alt=\"project\" />\n                          <p>{project && project.content}</p>\n                        </div>\n\n                      </div>\n\n                      <div className=\"card-action grey-text\">\n\n                        <div>\n                        <Link to={'../profile/' + project.authorId} className=\"blue-text\">\n                          {project && project.authorFirstName} {project && project.authorSecondName}\n                        </Link>\n\n                        </div>\n                        <div>{ project && project.createdAt &&\n                            project.createdAt.toDate()\n                            .toLocaleDateString('indian',\n                            {year: \"2-digit\", month: \"short\", day: \"numeric\"})}\n                        </div>\n                        <div className=\"add-comment\">\n                          <AddComment />\n                        </div>\n                        <div className=\"comment-details\">\n                          <Comments comments={comments} projectId={project.id} />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            )\n          })\n        }\n      </div>\n    )\n  } else {\n    return (\n      <div className=\"container center\">\n        <p> Loading projects. . . .  </p>\n      </div>\n    )\n  }\n}\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  // console.log(state)\n  const id = ownProps.match.params.id\n  const comments = state.firestore.ordered\n  // console.log(\"projects: \", comments)\n  const comment = comments ? comments[id] : null\n  // console.log(\"project: \", comment)\n  return {\n    project: state.firestore.ordered.projects,\n    comments: comment\n  }\n}\n\nexport default compose(\n  firestoreConnect(props => {\n    return [\n     { collection: 'projects',\n       doc: props.match.params.id\n     },\n     { collection: 'projects',\n       doc: props.match.params.id,\n       subcollections: [\n         { collection: 'comments' }\n       ],\n       storeAs: props.match.params.id,\n       orderBy: ['commentTime', 'desc']\n     }\n    ]\n  }),\n  connect(mapStateToProps)\n)(ProjectDetails)\n\n// export default connect(mapStateToProps)(ProjectDetails)\n"]},"metadata":{},"sourceType":"module"}