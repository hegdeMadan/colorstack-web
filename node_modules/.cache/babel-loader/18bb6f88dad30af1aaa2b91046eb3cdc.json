{"ast":null,"code":"import _objectSpread from \"/home/madan/Documents/workspace/artwork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/madan/Documents/workspace/artwork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/madan/Documents/workspace/artwork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/madan/Documents/workspace/artwork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/madan/Documents/workspace/artwork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/madan/Documents/workspace/artwork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/madan/Documents/workspace/artwork/src/components/projects/projectActs/CommentDetails.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport AddReply from './AddReply';\nimport Reply from './Reply';\n\nvar CommentDetails =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CommentDetails, _Component);\n\n  function CommentDetails() {\n    var _this;\n\n    _classCallCheck(this, CommentDetails);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CommentDetails).call(this));\n\n    _this.handleClick = function () {\n      var projectId = _this.props.projectId;\n      var commentId = _this.props.comment.id;\n      var replies = [];\n      var db = firebase.firestore();\n      var ref = db.collection('projects').doc(projectId).collection('comments').doc(commentId).collection('reply').orderBy('time', 'desc');\n      return ref.get().then(function (documentSnapshots) {\n        documentSnapshots.forEach(function (doc) {\n          console.log(\"data:\", doc.data());\n\n          var obj = _objectSpread({}, doc.data(), {\n            id: doc.id\n          });\n\n          replies.push(obj);\n        });\n      }).then(function () {\n        _this.setState(function () {\n          return {\n            replies: replies\n          };\n        }, function () {\n          console.log(\"rep: \", _this.state);\n        });\n      });\n    };\n\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(CommentDetails, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          comment = _this$props.comment,\n          projectId = _this$props.projectId;\n      var replies = this.state.replies;\n      var commentFromId = comment && comment.commentFromId ? comment.commentFromId : null;\n      return React.createElement(\"div\", {\n        className: \"comments\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: '/profile/' + commentFromId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"commentor green-text darken-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, comment.commentFrom)), React.createElement(\"span\", {\n        className: \"comment_02_spn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, comment.comment)), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(AddReply, {\n        commentId: comment.id,\n        projectId: projectId,\n        onClick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(Reply, {\n        replies: replies,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return CommentDetails;\n}(Component);\n\nexport default CommentDetails;","map":{"version":3,"sources":["/home/madan/Documents/workspace/artwork/src/components/projects/projectActs/CommentDetails.js"],"names":["React","Component","Link","firebase","AddReply","Reply","CommentDetails","handleClick","projectId","props","commentId","comment","id","replies","db","firestore","ref","collection","doc","orderBy","get","then","documentSnapshots","forEach","console","log","data","obj","push","setState","state","commentFromId","commentFrom"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport AddReply from './AddReply'\nimport Reply from './Reply'\n\nclass CommentDetails extends Component {\n  constructor() {\n    super()\n    this.state = {}\n  }\n  handleClick = () => {\n    const projectId = this.props.projectId\n    const commentId = this.props.comment.id\n    const replies = []\n\n    const db = firebase.firestore()\n    const ref = db.collection('projects').doc(projectId)\n      .collection('comments').doc(commentId)\n      .collection('reply')\n      .orderBy('time', 'desc')\n\n      return ref.get().then(documentSnapshots => {\n        documentSnapshots.forEach(doc => {\n          console.log(\"data:\", doc.data())\n          let obj = {\n            ...doc.data(),\n            id: doc.id\n          }\n          replies.push(obj)\n        })\n      })\n      .then(() => {\n        this.setState(() => {\n          return {\n            replies\n          }\n        }, () => {\n          console.log(\"rep: \", this.state)\n        })\n      })\n  }\n\n  render() {\n    const { comment, projectId } = this.props\n    const { replies } = this.state\n    const commentFromId = comment && comment.commentFromId ? comment.commentFromId : null\n    return(\n      <div\n        className=\"comments\">\n        <p>\n          <Link to={'/profile/' + commentFromId }>\n            <span className=\"commentor green-text darken-1\">\n              {comment.commentFrom}\n            </span>\n          </Link>\n          <span className=\"comment_02_spn\">{comment.comment}</span>\n        </p>\n        <div>\n          <AddReply\n            commentId={comment.id}\n            projectId={projectId}\n            onClick={this.handleClick}/>\n        </div>\n        <div>\n          <Reply replies={replies}/>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default CommentDetails\n"]},"metadata":{},"sourceType":"module"}