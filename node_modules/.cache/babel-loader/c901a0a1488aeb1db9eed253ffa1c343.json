{"ast":null,"code":"export var addCollection = function addCollection(post) {\n  return function (dispatch, getState, _ref) {\n    var getFirebase = _ref.getFirebase,\n        getFirestore = _ref.getFirestore;\n    var firestore = getFirestore();\n    var userId = getState().firebase.auth.uid;\n    var postId = post.postId;\n    firestore.collection('users').doc(userId).collection('collection').add({\n      imageUrl: post.imageUrl,\n      postId: post.postId,\n      isActive: true,\n      authorId: post.authorId,\n      authorFirstName: post.authorFirstName,\n      authorLastName: post.authorLastName,\n      time: new Date()\n    }).then(function () {\n      dispatch({\n        type: 'ADD_COLLECTION',\n        post: post\n      });\n      firestore.collection('projects').doc(postId).collection('collected').add({\n        userId: userId\n      });\n    }).catch(function (error) {\n      dispatch({\n        type: 'ADD_COLLECTION_ERROR',\n        error: error\n      });\n    });\n  };\n};\nexport var disableCollection = function disableCollection(data) {\n  return function (dispatch, getState, _ref2) {\n    var getFirestore = _ref2.getFirestore,\n        getFirebase = _ref2.getFirebase;\n    var firestore = getFirestore();\n    var userId = getState().firebase.auth.uid;\n    var docId = data.docId;\n    firestore.collection('users').doc(userId).collection('collection').doc(docId).update({\n      imageUrl: data.imageUrl,\n      postId: data.postId,\n      isActive: false,\n      authorId: post.authorId,\n      authorFirstName: post.authorFirstName,\n      authorLastName: post.authorLastName,\n      time: new Date()\n    });\n  };\n};\nexport var updateCollection = function updateCollection(data) {\n  return function (dispatch, getState, _ref3) {\n    var getFirestore = _ref3.getFirestore,\n        getFirebase = _ref3.getFirebase;\n    var firestore = getFirestore();\n    var userId = getState().firebase.auth.uid;\n    var docId = data.docId;\n    firestore.collection('users').doc(userId).collection('collection').doc(docId).update({\n      imageUrl: data.imageUrl,\n      postId: data.postId,\n      isActive: true,\n      authorId: post.authorId,\n      authorFirstName: post.authorFirstName,\n      authorLastName: post.authorLastName,\n      time: new Date()\n    });\n  };\n};","map":{"version":3,"sources":["/home/madan/Documents/workspace/artwork/src/store/actions/Collection.js"],"names":["addCollection","post","dispatch","getState","getFirebase","getFirestore","firestore","userId","firebase","auth","uid","postId","collection","doc","add","imageUrl","isActive","authorId","authorFirstName","authorLastName","time","Date","then","type","catch","error","disableCollection","data","docId","update","updateCollection"],"mappings":"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","sourcesContent":["export const addCollection = (post) => {\n  return(dispatch, getState, { getFirebase, getFirestore }) => {\n\n    const firestore = getFirestore()\n    const userId = getState().firebase.auth.uid\n    const postId = post.postId\n\n    firestore.collection('users').doc(userId)\n    .collection('collection')\n    .add({\n      imageUrl: post.imageUrl,\n      postId: post.postId,\n      isActive: true,\n      authorId: post.authorId,\n      authorFirstName: post.authorFirstName,\n      authorLastName: post.authorLastName,\n      time: new Date()\n    })\n    .then(() => {\n      dispatch({type: 'ADD_COLLECTION', post})\n\n      firestore.collection('projects').doc(postId)\n      .collection('collected')\n      .add({\n        userId: userId\n      })\n    })\n    .catch((error) => {\n      dispatch({type: 'ADD_COLLECTION_ERROR', error})\n    })\n  }\n}\n\nexport const disableCollection = (data) => {\n  return (dispatch, getState, { getFirestore, getFirebase }) => {\n    const firestore = getFirestore()\n    const userId = getState().firebase.auth.uid\n    const { docId } = data\n\n    firestore.collection('users').doc(userId)\n      .collection('collection').doc(docId)\n      .update({\n        imageUrl: data.imageUrl,\n        postId: data.postId,\n        isActive: false,\n        authorId: post.authorId,\n        authorFirstName: post.authorFirstName,\n        authorLastName: post.authorLastName,\n        time: new Date()\n      })\n  }\n}\n\nexport const updateCollection = (data) => {\n  return (dispatch, getState, { getFirestore, getFirebase }) => {\n    const firestore = getFirestore()\n    const userId = getState().firebase.auth.uid\n    const { docId } = data\n\n    firestore.collection('users').doc(userId)\n      .collection('collection').doc(docId)\n      .update({\n        imageUrl: data.imageUrl,\n        postId: data.postId,\n        isActive: true,\n        authorId: post.authorId,\n        authorFirstName: post.authorFirstName,\n        authorLastName: post.authorLastName,\n        time: new Date()\n      })\n  }\n}\n"]},"metadata":{},"sourceType":"module"}