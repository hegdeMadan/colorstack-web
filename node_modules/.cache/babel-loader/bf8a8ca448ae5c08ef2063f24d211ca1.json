{"ast":null,"code":"import _classCallCheck from \"/home/madan/Documents/workspace/artwork/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/madan/Documents/workspace/artwork/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/madan/Documents/workspace/artwork/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/madan/Documents/workspace/artwork/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/madan/Documents/workspace/artwork/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/madan/Documents/workspace/artwork/src/components/projects/CreateProject.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport firebase from 'firebase/app';\nimport { createProject as _createProject } from '../../store/actions/ProjectActions';\n\nvar CreateProject =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CreateProject, _Component);\n\n  function CreateProject() {\n    var _this;\n\n    _classCallCheck(this, CreateProject);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CreateProject).call(this));\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n      var title = _this.refs.title.value;\n      var content = _this.refs.content.value;\n      var uid = _this.props.auth.uid;\n      var image = _this.refs.image.files[0];\n      var storage = firebase.storage();\n      var storageRef = storage.ref(\"wallposts/\".concat(uid) + image.name); // creating storage reference\n      // inserting image to firestore\n\n      var uploadTask = storageRef.put(image);\n      uploadTask.on('state_changed', function (snapshot) {// image upload progress\n      }, function (error) {\n        console.log(error);\n      }, function () {\n        // getting download url for the image\n        uploadTask.snapshot.ref.getDownloadURL().then(function (url) {\n          var imageUrl = url;\n          changeState();\n        });\n      }); // const getImageUrl = () => {\n      //   // reference to the image to get download Url\n      //   uploadTask.snapshot.ref.getDownloadURL()\n      //     .then(url => {\n      //       this.setState(() => {\n      //         title: this.refs.title.value,\n      //         content: this.refs.content.value,\n      //         imageUrl: url\n      //       }, () => {\n      //         console.log(this.state)\n      //         this.props.createProject(this.state)\n      //         this.props.history.push('/')\n      //       })\n      //     })\n      // }\n    };\n\n    _this.changeState = function () {\n      _this.setState(function () {\n        return {\n          title: title,\n          content: content,\n          imageUrl: imageUrl\n        };\n      });\n    };\n\n    _this.state = {\n      title: '',\n      content: '',\n      imageUrl: ''\n    };\n    return _this;\n  } // handling on submit\n  // handleSubmit = (e) => {\n  //   e.preventDefault()\n  //     this.setState({\n  //         title: this.refs.title.value,\n  //         content: this.refs.content.value,\n  //         image: this.refs.image.files[0]\n  //     }, () => {\n  //       console.log(this.state)\n  //       this.props.createProject(this.state)\n  //       this.props.history.push('/')\n  //     })\n  //   }\n\n\n  _createClass(CreateProject, [{\n    key: \"render\",\n    value: function render() {\n      // getting uid from props\n      var auth = this.props.auth;\n      if (!auth.uid) return React.createElement(Redirect, {\n        to: \"/signin\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }); // redirecting signedOut user to signin page\n\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: \"col m10 offset-m1 sign-in\",\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        className: \"grey-text text-darken-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"Create a New Project\"), React.createElement(\"div\", {\n        className: \"input-field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        id: \"title\",\n        ref: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"Project Title\")), React.createElement(\"div\", {\n        className: \"file-field input-field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"file\",\n        ref: \"image\",\n        id: \"imagePath\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"file-path-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"file-path validate\",\n        type: \"text\",\n        placeholder: \"choose image\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"input-field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(\"textarea\", {\n        id: \"content\",\n        ref: \"content\",\n        className: \"materialize-textarea\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"Project Content\")), React.createElement(\"div\", {\n        className: \"input-field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn pink lighten-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"Create\")))));\n    }\n  }]);\n\n  return CreateProject;\n}(Component); // retrieving aut uid from firebase to store passing it as props\n\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    auth: state.firebase.auth\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    createProject: function createProject(project) {\n      return dispatch(_createProject(project));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject);","map":{"version":3,"sources":["/home/madan/Documents/workspace/artwork/src/components/projects/CreateProject.js"],"names":["React","Component","connect","Redirect","firebase","createProject","CreateProject","handleSubmit","e","preventDefault","title","refs","value","content","uid","props","auth","image","files","storage","storageRef","ref","name","uploadTask","put","on","snapshot","error","console","log","getDownloadURL","then","url","imageUrl","changeState","setState","state","mapStateToProps","mapDispatchToProps","dispatch","project"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\nimport firebase from 'firebase/app'\nimport { createProject } from '../../store/actions/ProjectActions'\n\nclass CreateProject extends Component {\n  constructor() {\n    super();\n      this.state = {\n        title: '',\n        content: '',\n        imageUrl:''\n      }\n  }\n\n  // handling on submit\n  // handleSubmit = (e) => {\n  //   e.preventDefault()\n  //     this.setState({\n  //         title: this.refs.title.value,\n  //         content: this.refs.content.value,\n  //         image: this.refs.image.files[0]\n  //     }, () => {\n  //       console.log(this.state)\n  //       this.props.createProject(this.state)\n  //       this.props.history.push('/')\n  //     })\n  //   }\n\n  handleSubmit = (e) => {\n    e.preventDefault()\n    const title = this.refs.title.value\n    const content = this.refs.content.value\n    const { uid } = this.props.auth\n    const image = this.refs.image.files[0]\n    const storage = firebase.storage()\n    const storageRef = storage.ref(`wallposts/${uid}` + image.name) // creating storage reference\n\n    // inserting image to firestore\n    const uploadTask = storageRef.put(image)\n    uploadTask.on('state_changed',\n    (snapshot) => {\n      // image upload progress\n\n    },\n    (error) => {\n      console.log(error)\n    },\n    () => {\n      // getting download url for the image\n      uploadTask.snapshot.ref.getDownloadURL().then(url => {\n        var imageUrl = url\n        changeState()\n      })\n    })\n    // const getImageUrl = () => {\n    //   // reference to the image to get download Url\n    //   uploadTask.snapshot.ref.getDownloadURL()\n    //     .then(url => {\n    //       this.setState(() => {\n    //         title: this.refs.title.value,\n    //         content: this.refs.content.value,\n    //         imageUrl: url\n    //       }, () => {\n    //         console.log(this.state)\n    //         this.props.createProject(this.state)\n    //         this.props.history.push('/')\n    //       })\n    //     })\n    // }\n\n  }\n  changeState = () => {\n    this.setState(() => {\n      return {\n        title,\n        content,\n        imageUrl\n      }\n    })\n  }\n\n\n  render() {\n    // getting uid from props\n    const { auth } = this.props\n    if(!auth.uid) return <Redirect to='/signin' /> // redirecting signedOut user to signin page\n    return(\n      <div className=\"container\">\n        <div className=\"row\">\n          <form className=\"col m10 offset-m1 sign-in\" onSubmit={this.handleSubmit}>\n            <h5 className=\"grey-text text-darken-3\">Create a New Project</h5>\n            <div className=\"input-field\">\n              <input type=\"text\" id='title' ref=\"title\" />\n              <label htmlFor=\"title\">Project Title</label>\n            </div>\n\n            <div className=\"file-field input-field\">\n              <div className=\"btn\">\n                <input type=\"file\" ref=\"image\" id=\"imagePath\" />\n              </div>\n              <div className=\"file-path-wrapper\">\n                <input className=\"file-path validate\" type=\"text\" placeholder=\"choose image\" />\n              </div>\n            </div>\n\n            <div className=\"input-field\">\n              <textarea id=\"content\" ref=\"content\" className=\"materialize-textarea\" ></textarea>\n              <label htmlFor=\"content\">Project Content</label>\n            </div>\n            <div className=\"input-field\">\n              <button className=\"btn pink lighten-1\">Create</button>\n            </div>\n          </form>\n        </div>\n      </div>\n    )\n  }\n}\n\n// retrieving aut uid from firebase to store passing it as props\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.firebase.auth\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    createProject: (project) => dispatch(createProject(project))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject)\n"]},"metadata":{},"sourceType":"module"}