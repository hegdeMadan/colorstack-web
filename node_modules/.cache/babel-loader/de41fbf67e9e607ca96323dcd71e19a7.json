{"ast":null,"code":"import _objectSpread from \"/home/madan/Documents/workspace/artwork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nexport var getData = function getData() {\n  var firestore = getFirestore();\n  var atFirstCall = firestore.collection('projects').orderBy('createdAt').limit(15);\n  var allPosts = [];\n  return atFirstCall.get().then(function (documentSnapshots) {\n    // Get the last visible document\n    console.log(\"test\");\n    var lastVisible = documentSnapshots.docs[documentSnapshots.docs.length - 1]; // console.log(\"last\", documentSnapshots);\n\n    documentSnapshots.forEach(function (doc) {\n      var obj = _objectSpread({}, doc.data(), {\n        id: doc.id\n      });\n\n      allPosts.push(obj);\n    }); // Construct a new query starting at this document,\n    // get the next 25 cities.\n    // var next = db.collection(\"cities\")\n    //     .orderBy(\"population\")\n    //     .startAfter(lastVisible)\n    //     .limit(25);\n  }).then(function () {\n    console.log(allPosts);\n    dispatch({\n      type: 'RETRIEVE_POST',\n      allPosts: allPosts\n    });\n  }).catch(function (error) {\n    dispatch({\n      type: 'RETRIEVE_POST_ERR',\n      error: error\n    });\n    console.log(\"something went wrong! Please refresh the page\", error);\n  });\n};","map":{"version":3,"sources":["/home/madan/Documents/workspace/artwork/src/utils/GetSortedPost.js"],"names":["getData","firestore","getFirestore","atFirstCall","collection","orderBy","limit","allPosts","get","then","documentSnapshots","console","log","lastVisible","docs","length","forEach","doc","obj","data","id","push","dispatch","type","catch","error"],"mappings":";AAAA,OAAO,IAAMA,OAAO,GAAG,SAAVA,OAAU,GAAM;AAE3B,MAAMC,SAAS,GAAGC,YAAY,EAA9B;AACA,MAAMC,WAAW,GAAGF,SAAS,CAACG,UAAV,CAAqB,UAArB,EACjBC,OADiB,CACT,WADS,EAEjBC,KAFiB,CAEX,EAFW,CAApB;AAGA,MAAIC,QAAQ,GAAG,EAAf;AAEE,SAAOJ,WAAW,CAACK,GAAZ,GAAkBC,IAAlB,CAAuB,UAACC,iBAAD,EAAuB;AACnD;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACA,QAAIC,WAAW,GAAGH,iBAAiB,CAACI,IAAlB,CAAuBJ,iBAAiB,CAACI,IAAlB,CAAuBC,MAAvB,GAA8B,CAArD,CAAlB,CAHmD,CAInD;;AACAL,IAAAA,iBAAiB,CAACM,OAAlB,CAA0B,UAAAC,GAAG,EAAI;AAC/B,UAAIC,GAAG,qBACFD,GAAG,CAACE,IAAJ,EADE;AAELC,QAAAA,EAAE,EAAEH,GAAG,CAACG;AAFH,QAAP;;AAIAb,MAAAA,QAAQ,CAACc,IAAT,CAAcH,GAAd;AACD,KAND,EALmD,CAYnD;AACA;AACA;AACA;AACA;AACA;AAED,GAnBM,EAoBNT,IApBM,CAoBD,YAAM;AACVE,IAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AACAe,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAE,eAAR;AAAyBhB,MAAAA,QAAQ,EAARA;AAAzB,KAAD,CAAR;AACD,GAvBM,EAwBNiB,KAxBM,CAwBA,UAAAC,KAAK,EAAI;AACdH,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAE,mBAAR;AAA6BE,MAAAA,KAAK,EAALA;AAA7B,KAAD,CAAR;AACAd,IAAAA,OAAO,CAACC,GAAR,CAAY,+CAAZ,EAA6Da,KAA7D;AACD,GA3BM,CAAP;AA4BH,CApCM","sourcesContent":["export const getData = () => {\n  \n  const firestore = getFirestore()\n  const atFirstCall = firestore.collection('projects')\n    .orderBy('createdAt')\n    .limit(15)\n  var allPosts = []\n\n    return atFirstCall.get().then((documentSnapshots) => {\n      // Get the last visible document\n      console.log(\"test\")\n      var lastVisible = documentSnapshots.docs[documentSnapshots.docs.length-1];\n      // console.log(\"last\", documentSnapshots);\n      documentSnapshots.forEach(doc => {\n        let obj = {\n          ...doc.data(),\n          id: doc.id\n        }\n        allPosts.push(obj)\n      })\n      // Construct a new query starting at this document,\n      // get the next 25 cities.\n      // var next = db.collection(\"cities\")\n      //     .orderBy(\"population\")\n      //     .startAfter(lastVisible)\n      //     .limit(25);\n\n    })\n    .then(() => {\n      console.log(allPosts)\n      dispatch({ type: 'RETRIEVE_POST', allPosts })\n    })\n    .catch(error => {\n      dispatch({ type: 'RETRIEVE_POST_ERR', error })\n      console.log(\"something went wrong! Please refresh the page\", error)\n    })\n}\n"]},"metadata":{},"sourceType":"module"}