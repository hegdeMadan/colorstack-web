{"ast":null,"code":"import _classCallCheck from \"/home/madan/Documents/workspace/artwork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/madan/Documents/workspace/artwork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/madan/Documents/workspace/artwork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/madan/Documents/workspace/artwork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/madan/Documents/workspace/artwork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/madan/Documents/workspace/artwork/src/components/profile/UploadImage.js\";\nimport React, { Component } from 'react';\nimport firebase from 'firebase/app';\nimport { connect } from 'react-redux';\nimport ReactCrop from 'react-image-crop';\nimport 'react-image-crop/dist/ReactCrop.css';\nimport portrait from '../../static/portrait.png';\nimport { base64StringtoFile, downloadBase64File, extractImageFileExtensionFromBase64, image64toCanvasRef } from '../../utils/CropOutput';\nimport { uploadProfilePicture } from '../../store/actions/ProfilePictureUpload';\n\nvar UploadImage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(UploadImage, _Component);\n\n  function UploadImage() {\n    var _this;\n\n    _classCallCheck(this, UploadImage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UploadImage).call(this));\n\n    _this.handleFile = function (event) {\n      event.persist();\n      var input = event.target;\n      var imageOriginalName = input.files[0].name;\n      var reader = new FileReader();\n\n      reader.onload = function () {\n        var dataURL = reader.result; // console.log(\"img: \", dataURL)\n\n        _this.setState(function () {\n          return {\n            imageSrc: dataURL,\n            imgSrcExt: extractImageFileExtensionFromBase64(dataURL),\n            imageName: imageOriginalName\n          };\n        });\n      };\n\n      reader.readAsDataURL(input.files[0]);\n    };\n\n    _this.handleClick = function () {\n      _this.props.onClick();\n    };\n\n    _this.handleChange = function (crop) {\n      _this.setState({\n        crop: crop\n      }, function () {// console.log(this.state)\n      });\n    };\n\n    _this.handleOnCropComplete = function (crop, pixelCrop) {\n      var canvasRef = _this.imagePreviewCanvasRef.current;\n      var imageSrc = _this.state.imageSrc;\n      image64toCanvasRef(canvasRef, imageSrc, pixelCrop);\n    };\n\n    _this.uploadFile = function (fileToBeUploaded) {\n      var storage = firebase.storage();\n      var storageRef = storage.ref(\"ProfilePicture/\".concat(_this.props.uid)); // inserting image to firestore storage\n\n      var uploadTask = storageRef.put(fileToBeUploaded);\n      uploadTask.on('state_changed', function (snapshot) {\n        // catch image upload progress\n        var progress = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n\n        _this.setState({\n          progress: progress\n        });\n\n        _this.handleClick(); // calling function to close profile picture upload popup\n\n      }, function (error) {\n        console.log(\"error uploading file\", error);\n      }, function () {\n        uploadTask.snapshot.ref.getDownloadURL().then(function (url) {\n          var pictureUrl = url;\n\n          _this.setState(function () {\n            return {\n              pictureUrl: pictureUrl\n            };\n          }, function () {\n            // console.log(this.state)\n            _this.props.uploadImage(_this.state.pictureUrl);\n          });\n        });\n      });\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n      var imageSrc = _this.state.imageSrc;\n\n      if (imageSrc) {\n        var canvasRef = _this.imagePreviewCanvasRef.current;\n        var imgSrcExt = _this.state.imgSrcExt;\n        var imageName = _this.state.imageName;\n        var imageData64 = canvasRef.toDataURL('image/' + imgSrcExt, 0.4); // console.log(\"img data: \", imageData64)\n\n        _this.setState(function () {\n          return {\n            imageSrc: imageData64\n          };\n        });\n\n        var myFilename = imageName; // file to be uploaded\n\n        var newCroppedImage = base64StringtoFile(imageData64, myFilename); // console.log(\"final\", newCroppedImage)\n\n        downloadBase64File(imageData64, myFilename);\n\n        _this.uploadFile(newCroppedImage);\n      }\n    };\n\n    _this.imagePreviewCanvasRef = React.createRef();\n    _this.fileInputRef = React.createRef();\n    _this.state = {\n      imageSrc: portrait,\n      crop: {\n        aspect: 1 / 1\n      }\n    };\n    return _this;\n  }\n\n  _createClass(UploadImage, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"modal-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"close right\",\n        onClick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"white-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \"close\"), React.createElement(\"i\", {\n        className: \"material-icons white-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, \"close\")), React.createElement(\"div\", {\n        className: \"image-modal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"photo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(ReactCrop, {\n        className: \"responsive-img\",\n        src: this.state.imageSrc,\n        crop: this.state.crop,\n        onChange: this.handleChange,\n        onComplete: this.handleOnCropComplete,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }), React.createElement(\"canvas\", {\n        ref: this.imagePreviewCanvasRef,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"select-file center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"file\",\n        onChange: this.handleFile,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn indigo z-depth-0\",\n        onClick: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, \"Upload\")))));\n    }\n  }]);\n\n  return UploadImage;\n}(Component);\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    uploadImage: function uploadImage(pictureUrl) {\n      return dispatch(uploadProfilePicture(pictureUrl));\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(UploadImage);","map":{"version":3,"sources":["/home/madan/Documents/workspace/artwork/src/components/profile/UploadImage.js"],"names":["React","Component","firebase","connect","ReactCrop","portrait","base64StringtoFile","downloadBase64File","extractImageFileExtensionFromBase64","image64toCanvasRef","uploadProfilePicture","UploadImage","handleFile","event","persist","input","target","imageOriginalName","files","name","reader","FileReader","onload","dataURL","result","setState","imageSrc","imgSrcExt","imageName","readAsDataURL","handleClick","props","onClick","handleChange","crop","handleOnCropComplete","pixelCrop","canvasRef","imagePreviewCanvasRef","current","state","uploadFile","fileToBeUploaded","storage","storageRef","ref","uid","uploadTask","put","on","snapshot","progress","bytesTransferred","totalBytes","error","console","log","getDownloadURL","then","url","pictureUrl","uploadImage","handleSubmit","e","preventDefault","imageData64","toDataURL","myFilename","newCroppedImage","createRef","fileInputRef","aspect","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport firebase from 'firebase/app'\nimport { connect } from 'react-redux'\nimport ReactCrop from 'react-image-crop'\nimport 'react-image-crop/dist/ReactCrop.css';\nimport portrait from '../../static/portrait.png'\nimport {base64StringtoFile, downloadBase64File,\n        extractImageFileExtensionFromBase64,\n        image64toCanvasRef} from '../../utils/CropOutput'\nimport { uploadProfilePicture } from '../../store/actions/ProfilePictureUpload'\n\nclass UploadImage extends Component {\n  constructor() {\n    super()\n    this.imagePreviewCanvasRef = React.createRef()\n    this.fileInputRef = React.createRef()\n    this.state = {\n      imageSrc: portrait,\n      crop: {\n        aspect: 1/1\n      }\n    }\n  }\n\n  handleFile = (event) => {\n    event.persist()\n    const input = event.target;\n    const imageOriginalName = input.files[0].name\n     const reader = new FileReader()\n     reader.onload = () => {\n       const dataURL = reader.result\n       // console.log(\"img: \", dataURL)\n\n       this.setState(() => {\n         return {\n           imageSrc: dataURL,\n           imgSrcExt: extractImageFileExtensionFromBase64(dataURL),\n           imageName: imageOriginalName\n         }\n       })\n     }\n     reader.readAsDataURL(input.files[0])\n  }\n\n  // closing profile picture upload popup\n  handleClick = () => {\n    this.props.onClick()\n  }\n\n  handleChange = (crop) => {\n    this.setState({ crop }, () => {\n      // console.log(this.state)\n    })\n  }\n\n  handleOnCropComplete = (crop, pixelCrop) => {\n    const canvasRef = this.imagePreviewCanvasRef.current\n    const {imageSrc}  = this.state\n    image64toCanvasRef(canvasRef, imageSrc, pixelCrop)\n  }\n\n  // handling image upload\n  uploadFile = (fileToBeUploaded) => {\n    const storage = firebase.storage()\n    const storageRef = storage.ref(`ProfilePicture/${this.props.uid}`)\n\n    // inserting image to firestore storage\n    const uploadTask = storageRef.put(fileToBeUploaded)\n\n    uploadTask.on('state_changed', (snapshot) => {\n      // catch image upload progress\n      const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n      this.setState({progress})\n      this.handleClick() // calling function to close profile picture upload popup\n    },\n    (error) => {\n      console.log(\"error uploading file\", error)\n    },\n    () => {\n      uploadTask.snapshot.ref.getDownloadURL()\n      .then(url => {\n        var pictureUrl = url\n        this.setState(() => {\n          return {\n            pictureUrl\n          }\n        },\n        () => {\n          // console.log(this.state)\n          this.props.uploadImage(this.state.pictureUrl)\n        })\n      })\n    })\n  }\n\n  // making cropped image usable\n  handleSubmit = (e) => {\n    e.preventDefault()\n    const { imageSrc } = this.state\n    if(imageSrc) {\n      const canvasRef = this.imagePreviewCanvasRef.current\n\n      const {imgSrcExt} =  this.state\n      const {imageName} = this.state\n      const imageData64 = canvasRef.toDataURL('image/' + imgSrcExt, 0.4)\n      // console.log(\"img data: \", imageData64)\n      this.setState(() => {\n        return {\n          imageSrc: imageData64\n        }\n      })\n      const myFilename = imageName\n\n      // file to be uploaded\n      const newCroppedImage = base64StringtoFile(imageData64, myFilename)\n      // console.log(\"final\", newCroppedImage)\n      downloadBase64File(imageData64, myFilename)\n      this.uploadFile(newCroppedImage)\n    }\n  }\n\n  render() {\n    return(\n      <div className=\"modal-wrapper\">\n        <div className=\"close right\" onClick={this.handleClick}>\n          <span className=\"white-text\">close</span>\n            <i className=\"material-icons white-text\">\n              close\n            </i>\n        </div>\n        <div className=\"image-modal\">\n          <div className=\"photo\">\n            {/*<img src={this.state.imageSrc}\n              alt=\"dp\"\n              className=\"responsive-img\"/>*/}\n            <ReactCrop\n              className=\"responsive-img\"\n              src={this.state.imageSrc}\n              crop={this.state.crop}\n              onChange={this.handleChange}\n              onComplete={this.handleOnCropComplete}/>\n              <br/>\n              <canvas ref={this.imagePreviewCanvasRef}></canvas>\n\n          </div>\n          <div className=\"select-file center\">\n            <form>\n              <input type=\"file\" onChange={this.handleFile} />\n              <button type=\"submit\"\n                className=\"btn indigo z-depth-0\"\n                onClick={this.handleSubmit}>\n                Upload\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n   uploadImage: (pictureUrl) => dispatch(uploadProfilePicture(pictureUrl))\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(UploadImage)\n"]},"metadata":{},"sourceType":"module"}