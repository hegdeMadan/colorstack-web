{"ast":null,"code":"import _classCallCheck from \"/home/madan/Documents/workspace/artwork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/madan/Documents/workspace/artwork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/madan/Documents/workspace/artwork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/madan/Documents/workspace/artwork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/madan/Documents/workspace/artwork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/madan/Documents/workspace/artwork/src/components/projects/CreatePost.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport firebase from 'firebase/app';\nimport { createProject as _createProject } from '../../store/actions/ProjectActions';\nimport unreal from '../../static/unreal.jpg';\n\nvar CreateProject =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CreateProject, _Component);\n\n  function CreateProject() {\n    var _this;\n\n    _classCallCheck(this, CreateProject);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CreateProject).call(this));\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n      var uid = _this.props.auth.uid;\n      var message = \"Please choose an image! Or if you want to write you ideas or thoughts post it on our blog\";\n      var image = _this.refs.image.files[0] ? _this.refs.image.files[0] : alert(message);\n      var storage = firebase.storage();\n      var storageRef = storage.ref(\"wallposts/\".concat(uid) + image.name); // creating storage reference\n      // inserting image to firestore\n\n      var uploadTask = storageRef.put(image);\n      uploadTask.on('state_changed', function (snapshot) {\n        // catch image upload progress\n        var progress = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n        console.log('Upload is ' + progress + '% done');\n\n        _this.setState({\n          progress: progress\n        });\n      }, function (error) {\n        console.log(error);\n      }, function () {\n        // getting download url for the image\n        uploadTask.snapshot.ref.getDownloadURL().then(function (url) {\n          var imageUrl = url;\n\n          _this.setState(function () {\n            return {\n              toUpload: {\n                title: _this.refs.title.value,\n                content: _this.refs.content.value,\n                imageUrl: imageUrl\n              }\n            };\n          }, function () {\n            _this.props.createProject(_this.state.toUpload); // this.props.history.push('/')\n\n          });\n        });\n      });\n    };\n\n    _this.handlFile = function (e) {\n      e.persist();\n      var reader = new FileReader();\n      reader.onload(function () {\n        var imageUrl = reader.result;\n\n        _this.setState(function () {\n          return {\n            preview: {\n              imageUrl: imageUrl\n            }\n          };\n        });\n      });\n    };\n\n    _this.state = {\n      title: '',\n      content: '',\n      imageUrl: '',\n      progress: 0\n    };\n    return _this;\n  }\n\n  _createClass(CreateProject, [{\n    key: \"render\",\n    value: function render() {\n      // getting uid from props\n      var auth = this.props.auth;\n      var preview = this.state.preview;\n      if (!auth.uid) return React.createElement(Redirect, {\n        to: \"/signin\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }); // redirecting signedOut user to signin page\n\n      return React.createElement(\"div\", {\n        className: \"section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card z-depth-0 show-up\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"cp_ttl\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \" share your art \")), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, preview && preview.imageUrl ? React.createElement(\"div\", {\n        className: \"preview\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"responsive-img\",\n        src: preview.imageUrl,\n        alt: \"img\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      })) : null), React.createElement(\"form\", {\n        className: \"post_create\",\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"material-icons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"add_photo_alternate\", React.createElement(\"input\", {\n        type: \"file\",\n        onChange: this.handlFile,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"input-field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn pink lighten-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"Create\"))), this.state.progress !== 0 ? React.createElement(\"div\", {\n        className: \"upload-progress\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"progress\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \" Sit back! File's being uploaded \"), React.createElement(\"progress\", {\n        id: \"progress\",\n        value: this.state.progress,\n        max: \"100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      })) : null));\n    }\n  }]);\n\n  return CreateProject;\n}(Component); // retrieving aut uid from firebase to store passing it as props\n\n\nvar mapStateToProps = function mapStateToProps(state) {\n  console.log(state);\n  return {\n    auth: state.firebase.auth\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    createProject: function createProject(project) {\n      return dispatch(_createProject(project));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject);","map":{"version":3,"sources":["/home/madan/Documents/workspace/artwork/src/components/projects/CreatePost.js"],"names":["React","Component","connect","Redirect","firebase","createProject","unreal","CreateProject","handleSubmit","e","preventDefault","uid","props","auth","message","image","refs","files","alert","storage","storageRef","ref","name","uploadTask","put","on","snapshot","progress","bytesTransferred","totalBytes","console","log","setState","error","getDownloadURL","then","url","imageUrl","toUpload","title","value","content","state","handlFile","persist","reader","FileReader","onload","result","preview","mapStateToProps","mapDispatchToProps","dispatch","project"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\nimport firebase from 'firebase/app'\nimport { createProject } from '../../store/actions/ProjectActions'\nimport unreal from '../../static/unreal.jpg'\n\nclass CreateProject extends Component {\n  constructor() {\n    super()\n      this.state = {\n        title: '',\n        content: '',\n        imageUrl:'',\n        progress: 0\n      }\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault()\n    const { uid } = this.props.auth\n    const message = \"Please choose an image! Or if you want to write you ideas or thoughts post it on our blog\"\n    const image = this.refs.image.files[0] ? this.refs.image.files[0] : alert(message)\n    const storage = firebase.storage()\n    const storageRef = storage.ref(`wallposts/${uid}` + image.name) // creating storage reference\n\n    // inserting image to firestore\n    const uploadTask = storageRef.put(image)\n    uploadTask.on('state_changed',\n    (snapshot) => {\n      // catch image upload progress\n      const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n      console.log('Upload is ' + progress + '% done')\n      this.setState({progress})\n    },\n    (error) => {\n      console.log(error)\n    },\n    () => {\n      // getting download url for the image\n      uploadTask.snapshot.ref.getDownloadURL()\n      .then(url => {\n        var imageUrl = url\n        this.setState(() => {\n          return {\n            toUpload: {\n              title: this.refs.title.value,\n              content: this.refs.content.value,\n              imageUrl\n            }\n          }\n        }, () => {\n          this.props.createProject(this.state.toUpload)\n          // this.props.history.push('/')\n        })\n      })\n    })\n  }\n\n  // getting image url to preview\n  handlFile = (e) => {\n    e.persist()\n    const reader = new FileReader()\n\n    reader.onload(() => {\n      const imageUrl = reader.result\n\n      this.setState(() => {\n        return{\n          preview: {imageUrl}\n        }\n      })\n    })\n  }\n\n  render() {\n    // getting uid from props\n    const { auth } = this.props\n    const { preview } = this.state\n    if(!auth.uid) return <Redirect to='/signin' /> // redirecting signedOut user to signin page\n    return(\n      <div className=\"section\">\n        <div className=\"card z-depth-0 show-up\">\n          <div className=\"cp_ttl\">\n            <span> share your art </span>\n          </div>\n          <div>\n            {preview && preview.imageUrl\n              ? <div className=\"preview\">\n                  <img\n                    className=\"responsive-img\"\n                    src={preview.imageUrl}\n                    alt=\"img\"/>\n                </div>\n              : null}\n          </div>\n\n          <form className=\"post_create\" onSubmit={this.handleSubmit}>\n            <div>\n              <i className=\"material-icons\">\n                add_photo_alternate\n                <input\n                  type=\"file\"\n                  onChange={this.handlFile}/>\n              </i>\n            </div>\n            <div className=\"input-field\">\n              <button className=\"btn pink lighten-1\">Create</button>\n            </div>\n          </form>\n\n            { this.state.progress !== 0\n              ? <div className=\"upload-progress\">\n                  <label htmlFor=\"progress\"> Sit back! File's being uploaded </label>\n                  <progress id=\"progress\" value={this.state.progress} max=\"100\" />\n                </div>\n              : null\n            }\n        </div>\n      </div>\n    )\n  }\n}\n\n// retrieving aut uid from firebase to store passing it as props\nconst mapStateToProps = (state) => {\n  console.log(state)\n  return {\n    auth: state.firebase.auth\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    createProject: (project) => dispatch(createProject(project))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject)\n"]},"metadata":{},"sourceType":"module"}