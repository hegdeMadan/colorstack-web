{"ast":null,"code":"var _jsxFileName = \"/home/madan/Documents/workspace/artwork/src/components/projects/projectActs/Comments.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport EachComment from './EachComment';\n\nvar Comments = function Comments(_ref) {\n  var comments = _ref.comments;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"loaded-comments\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, comments && comments.map(function (comment) {\n    return React.createElement(\"div\", {\n      key: comment.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, React.createElement(EachComment, {\n      comment: comment,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }));\n  })));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  console.log(state);\n  return {\n    comments: state.firestore.ordered.comments\n  };\n};\n\nexport default compose(firestoreConnect(function (props) {\n  return [{\n    collection: 'projects',\n    doc: props.project.id,\n    subcollections: [{\n      collection: 'comments'\n    }],\n    storeAs: 'comments'\n  }];\n}), connect(mapStateToProps))(Comments); // export default Comments","map":{"version":3,"sources":["/home/madan/Documents/workspace/artwork/src/components/projects/projectActs/Comments.js"],"names":["React","connect","compose","firestoreConnect","EachComment","Comments","comments","map","comment","id","mapStateToProps","state","console","log","firestore","ordered","props","collection","doc","project","subcollections","storeAs"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,SAASC,gBAAT,QAAiC,sBAAjC;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAAgB;AAAA,MAAdC,QAAc,QAAdA,QAAc;AAC/B,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,QAAQ,IAAIA,QAAQ,CAACC,GAAT,CAAa,UAACC,OAAD,EAAa;AACrC,WACE;AAAK,MAAA,GAAG,EAAEA,OAAO,CAACC,EAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,WAAD;AAAa,MAAA,OAAO,EAAED,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAIA,GALW,CADf,CADF,CADF;AAYD,CAbD;;AAeA,IAAME,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AACjCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,SAAO;AACLL,IAAAA,QAAQ,EAAEK,KAAK,CAACG,SAAN,CAAgBC,OAAhB,CAAwBT;AAD7B,GAAP;AAGD,CALD;;AAOA,eAAeJ,OAAO,CACpBC,gBAAgB,CAAC,UAAAa,KAAK,EAAI;AACxB,SAAO,CACL;AACEC,IAAAA,UAAU,EAAE,UADd;AAEEC,IAAAA,GAAG,EAAEF,KAAK,CAACG,OAAN,CAAcV,EAFrB;AAGEW,IAAAA,cAAc,EAAE,CACd;AACEH,MAAAA,UAAU,EAAE;AADd,KADc,CAHlB;AAQEI,IAAAA,OAAO,EAAE;AARX,GADK,CAAP;AAYD,CAbe,CADI,EAepBpB,OAAO,CAACS,eAAD,CAfa,CAAP,CAgBbL,QAhBa,CAAf,C,CAmBA","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport { compose } from 'redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport EachComment from './EachComment'\n\nconst Comments = ({comments}) => {\n  return(\n    <div>\n      <div className=\"loaded-comments\">\n        {comments && comments.map((comment) => {\n          return(\n            <div key={comment.id}>\n              <EachComment comment={comment} />\n            </div>\n        )})}\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  console.log(state)\n  return {\n    comments: state.firestore.ordered.comments\n  }\n}\n\nexport default compose (\n  firestoreConnect(props => {\n    return [\n      {\n        collection: 'projects',\n        doc: props.project.id,\n        subcollections: [\n          {\n            collection: 'comments',\n          }\n        ],\n        storeAs: 'comments'\n      }\n    ]\n  }),\n  connect(mapStateToProps)\n)(Comments)\n\n\n// export default Comments\n"]},"metadata":{},"sourceType":"module"}