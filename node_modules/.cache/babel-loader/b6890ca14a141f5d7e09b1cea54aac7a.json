{"ast":null,"code":"import _classCallCheck from \"/home/madan/Documents/workspace/artwork/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/madan/Documents/workspace/artwork/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/madan/Documents/workspace/artwork/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/madan/Documents/workspace/artwork/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/madan/Documents/workspace/artwork/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/madan/Documents/workspace/artwork/src/components/store/SellNew.js\";\nimport React, { Component } from 'react';\nimport firebase from 'firebase/app';\nimport { SellArt as _SellArt } from '../../store/actions/ArtActions';\nimport { connect } from 'react-redux';\n\nvar SellNew =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SellNew, _Component);\n\n  function SellNew() {\n    var _this;\n\n    _classCallCheck(this, SellNew);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SellNew).call(this));\n\n    _this.handleInputTrigger = function () {\n      var ref = _this.refs.image;\n      ref.click();\n    };\n\n    _this.handleFile = function (e) {\n      var ref = e.target;\n      var file = ref.files[0];\n      var reader = new FileReader();\n\n      reader.onload = function () {\n        var url = reader.result;\n\n        _this.setState(function () {\n          return {\n            preview: url\n          };\n        }, function () {\n          _this.setState({\n            style: {\n              display: \"block\"\n            }\n          });\n        });\n      };\n\n      reader.readAsDataURL(file);\n    };\n\n    _this.closeForm = function () {\n      _this.props.onClick();\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n      var storeId = _this.props.storeId;\n      var title = _this.refs.title.value;\n      var cost = _this.refs.cost.value;\n      var image = _this.refs.image.files[0];\n      var height = _this.refs.height.value;\n      var width = _this.refs.width.value;\n      var description = _this.refs.text.value;\n      var select = _this.refs.select;\n      var selectVal = select.options[select.selectedIndex].text;\n      var storage = firebase.storage();\n      var storageRef = storage.ref('sellingArts/' + image.name);\n      var uploadTask = storageRef.put(image);\n      uploadTask.on('state_changed', function (snapshot) {\n        var progress = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n        console.log('Upload is ' + progress + '% done');\n\n        _this.setState({\n          progress: progress\n        });\n      }, function (error) {\n        console.log(error);\n      }, function () {\n        // getting download url for the image\n        uploadTask.snapshot.ref.getDownloadURL().then(function (url) {\n          var imageUrl = url;\n\n          _this.setState(function () {\n            return {\n              send: {\n                values: {\n                  title: title,\n                  cost: cost,\n                  imageUrl: imageUrl,\n                  height: height,\n                  width: width,\n                  description: description,\n                  selectVal: selectVal\n                },\n                storeId: storeId\n              }\n            };\n          }, function () {\n            console.log(\"see :\", _this.state);\n\n            _this.props.SellArt(_this.state.send);\n          });\n        });\n      }); // this.setState(() => {\n      //     return {\n      //         values: {\n      //             title,\n      //             cost,\n      //             image,\n      //             height,\n      //             width,\n      //             description,\n      //             selectVal\n      //         }\n      //     }\n      // }, () => {\n      //     console.log(\"see \", this.state)\n      // })\n    };\n\n    _this.state = {\n      style: {\n        display: 'none'\n      }\n    };\n    return _this;\n  }\n\n  _createClass(SellNew, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"sell_new_cover\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"material-icons\",\n        onClick: function onClick() {\n          return _this2.closeForm();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \" close \"), React.createElement(\"div\", {\n        className: \"sell_new_wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"add_post_img\",\n        type: \"file\",\n        ref: \"image\",\n        onChange: this.handleFile,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"button\",\n        onClick: this.handleInputTrigger,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, \" choose an image \"), React.createElement(\"div\", {\n        style: this.state.style,\n        className: \"image_preview\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: this.state.preview,\n        alt: \"art\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, \" Give this a title \"), React.createElement(\"input\", {\n        ref: \"title\",\n        id: \"title\",\n        type: \"text\",\n        placeholder: \"title, here\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, \" call a basic price \"), React.createElement(\"input\", {\n        ref: \"cost\",\n        type: \"text\",\n        placeholder: \"cost, here\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, \" size of the art \"), React.createElement(\"div\", {\n        className: \"measure\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        ref: \"height\",\n        type: \"number\",\n        placeholder: \"height\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        ref: \"width\",\n        type: \"number\",\n        placeholder: \"width\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }), React.createElement(\"select\", {\n        ref: \"select\",\n        name: \"units\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"inch\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, \" in \"), React.createElement(\"option\", {\n        value: \"feet\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, \" ft \"), React.createElement(\"option\", {\n        value: \"centimeter\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, \" cm \")))), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, \" Description \"), React.createElement(\"textarea\", {\n        ref: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, \" Publish \"))));\n    }\n  }]);\n\n  return SellNew;\n}(Component);\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    SellArt: function SellArt(values) {\n      return dispatch(_SellArt(values));\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(SellNew);","map":{"version":3,"sources":["/home/madan/Documents/workspace/artwork/src/components/store/SellNew.js"],"names":["React","Component","firebase","SellArt","connect","SellNew","handleInputTrigger","ref","refs","image","click","handleFile","e","target","file","files","reader","FileReader","onload","url","result","setState","preview","style","display","readAsDataURL","closeForm","props","onClick","handleSubmit","preventDefault","storeId","title","value","cost","height","width","description","text","select","selectVal","options","selectedIndex","storage","storageRef","name","uploadTask","put","on","snapshot","progress","bytesTransferred","totalBytes","console","log","error","getDownloadURL","then","imageUrl","send","values","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport firebase from 'firebase/app'\nimport { SellArt } from '../../store/actions/ArtActions'\nimport { connect } from 'react-redux'\n\nclass SellNew extends Component {\n    constructor() {\n        super()\n        this.state = {\n            style: {\n                display: 'none'\n            }\n        }\n    }\n\n    handleInputTrigger = () => {\n        const ref = this.refs.image\n        ref.click()\n      }\n\n    handleFile = (e) => {\n        const ref = e.target\n        const file = ref.files[0]\n        const reader = new FileReader()\n\n        reader.onload = () => {\n            let url = reader.result\n            this.setState(() => {\n                return {\n                    preview: url\n                }\n            }, () => {\n                this.setState({style:{display:\"block\"}})\n            })\n        }\n        reader.readAsDataURL(file)\n    }\n\n    closeForm = () => {\n        this.props.onClick()\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault()\n        const storeId = this.props.storeId\n        const title = this.refs.title.value\n        const cost = this.refs.cost.value\n        const image = this.refs.image.files[0]\n        const height = this.refs.height.value\n        const width = this.refs.width.value\n        const description = this.refs.text.value\n        const select = this.refs.select\n        const selectVal = select.options[select.selectedIndex].text\n\n        const storage = firebase.storage()\n        const storageRef = storage.ref('sellingArts/' + image.name)\n        const uploadTask = storageRef.put(image)\n\n        uploadTask.on('state_changed', (snapshot) => {\n            const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n\n            console.log('Upload is ' + progress + '% done')\n            this.setState({progress})\n        },\n            (error) => {\n                console.log(error)   \n            },\n            () => {\n                // getting download url for the image\n                uploadTask.snapshot.ref.getDownloadURL()\n                .then(url => {\n                    let imageUrl = url\n\n                    this.setState(() => {\n                        return {\n                            send: {\n                                values: {\n                                    title,\n                                    cost,\n                                    imageUrl,\n                                    height,\n                                    width,\n                                    description,\n                                    selectVal\n                                },\n                                storeId\n                            }\n                        }\n                    }, () => {\n                        console.log(\"see :\", this.state)\n                        this.props.SellArt(this.state.send)\n                    })\n                })\n            }\n        )\n\n        // this.setState(() => {\n        //     return {\n        //         values: {\n        //             title,\n        //             cost,\n        //             image,\n        //             height,\n        //             width,\n        //             description,\n        //             selectVal\n        //         }\n        //     }\n        // }, () => {\n        //     console.log(\"see \", this.state)\n        // })\n    \n    }\n\n    render() {\n        return (\n            <div className=\"sell_new_cover\">\n                <i className=\"material-icons\"\n                    onClick={() => this.closeForm()}> close </i>\n                <div className=\"sell_new_wrapper\">\n                    <form onSubmit={this.handleSubmit}>\n                        <input\n                            className=\"add_post_img\" \n                            type=\"file\"\n                            ref=\"image\" \n                            onChange={this.handleFile} />\n                        <span\n                            className=\"button\"\n                            onClick={this.handleInputTrigger}> choose an image </span>\n                        <div \n                            style={this.state.style}\n                            className=\"image_preview\">\n                            <img \n                                src={this.state.preview} \n                                alt=\"art\" />\n                        </div>\n\n                       <div className=\"info\">\n                            <label> Give this a title </label>\n                            <input ref=\"title\" id=\"title\" type=\"text\" placeholder=\"title, here\" />\n                        \n                            <label> call a basic price </label> \n                            <input ref=\"cost\" type=\"text\" placeholder=\"cost, here\" />\n\n                            <label> size of the art </label>\n                            <div className=\"measure\">\n                                <input ref=\"height\" type=\"number\" placeholder=\"height\" />\n                                <input ref=\"width\" type=\"number\" placeholder=\"width\" />\n                                <select ref=\"select\" name=\"units\">\n                                    <option value=\"inch\"> in </option>\n                                    <option value=\"feet\"> ft </option>\n                                    <option value=\"centimeter\"> cm </option>\n                                </select>\n                            </div>\n                       </div>\n\n                        <label> Description </label>\n                        <textarea ref=\"text\"></textarea>\n\n                        <button type=\"submit\"> Publish </button>\n\n                    </form>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        SellArt: (values) => dispatch(SellArt(values))\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(SellNew)"]},"metadata":{},"sourceType":"module"}