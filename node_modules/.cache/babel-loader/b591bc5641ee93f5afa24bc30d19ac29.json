{"ast":null,"code":"import _classCallCheck from \"/home/madan/Documents/workspace/artwork/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/madan/Documents/workspace/artwork/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/madan/Documents/workspace/artwork/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/madan/Documents/workspace/artwork/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/madan/Documents/workspace/artwork/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/madan/Documents/workspace/artwork/src/components/projects/CreateProject.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport firebase from 'firebase';\nimport { createProject as _createProject } from '../../store/actions/ProjectActions';\n\nvar CreateProject =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CreateProject, _Component);\n\n  function CreateProject() {\n    var _this;\n\n    _classCallCheck(this, CreateProject);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CreateProject).call(this));\n\n    _this.handleSubmit = function () {\n      var image = _this.refs.image.files[0].image;\n      var storage = firebase.storage();\n      var storageRef = storage.ref(\"wallposts/\".concat(userId) + image.name); // creating storage reference\n      // inserting image to firestore\n\n      var uploadTask = storageRef.put(image);\n      uploadTask.then(function (snapshot) {\n        console.log('image has been inserted');\n        getImageUrl();\n      }).catch(function (err) {\n        console.log('error occured', err);\n      });\n      var imageUrl = '';\n\n      var getImageUrl = function getImageUrl() {\n        // reference to the image to get download Url\n        uploadTask.snapshot.ref.getDownloadURL().then(function (url) {\n          imageUrl = url;\n        });\n      };\n    };\n\n    _this.state = {\n      title: '',\n      content: '',\n      image: ''\n    };\n    return _this;\n  } // handling on submit\n  // handleSubmit = (e) => {\n  //   e.preventDefault()\n  //     this.setState({\n  //         title: this.refs.title.value,\n  //         content: this.refs.content.value,\n  //         image: this.refs.image.files[0]\n  //     }, () => {\n  //       console.log(this.state)\n  //       this.props.createProject(this.state)\n  //       this.props.history.push('/')\n  //     })\n  //   }\n\n\n  _createClass(CreateProject, [{\n    key: \"render\",\n    value: function render() {\n      // getting uid from props\n      var auth = this.props.auth;\n      if (!auth.uid) return React.createElement(Redirect, {\n        to: \"/signin\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }); // redirecting signedOut user to signin page\n\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: \"col m10 offset-m1 sign-in\",\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        className: \"grey-text text-darken-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Create a New Project\"), React.createElement(\"div\", {\n        className: \"input-field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        id: \"title\",\n        ref: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"Project Title\")), React.createElement(\"div\", {\n        class: \"file-field input-field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"file\",\n        ref: \"image\",\n        id: \"imagePath\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        class: \"file-path-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        class: \"file-path validate\",\n        type: \"text\",\n        placeholder: \"choose image\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"input-field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"textarea\", {\n        id: \"content\",\n        ref: \"content\",\n        className: \"materialize-textarea\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Project Content\")), React.createElement(\"div\", {\n        className: \"input-field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn pink lighten-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"Create\")))));\n    }\n  }]);\n\n  return CreateProject;\n}(Component); // retrieving aut uid from firebase to store passing it as props\n\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    auth: state.firebase.auth\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    createProject: function createProject(project) {\n      return dispatch(_createProject(project));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject);","map":{"version":3,"sources":["/home/madan/Documents/workspace/artwork/src/components/projects/CreateProject.js"],"names":["React","Component","connect","Redirect","firebase","createProject","CreateProject","handleSubmit","image","refs","files","storage","storageRef","ref","userId","name","uploadTask","put","then","snapshot","console","log","getImageUrl","catch","err","imageUrl","getDownloadURL","url","state","title","content","auth","props","uid","handleChange","mapStateToProps","mapDispatchToProps","dispatch","project"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\nimport firebase from 'firebase'\nimport { createProject } from '../../store/actions/ProjectActions'\n\nclass CreateProject extends Component {\n  constructor() {\n    super();\n      this.state = {\n        title: '',\n        content: '',\n        image:''\n      }\n  }\n\n  // handling on submit\n  // handleSubmit = (e) => {\n  //   e.preventDefault()\n  //     this.setState({\n  //         title: this.refs.title.value,\n  //         content: this.refs.content.value,\n  //         image: this.refs.image.files[0]\n  //     }, () => {\n  //       console.log(this.state)\n  //       this.props.createProject(this.state)\n  //       this.props.history.push('/')\n  //     })\n  //   }\n\n  handleSubmit = () => {\n    const { image } = this.refs.image.files[0]\n    const storage = firebase.storage()\n    const storageRef = storage.ref(`wallposts/${userId}` + image.name) // creating storage reference\n\n    // inserting image to firestore\n    const uploadTask = storageRef.put(image)\n    uploadTask.then((snapshot) => {\n      console.log('image has been inserted')\n      getImageUrl()\n    })\n    .catch((err) => {\n      console.log('error occured', err)\n    })\n\n    var imageUrl = ''\n    const getImageUrl = () => {\n      // reference to the image to get download Url\n      uploadTask.snapshot.ref.getDownloadURL()\n        .then(url => {\n          imageUrl = url\n        })\n    }\n  }\n\n\n  render() {\n    // getting uid from props\n    const { auth } = this.props\n    if(!auth.uid) return <Redirect to='/signin' /> // redirecting signedOut user to signin page\n    return(\n      <div className=\"container\">\n        <div className=\"row\">\n          <form className=\"col m10 offset-m1 sign-in\" onSubmit={this.handleSubmit}>\n            <h5 className=\"grey-text text-darken-3\">Create a New Project</h5>\n            <div className=\"input-field\">\n              <input type=\"text\" id='title' ref=\"title\" />\n              <label htmlFor=\"title\">Project Title</label>\n            </div>\n\n            <div class=\"file-field input-field\">\n              <div class=\"btn\">\n                <input type=\"file\" ref=\"image\" id=\"imagePath\" onChange={this.handleChange} />\n              </div>\n              <div class=\"file-path-wrapper\">\n                <input class=\"file-path validate\" type=\"text\" placeholder=\"choose image\" />\n              </div>\n            </div>\n\n            <div className=\"input-field\">\n              <textarea id=\"content\" ref=\"content\" className=\"materialize-textarea\" ></textarea>\n              <label htmlFor=\"content\">Project Content</label>\n            </div>\n            <div className=\"input-field\">\n              <button className=\"btn pink lighten-1\">Create</button>\n            </div>\n          </form>\n        </div>\n      </div>\n    )\n  }\n}\n\n// retrieving aut uid from firebase to store passing it as props\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.firebase.auth\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    createProject: (project) => dispatch(createProject(project))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject)\n"]},"metadata":{},"sourceType":"module"}